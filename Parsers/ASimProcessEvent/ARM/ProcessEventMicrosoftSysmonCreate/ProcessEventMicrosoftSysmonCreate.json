{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspaceName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "vimProcessCreateMicrosoftSysmon",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "ASIM Sysmon Process Creation Event Parser",
            "category": "Security",
            "FunctionAlias": "vimProcessCreateMicrosoftSysmon",
            "query": "// this is the parser for sysmon from Event table\n    let Sysmon11_Event=(){\n    Event \n        | where Source == \"Microsoft-Windows-Sysmon\" and EventID==1\n        | parse EventData with * '<Data Name=\"RuleName\">'RuleName // parsing the XML using the original fields name - for readibliy \n                            '</Data><Data Name=\"UtcTime\">'UtcTime\n                            '</Data><Data Name=\"ProcessGuid\">{'ProcessGuid\n                            '}</Data><Data Name=\"ProcessId\">'ProcessId:string\n                            '</Data><Data Name=\"Image\">'Image\n                            '</Data><Data Name=\"FileVersion\">'FileVersion\n                            '</Data><Data Name=\"Description\">'Description\n                            '</Data><Data Name=\"Product\">'Product\n                            '</Data><Data Name=\"Company\">'Company'</Data>' *\n        | extend  OriginalFileName = extract (@'\"OriginalFileName\">([^<]+)<',1,EventData) // this field exists in sysmon version 10.42 and above - using extact to avoid parsing failure\n        | parse EventData with *\n                            '<Data Name=\"CommandLine\">'CommandLine'</Data>'\n                            '<Data Name=\"CurrentDirectory\">'CurrentDirectory\n                            '</Data><Data Name=\"User\">'User\n                            '</Data><Data Name=\"LogonGuid\">{'LogonGuid\n                            '}</Data><Data Name=\"LogonId\">'LogonId\n                            '</Data><Data Name=\"TerminalSessionId\">'TerminalSessionId\n                            '</Data><Data Name=\"IntegrityLevel\">'IntegrityLevel\n                            '</Data><Data Name=\"Hashes\">'Hashes\n                            '</Data><Data Name=\"ParentProcessGuid\">{'ParentProcessGuid\n                            '}</Data><Data Name=\"ParentProcessId\">'ParentProcessId\n                            '</Data><Data Name=\"ParentImage\">'ParentImage\n                             '</Data><Data Name=\"ParentCommandLine\">'ParentCommandLine '</Data>'*\n        | parse EventData with * '<Data Name=\"ParentUser\">' ActorUsername '</Data>' * // this field exists in new versions of Sysmon\n        | extend    TargetProcessSHA1=extract(@'SHA1=(\\w+)',1, tostring(Hashes)),\n                    TargetProcessSHA256=extract(@'SHA256=(\\w+)',1, tostring(Hashes)),\n                    TargetProcessIMPHASH=extract(@'IMPHASH=(\\w+)',1,tostring(Hashes)), // add to the empty schema + Excel file\n                    TargetProcessMD5=extract(@'MD5=(\\w+)',1, tostring(Hashes))\n            // End of XML parse\n        | project-away Hashes\n        | extend \n                    EventType = \"ProcessCreated\",\n                    EventStartTime = todatetime(TimeGenerated),\n                    EventEndTime = todatetime(TimeGenerated),\n                    EventCount = int(1),\n                    EventVendor = \"Microsoft\",\n                    EventSchemaVersion = \"0.1.0\",\n                    EventProduct = \"Sysmon\",\n                    EventResult = 'Success',\n                    EventOriginalType = tostring(EventID),\n                    DvcOs = \"Windows\",\n                    TargetUserSessionId = tostring(LogonId),           \n                    TargetUsername = User,\n                    TargetProcessCommandLine = CommandLine,\n                    TargetProcessCurrentDirectory = CurrentDirectory\n        | project-rename \n                    EventMessage = RenderedDescription,\n                    DvcHostname = Computer,\n                    TargetUserSessionGuid = LogonGuid, \n                    TargetProcessId = ProcessId,\n                    TargetProcessGuid = ProcessGuid,\n                    TargetProcessName = Image,\n                    TargetProcessIntegrityLevel = IntegrityLevel,    \n                    TargetProcessCompany = Company,\n                    TargetProcessFileDescription = Description,\n                    TargetProcessFileVersion = FileVersion,\n                    TargetProcessFileProduct = Product,   \n                    ActingProcessId = ParentProcessId,\n                    ActingProcessGuid = ParentProcessGuid,                          \n                    ActingProcessCommandLine = ParentCommandLine,\n                    ActingProcessName = ParentImage\n        | extend \n                    TargetUsernameType = iff(isnotempty(TargetUsername),'Windows', ''),\n                    ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),\n                    // aliases\n                    User = TargetUsername,\n                    Process = TargetProcessName,\n                    Dvc = DvcHostname,\n                    Hash = coalesce(TargetProcessSHA256, TargetProcessSHA1, TargetProcessMD5) // which appears first - will be aliases to \"Hash\"\n        | project-away EventData, RuleName, ParameterXml\n        };\n// this is the parser for sysmon from WindowsEvent table\n   let ParsedProcessEvent_WindowsEvent=(){\n    WindowsEvent\n    | where Provider == \"Microsoft-Windows-Sysmon\" and EventID==1\n    | extend hash = split(EventData.Hashes,'=')\n    | extend hash_algorithm = tostring(hash[0]),\n                hash_value = tostring(hash[1])\n    | extend TargetProcessMD5 = iff(hash_algorithm == \"MD5\", hash_value, \"\"),\n            TargetProcessSHA1 =  iff(hash_algorithm == \"SHA1\", hash_value, \"\"),\n            TargetProcessSHA256 = iff(hash_algorithm == \"SHA256\", hash_value, \"\"),\n            TargetProcessIMPHASH = iff(hash_algorithm == \"IMPHASH\", hash_value, \"\")\n    | project-away hash, hash_algorithm\n    | extend \n            EventType = \"ProcessCreated\",\n            EventStartTime = todatetime(TimeGenerated),\n            EventEndTime = todatetime(TimeGenerated),\n            EventCount = int(1),\n            EventVendor = \"Microsoft\",\n            EventSchemaVersion = \"0.1.0\",\n            EventProduct = \"Sysmon\",\n            EventResult = 'Success',\n            EventOriginalType = tostring(EventID),\n            DvcOs = \"Windows\",\n            TargetUserSessionId = tostring(EventData.LogonId),           \n            TargetUsernameType = \"Windows\",\n            ActorUsernameType = \"Windows\",\n            TargetUsername = tostring(EventData.User),\n            TargetProcessCommandLine = tostring(EventData.CommandLine),\n            TargetProcessCurrentDirectory = tostring(EventData.CurrentDirectory),\n            EventMessage = tostring(EventData.RenderedDescription),\n            TargetUserSessionGuid = tostring(EventData.LogonGuid), \n            TargetProcessId = tostring(EventData.ProcessId),\n            TargetProcessGuid = tostring(EventData.ProcessGuid),\n            TargetProcessName = tostring(EventData.Image),\n            TargetProcessIntegrityLevel = tostring(EventData.IntegrityLevel),\n            TargetProcessCompany = tostring(EventData.Company),\n            TargetProcessFileDescription = tostring(EventData.Description),\n            TargetProcessFileVersion = tostring(EventData.FileVersion),\n            TargetProcessFileProduct = tostring(EventData.Product),\n            ActingProcessId = tostring(EventData.ParentProcessId),\n            ActingProcessGuid = tostring(EventData.ParentProcessGuid),                          \n            ActingProcessCommandLine = tostring(EventData.ParentCommandLine),\n            ActingProcessName = tostring(EventData.ParentImage),\n            ActorUsername = tostring(EventData.ParentUser)\n    | extend TargetUsernameType = iff(isnotempty(TargetUsername),'Windows', ''),\n             ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),\n             // aliases \n            DvcHostname = Computer,\n            Hash = hash_value,\n            User = ActorUsername\n    | project-away EventData\n            }; union isfuzzy=true ParsedProcessEvent_WindowsEvent, Sysmon11_Event\n",
            "version": 1
          }
        }
      ]
    }
  ]
}