Parser:
  Title: ASIM windows Event Registry Creation Event Parser
  Version: '0.1.0'
  LastUpdated: Aug 15, 2021
Product:
  Name: Microsoft Windows Event
Normalization:
  Schema: RegistryEvent
  Version: '0.1.0'
References:
- Title: ASIM Registry Schema
  Link: https://aka.ms/AzSentinelRegistryEventsDoc
- Title: ASIM
  Link: https:/aka.ms/AzSentinelNormalization
Description: ASIM Windows Event Registry Creation Event Parser (event number 4657)
ParserName: vimRegistryEventMicrosoftWindowsEvent
ParserQuery: | 
              let RegistryType = datatable (TypeCode:string,TypeName:string)
              [
                "%%1872", "Reg_None",
                "%%1873",	"Reg_Sz",
                "%%1874",	"Reg_Expand_Sz",
                "%%1875",	"Reg_Binary",
                "%%1876",	"Reg_DWord",
                "%%1879",	"Reg_Multi_Sz",
                "%%1883",	"Reg_QWord"
              ];
              let RegistryAction = datatable (EventOriginalSubType:string,EventType:string)
                [
                  "%%1904", "RegistryValueSet",
                  "%%1905", "RegistryValueSet",      
                  "%%1906", "RegistryValueDeleted"             
                ];
              let Hives = datatable (KeyPrefix:string,Hive:string)
                [
                  "MACHINE", "HKEY_LOCAL_MACHINE",
                  "USER", "HKEY_USERS",   
                ];
              let RegistryEvents=(){
                        WindowsEvent 
                        | where EventID == 4657
                        | extend
                        EventCount = int(1), 
                        EventVendor = 'Microsoft', 
                        EventProduct = 'Windows Event', 
                        EventSchemaVersion = '0.1.0', 
                        EventStartTime = todatetime(TimeGenerated), 
                        EventEndTime = todatetime(TimeGenerated),
                        EventOriginalType = tostring(EventID), 
                        ObjectName = tostring(EventData.ObjectName),
                        OldValue = tostring(EventData.OldValue),
                        NewValue = tostring(EventData.NewValue),
                        RegistryValue = tostring(EventData.ObjectValueName),
                        NewValueType = tostring(EventData.NewValueType),
                        OldValueType = tostring(EventData.OldValueType)
              | extend
                          EventOriginalSubType = tostring(EventData.OperationType)
                          //EventOriginalUid = EventOriginId - No EventOriginId field in WindowsEvent
              | lookup RegistryAction on EventOriginalSubType
                      // Registry
                      // Normalize key hive
                      | parse ObjectName with "\\REGISTRY\\" KeyPrefix "\\" Key
                      | lookup Hives on KeyPrefix
                      | extend RegistryKey = strcat (Hive, "\\", Key)
                      | project-away Hive, Key, KeyPrefix, ObjectName
                      | extend
                        RegistryValueData = iff (EventOriginalSubType == "%%1906", OldValue, NewValue), 
                        RegistryPreviousKey = iff (EventOriginalSubType == "%%1905", RegistryKey, ""),
                        RegistryPreviousValue = iff (EventOriginalSubType == "%%1905", RegistryValue, ""),
                        RegistryPreviousValueData = iff (EventOriginalSubType == "%%1905", OldValue, "")
                      | lookup RegistryType on $left.NewValueType == $right.TypeCode | project-rename RegistryValueType = TypeName
                      | lookup RegistryType on $left.OldValueType == $right.TypeCode | project-rename RegistryPreviousValueType = TypeName
                      | project-away OldValue, NewValue, OldValueType, NewValueType, EventOriginalSubType
                      // Device
                      | extend
                          // DvcId = SourceComputerId, No such fields in WindowsEvent
                          DvcHostname = Computer,
                          DvcOs = 'Windows',
                      // User
                          ActorUserId = tostring(EventData.SubjectUserSid), 
                          ActorSessionId = tostring( toint(EventData.SubjectLogonId)), 
                          ActorDomainName = tostring(EventData.SubjectDomainName),
                          ActorUserIdType = 'SID',
                          ActorUsername = tostring(iff (EventData.SubjectDomainName == '-', EventData.SubjectUserName, strcat(EventData.SubjectDomainName, @"\" , EventData.SubjectUserName))), 
                          ActorUsernameType = iff(tostring(EventData.ActorDomainName) == '-','Simple', 'Windows'),              
                      // Process 
                          ActingProcessId = tostring( toint(EventData.ProcessId)), 
                          ActingProcessName = tostring(EventData.ProcessName)
                    | extend     
                    // -- Aliases
                          User = ActorUsername,
                          UserId = ActorUserId,
                          Dvc = DvcHostname,
                          Process = ActingProcessName
                      }; RegistryEvents