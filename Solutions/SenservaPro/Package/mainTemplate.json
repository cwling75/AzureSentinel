{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Nikhil Tripathi - v-ntripathi@microsoft.com",
    "comments": "Solution template for SenservaPro"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Region to deploy solution resources"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "SenservaPro",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "workbook2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook2-name": {
      "type": "string",
      "defaultValue": "SenservaPro",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "workbook3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook3-name": {
      "type": "string",
      "defaultValue": "SenservaPro",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic6-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic7-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic8-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic9-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic10-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic11-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic12-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic13-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic14-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic15-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "e705634b-375c-4c88-a5a0-d2be6d01a3df"
    }
  },
  "variables": {
    "SenservaProAnalyticsWorkbook_workbook": "SenservaProAnalyticsWorkbook_workbook",
    "_SenservaProAnalyticsWorkbook_workbook": "[variables('SenservaProAnalyticsWorkbook_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "SenservaProMultipleWorkspaceWorkbook_workbook": "SenservaProMultipleWorkspaceWorkbook_workbook",
    "_SenservaProMultipleWorkspaceWorkbook_workbook": "[variables('SenservaProMultipleWorkspaceWorkbook_workbook')]",
    "SenservaProSecureScoreMultiTenantWorkbook_workbook": "SenservaProSecureScoreMultiTenantWorkbook_workbook",
    "_SenservaProSecureScoreMultiTenantWorkbook_workbook": "[variables('SenservaProSecureScoreMultiTenantWorkbook_workbook')]",
    "AdminMFA_AnalyticalRules": "AdminMFA_AnalyticalRules",
    "_AdminMFA_AnalyticalRules": "[variables('AdminMFA_AnalyticalRules')]",
    "AppsNoClientCredentials_AnalyticalRules": "AppsNoClientCredentials_AnalyticalRules",
    "_AppsNoClientCredentials_AnalyticalRules": "[variables('AppsNoClientCredentials_AnalyticalRules')]",
    "BlockLegacyAuthentication_AnalyticalRules": "BlockLegacyAuthentication_AnalyticalRules",
    "_BlockLegacyAuthentication_AnalyticalRules": "[variables('BlockLegacyAuthentication_AnalyticalRules')]",
    "GlobaAdminRoleOverlap_AnalyticalRules": "GlobaAdminRoleOverlap_AnalyticalRules",
    "_GlobaAdminRoleOverlap_AnalyticalRules": "[variables('GlobaAdminRoleOverlap_AnalyticalRules')]",
    "MFARegistration_AnalyticalRules": "MFARegistration_AnalyticalRules",
    "_MFARegistration_AnalyticalRules": "[variables('MFARegistration_AnalyticalRules')]",
    "NonAdminGuest_AnalyticalRules": "NonAdminGuest_AnalyticalRules",
    "_NonAdminGuest_AnalyticalRules": "[variables('NonAdminGuest_AnalyticalRules')]",
    "NotUsingClientCredentials_AnalyticalRules": "NotUsingClientCredentials_AnalyticalRules",
    "_NotUsingClientCredentials_AnalyticalRules": "[variables('NotUsingClientCredentials_AnalyticalRules')]",
    "OneGlobalAdmin_AnalyticalRules": "OneGlobalAdmin_AnalyticalRules",
    "_OneGlobalAdmin_AnalyticalRules": "[variables('OneGlobalAdmin_AnalyticalRules')]",
    "PasswordAgePolicyNew_AnalyticalRules": "PasswordAgePolicyNew_AnalyticalRules",
    "_PasswordAgePolicyNew_AnalyticalRules": "[variables('PasswordAgePolicyNew_AnalyticalRules')]",
    "SearchStaleLastPasswordChange_AnalyticalRules": "SearchStaleLastPasswordChange_AnalyticalRules",
    "_SearchStaleLastPasswordChange_AnalyticalRules": "[variables('SearchStaleLastPasswordChange_AnalyticalRules')]",
    "SelfServicePasswordReset_AnalyticalRules": "SelfServicePasswordReset_AnalyticalRules",
    "_SelfServicePasswordReset_AnalyticalRules": "[variables('SelfServicePasswordReset_AnalyticalRules')]",
    "SignInRiskPolicy_AnalyticalRules": "SignInRiskPolicy_AnalyticalRules",
    "_SignInRiskPolicy_AnalyticalRules": "[variables('SignInRiskPolicy_AnalyticalRules')]",
    "ThirdPartyIntegratedApps_AnalyticalRules": "ThirdPartyIntegratedApps_AnalyticalRules",
    "_ThirdPartyIntegratedApps_AnalyticalRules": "[variables('ThirdPartyIntegratedApps_AnalyticalRules')]",
    "UserAccountDisabled_AnalyticalRules": "UserAccountDisabled_AnalyticalRules",
    "_UserAccountDisabled_AnalyticalRules": "[variables('UserAccountDisabled_AnalyticalRules')]",
    "UserRiskPolicy_AnalyticalRules": "UserRiskPolicy_AnalyticalRules",
    "_UserRiskPolicy_AnalyticalRules": "[variables('UserRiskPolicy_AnalyticalRules')]",
    "ApplicationNotUsingClientCredentials_HuntingQueries": "ApplicationNotUsingClientCredentials_HuntingQueries",
    "_ApplicationNotUsingClientCredentials_HuntingQueries": "[variables('ApplicationNotUsingClientCredentials_HuntingQueries')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "AzureSecureScoreAdminMFAV2_HuntingQueries": "AzureSecureScoreAdminMFAV2_HuntingQueries",
    "_AzureSecureScoreAdminMFAV2_HuntingQueries": "[variables('AzureSecureScoreAdminMFAV2_HuntingQueries')]",
    "AzureSecureScoreBlockLegacyAuthentication_HuntingQueries": "AzureSecureScoreBlockLegacyAuthentication_HuntingQueries",
    "_AzureSecureScoreBlockLegacyAuthentication_HuntingQueries": "[variables('AzureSecureScoreBlockLegacyAuthentication_HuntingQueries')]",
    "AzureSecureScoreIntegratedApps_HuntingQueries": "AzureSecureScoreIntegratedApps_HuntingQueries",
    "_AzureSecureScoreIntegratedApps_HuntingQueries": "[variables('AzureSecureScoreIntegratedApps_HuntingQueries')]",
    "AzureSecureScoreMFARegistrationV2_HuntingQueries": "AzureSecureScoreMFARegistrationV2_HuntingQueries",
    "_AzureSecureScoreMFARegistrationV2_HuntingQueries": "[variables('AzureSecureScoreMFARegistrationV2_HuntingQueries')]",
    "AzureSecureScoreOneAdmin_HuntingQueries": "AzureSecureScoreOneAdmin_HuntingQueries",
    "_AzureSecureScoreOneAdmin_HuntingQueries": "[variables('AzureSecureScoreOneAdmin_HuntingQueries')]",
    "AzureSecureScorePWAgePolicyNew_HuntingQueries": "AzureSecureScorePWAgePolicyNew_HuntingQueries",
    "_AzureSecureScorePWAgePolicyNew_HuntingQueries": "[variables('AzureSecureScorePWAgePolicyNew_HuntingQueries')]",
    "AzureSecureScoreRoleOverlap_HuntingQueries": "AzureSecureScoreRoleOverlap_HuntingQueries",
    "_AzureSecureScoreRoleOverlap_HuntingQueries": "[variables('AzureSecureScoreRoleOverlap_HuntingQueries')]",
    "AzureSecureScoreSelfServicePasswordReset_HuntingQueries": "AzureSecureScoreSelfServicePasswordReset_HuntingQueries",
    "_AzureSecureScoreSelfServicePasswordReset_HuntingQueries": "[variables('AzureSecureScoreSelfServicePasswordReset_HuntingQueries')]",
    "AzureSecureScoreSigninRiskPolicy_HuntingQueries": "AzureSecureScoreSigninRiskPolicy_HuntingQueries",
    "_AzureSecureScoreSigninRiskPolicy_HuntingQueries": "[variables('AzureSecureScoreSigninRiskPolicy_HuntingQueries')]",
    "AzureSecureScoreUserRiskPolicy_HuntingQueries": "AzureSecureScoreUserRiskPolicy_HuntingQueries",
    "_AzureSecureScoreUserRiskPolicy_HuntingQueries": "[variables('AzureSecureScoreUserRiskPolicy_HuntingQueries')]",
    "NonAdminGuest_HuntingQueries": "NonAdminGuest_HuntingQueries",
    "_NonAdminGuest_HuntingQueries": "[variables('NonAdminGuest_HuntingQueries')]",
    "ServicePrincipalNotUsingClientCredentials_HuntingQueries": "ServicePrincipalNotUsingClientCredentials_HuntingQueries",
    "_ServicePrincipalNotUsingClientCredentials_HuntingQueries": "[variables('ServicePrincipalNotUsingClientCredentials_HuntingQueries')]",
    "StaleLastPasswordChange_HuntingQueries": "StaleLastPasswordChange_HuntingQueries",
    "_StaleLastPasswordChange_HuntingQueries": "[variables('StaleLastPasswordChange_HuntingQueries')]",
    "UserAccountDisabled_HuntingQueries": "UserAccountDisabled_HuntingQueries",
    "_UserAccountDisabled_HuntingQueries": "[variables('UserAccountDisabled_HuntingQueries')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "SenservaProConnector": "SenservaProConnector",
    "_SenservaProConnector": "[variables('SenservaProConnector')]",
    "sourceId": "senservallc.senservapro4sentinel",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2020-02-12",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Security Overview\\n---\\n\\nThis workbook contains information from your SenservaPro scanner. This will include all tenants that you manage and are included in your scanner configuration\\n\\n\\nBelow are some metrics to help visualize the information SenservaPro collects and how it can be used for reporting.\\n\\n\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let min_t = toscalar (ago(1d));\\nlet max_t = toscalar (now());\\nSenservaPro_CL\\n| make-series num=count() default=0 on TimeGenerated in range(min_t, max_t, 30m) by ControlName_s\\n| render timechart\",\"size\":1,\"title\":\"Count of Controls Received Across All Tenants over Past 24 Hours\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SenservaPro_CL\\r\\n| summarize Total=count() by Type=Group_s\\r\\n| render columnchart \\r\\n\",\"size\":0,\"title\":\"Count of Security Issues by Category Across all Tenants\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 1\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SenservaPro_CL\\r\\n| where CEFLoggingLevel_d > 3\\r\\n| summarize count() by ControlName_s\\r\\n| top 10 by ControlName_s\\r\\n| render piechart \",\"size\":0,\"title\":\"Count of Top Security Controls Across All Tenants (Warning Severity or Higher))\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SenservaPro_CL\\r\\n| summarize Total_Controls=dcount(ControlName_s) by TenantId=TenantId_s, Tenant_Name=TenantDisplayName_s\\r\\n| order by Total_Controls desc  \",\"size\":0,\"title\":\"Ranked Tenants in Need of Review by Unique Controls\",\"timeContext\":{\"durationMs\":86400000},\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 4\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SenservaPro_CL\\r\\n| summarize Total_Count=dcount(ControlName_s) by Value_s, Home_Tenant=TenantDisplayName_s\\r\\n| order by Total_Count desc\\r\\n| top 10 by Total_Count\\r\\n| project JSON_Data=parse_json(Value_s), Home_Tenant, Total_Count\\r\\n\",\"size\":0,\"title\":\"Top 10 Items by Control Count\",\"timeContext\":{\"durationMs\":86400000},\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 5\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let levels=dynamic({\\\"0\\\":\\\"Debug\\\", \\\"1\\\":\\\"Informational\\\", \\\"2\\\":\\\"Notice\\\", \\\"3\\\":\\\"Warning\\\", \\\"4\\\":\\\"Errors\\\", \\\"5\\\":\\\"High\\\", \\\"6\\\":\\\"Alert\\\", \\\"7\\\":\\\"Emergency\\\"});\\r\\nSenservaPro_CL\\r\\n| order by CEFLoggingLevel_d\\r\\n| project TimeGenerated, Control_Name=ControlName_s, Severity=levels[tostring(toint(CEFLoggingLevel_d))], Senserva_Tags=Value_s, Description=Description_s\\r\\n| render table \",\"size\":0,\"title\":\"Controls Ordered By Severity\",\"timeContext\":{\"durationMs\":86400000},\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let min_t = toscalar (ago(1d));\\r\\nlet max_t = toscalar (now());\\r\\nSenservaPro_CL\\r\\n| where CEFLoggingLevel_d > 3\\r\\n| summarize ControlsNum=count() by ControlName_s, TimeGenerated\\r\\n| make-series ControlCount=avg(ControlsNum) default=0 on TimeGenerated in range(min_t, max_t, 1h)\\r\\n| render timechart\",\"size\":0,\"title\":\"Average Control Count Received Over Past 24 Hours (Warning Severity or Higher)\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 7\"}],\"fromTemplateId\":\"sentinel-SenservaProAnalyticsWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook2-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2020-02-12",
      "properties": {
        "displayName": "[concat(parameters('workbook2-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Using SenservaPro Across Multiple Log Analytics Workspaces\\n---\\n\\nThis workbook helps serve as a guide for users who are using SenservaPro across multiple instances of SenservaPro. These users generally have multiple tenants or a geographical data location requirement. \\nMore information can be found at https://docs.microsoft.com/azure/sentinel/extend-sentinel-across-workspaces-tenants\\n\\n\\nSelect one workspace as the main conduit to create a unified view. Create a Sentinel Function to provide an easy alias for your queries.\\nMore information about Sentinel Functions can be found at https://docs.microsoft.com/azure/azure-monitor/logs/functions\"},\"name\":\"text - 2\"},{\"type\":1,\"content\":{\"json\":\"As an example, create a Sentinel function to get from a Workspace called 'LogAnalyticsSenservaTest'\\r\\n\\r\\n>union \\r\\n>(workspace(\\\"LogAnalyticsSenservaTest\\\").SenservaPro_CL), (SenservaPro_CL)\\r\\n\\r\\nSave this with an alias of 'SenservaProUnionQuery'. Query all your workspaces with the alias instead 'SenservaPro_CL'\\r\\n\\r\\n>SenservaProUnionQuery\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union \\r\\n(workspace(\\\"LogAnalyticsSenservaTest\\\").SenservaPro_CL), (SenservaPro_CL)\\r\\n| where ControlName_s != ''\\r\\n| order by TimeGenerated\\r\\n| top 3 by TimeGenerated\\r\\n| project ControlName_s, JSONData=parse_json(Value_s)\",\"size\":0,\"title\":\"Example using Workspace Union Query\",\"timeContext\":{\"durationMs\":86400000},\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 3\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SenservaProUnionQuery\\n| where ControlName_s != ''\\n| order by TimeGenerated\\n| top 3 by TimeGenerated\\n| project ControlName_s, JSONData=parse_json(Value_s)\",\"size\":1,\"title\":\"Example using Sentinel Function\",\"timeContext\":{\"durationMs\":86400000},\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 2\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":1,\"content\":{\"json\":\"SenservaPro provides the Log Analytics Workspace Name as part of the output data. The Sentinel Function alias won't prevent you from knowing the Workspace source of the data.\"},\"name\":\"text - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union \\r\\n(workspace(\\\"LogAnalyticsSenservaTest\\\").SenservaPro_CL), (SenservaPro_CL)\\r\\n| where Group_s == 'Users'\\r\\n| extend ControlNameSource = strcat(LogAnalyticsWorkspaceDisplayName_s, '.', ControlName_s)\\r\\n| summarize count() by ControlNameSource\\r\\n| top 10 by ControlNameSource\\r\\n| render piechart \\r\\n\",\"size\":0,\"title\":\"Example Workspace Union Query - Top User Controls Count (Name.Workspace)\",\"timeContext\":{\"durationMs\":86400000},\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 5\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SenservaProUnionQuery\\r\\n| where Group_s == 'Users'\\r\\n| extend ControlNameSource = strcat(LogAnalyticsWorkspaceDisplayName_s, '.', ControlName_s)\\r\\n| summarize count() by ControlNameSource\\r\\n| top 10 by ControlNameSource\\r\\n| render piechart\",\"size\":0,\"title\":\"Example Sentinel Function - Top User Controls Count (Name.Workspace)\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"query - 6\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let min_t = toscalar(ago(12h));\\r\\nlet max_t = toscalar(now());\\r\\nunion \\r\\n(workspace(\\\"LogAnalyticsSenservaTest\\\").SenservaPro_CL), (SenservaPro_CL)\\r\\n| where CEFLoggingLevel_d == 3\\r\\n| extend ControlNameSource = strcat(ControlName_s, '.', LogAnalyticsWorkspaceDisplayName_s)\\r\\n| make-series num=count() default=0 on TimeGenerated in range(min_t, max_t, 15m) by ControlNameSource\\r\\n| render timechart \",\"size\":0,\"title\":\"Example Workspace Union Query - High Severity Controls Count Over 12 Hours (Name.Workspace)\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let min_t = toscalar(ago(12h));\\r\\nlet max_t = toscalar(now());\\r\\nSenservaProUnionQuery\\r\\n| where CEFLoggingLevel_d == 3\\r\\n| extend ControlNameSource = strcat(ControlName_s, '.', LogAnalyticsWorkspaceDisplayName_s)\\r\\n| make-series num=count() default=0 on TimeGenerated in range(min_t, max_t, 15m) by ControlNameSource\\r\\n| render timechart \",\"size\":0,\"title\":\"Example Sentinel Function - High Severity Controls Count Over 12 Hours (Name.Workspace)\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 8\"}],\"fromTemplateId\":\"sentinel-SenservaProMultipleWorkspaceWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook3-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2020-02-12",
      "properties": {
        "displayName": "[concat(parameters('workbook3-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Microsoft Secure Score (Multi-Tenant)\\n---\\n\\nThis Workbook helps visulaize your Microsoft Secure Scores across multiple tenants\\n\\nHigher scores mean the tenant is more secure by Microsoft's metrics\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SenservaPro_CL\\n| where ControlName_s contains 'SecureScore' \\n| distinct ControlName_s, Value_s, TenantId_s, TenantDisplayName_s\\n| extend ValueJson=parse_json(Value_s)\\n| mv-expand ValueJson\\n| where ValueJson.Tag contains 'Score'\\n| extend Score=toint(ValueJson.Value)\\n| summarize Total=sum(Score) by TenantDisplayName_s\\n| render barchart \\n\\n\",\"size\":1,\"title\":\"Total Microsoft Secure Score per Tenant\",\"timeContext\":{\"durationMs\":43200000},\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SenservaPro_CL\\r\\n| where ControlName_s contains 'SecureScore'\\r\\n| where TimeGenerated > ago(1d)\\r\\n| where strlen(TenantDisplayName_s) > 0\\r\\n| extend ValueJson=parse_json(Value_s)\\r\\n| mv-expand ValueJson\\r\\n| where ValueJson.Tag contains 'Score'\\r\\n| extend Score=tostring(ValueJson.Value)\\r\\n| distinct TenantDisplayName_s, ControlName_s, Score, Description_s, Reference_s, Value_s\\r\\n| project Tenant_Name=TenantDisplayName_s, Control=ControlName_s, Score=Score, Description=Description_s, Reference_Link=Reference_s, Value=Value_s\",\"size\":0,\"title\":\"Secure Score Data\",\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 2\"}],\"fromTemplateId\":\"sentinel-SenservaProSecureScoreMultiTenantWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for requiring multi-factor authentication (MFA) for all administrative roles makes it harder\n for attackers to access accounts. Administrative roles have higher permissions than typical users.\n If any of those accounts are compromised, critical devices and data is open to attack.",
        "displayName": "Azure secure score admin MFA",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreAdminMFAV2'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Searches for logs of AD Applications without Client Credentials (Key or Secret)",
        "displayName": "SenservaPro AD Applications Not Using Client Credentials",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'ApplicationNotUsingClientCredentials'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for most compromising sign-in attempts come from legacy authentication. \n Older office clients such as Office 2010 do not support modern authentication \n and use legacy protocols such as IMAP, SMTP, and POP3. \n Legacy authentication does not support multi-factor authentication (MFA).\n Even if an MFA policy is configured in your environment, bad actors can \n bypass these enforcements through legacy protocols.",
        "displayName": "Azure secure score block legacy authentication",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreBlockLegacyAuthentication'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CredentialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for accounts that have been assigned Global Administrator do not need other roles assigned. \n  Global Administrators have access to all aspects of Azure",
        "displayName": "Azure secure score role overlap",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreRoleOverlap'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for multi-factor authentication (MFA) helps protect devices and data \n that are accessible to these users. Adding more authentication methods,\n such as the Microsoft Authenticator app or a phone number, increases the level of protection \n if one factor is compromised.",
        "displayName": "Azure secure score MFA registration V2",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreMFARegistrationV2'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CredentialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for guest is not an admin in Azure",
        "displayName": "Non-admin guest",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'UserNonAdminGuest'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "Low",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for an service principal is not using a client certificate or secret is not secure. \n It is recommended that you review your needs and use an Authentication method \n for sign-in.",
        "displayName": "Service principal not using client credentials",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'ServicePrincipalNotUsingClientCredentials'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for having 1 Global Administrator reduces the surface area of attack for your Azure tenant, \n but sets up a single point of failure for the whole tenant. Global Administrators have access\n to all aspects of Azure",
        "displayName": "Azure secure score one admin",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreOneAdmin'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for having found that when periodic password resets are enforced,\n passwords become less secure. Users tend to pick a weaker password and vary it slightly for each reset. \n If a user creates a strong password (long, complex and without any pragmatic words present)\n it should remain just as strong in the future as it is today. It is Microsoft's official security position\n to not expire passwords periodically without a specific reason, and recommends \n that cloud-only tenants set the password policy to never expire.",
        "displayName": "Azure secure score PW age policy new",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScorePWAgePolicyNew'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CredentialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for stale last password change",
        "displayName": "Stale last password change",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'UserStaleLastPasswordChange'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "Low",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic11-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for requires you to setup Azure AD Connect. \n Azure AD Connect is free with all Azure Subscriptions",
        "displayName": "Azure Secure Score Self Service Password Reset",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreSelfServicePasswordReset'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic12-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for an active Azure Premium P2 license is required to use and edit this policy. \n You will be required to have setup the MFA Policy before activating this policy",
        "displayName": "Azure secure score sign in risk policy",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreSignInRiskPolicy'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic13-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for your services by regulating the access of third-party integrated apps. \n Only allow access to necessary apps that support robust security controls. \n Third-party applications are not created by Microsoft, \n so there is a possibility they could be used for malicious purposes like exfiltrating data from your tenancy.\n Attackers can maintain persistent access to your services through these integrated apps, without relying on compromised accounts.",
        "displayName": "Third party integrated apps",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreIntegratedApps'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Exfiltration"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic14-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for account is Disabled. Does not effect score as its easily enabled.",
        "displayName": "UserAccountDisabled",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'UserDisabled'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic15-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This query searches for an active Azure Premium P2 license is required to use and edit this policy. \n You will be required to have setup the MFA Policy before activating this policy",
        "displayName": "Azure secure score user risk policy",
        "enabled": false,
        "query": "SenservaPro_CL\n| where ControlName_s == 'AzureSecureScoreUserRiskPolicy'\n",
        "queryFrequency": "PT6H",
        "queryPeriod": "PT6H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Application not using client credentials",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'ApplicationNotUsingClientCredentials'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for application not using a client certificate or secret is not secure.'   "
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure secure score admin MFA V2",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'Azure Secure Score AdminMFAV2'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for requiring multi-factor authentication (MFA) for all administrative roles makes it harder\n for attackers to access accounts. Administrative roles have higher permissions than typical users."
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure secure score block legacy authentication",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScoreBlockLegacyAuthentication'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for most compromising sign-in attempts come from legacy authentication. \n Older office clients such as Office 2010 do not support modern authentication \n and use legacy protocols such as IMAP, SMTP, and POP3."
              },
              {
                "name": "tactics",
                "value": "CredentialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 4",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure secure score integrated apps",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScoreIntegratedApps'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for your services by regulating the access of third-party integrated apps. \nOnly allow access to necessary apps that support robust security controls."
              },
              {
                "name": "tactics",
                "value": "Exfiltration"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 5",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure secure score MFA registration V2",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScoreMFARegistrationV2'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for multi-factor authentication (MFA) helps protect devices and data \n that are accessible to these users. Adding more authentication methods, increases the level of protection \n if one factor is compromised."
              },
              {
                "name": "tactics",
                "value": "CredentialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 6",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure secure score one admin",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScoreOneAdmin'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for having 1 Global Administrator reduces the surface area of attack for your Azure tenant, \n but sets up a single point of failure for the whole tenant. Global Administrators have access\n to all aspects of Azure"
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 7",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure secure score PW age policy new",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScorePWAgePolicyNew'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for having found that when periodic password resets are enforced,\n passwords become less secure. Users tend to pick a weaker password and vary it slightly for each reset."
              },
              {
                "name": "tactics",
                "value": "CredentialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 8",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure secure score role overlap",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScoreRoleOverlap'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for accounts that have been assigned Global Administrator do not need other roles assigned. \n  Global Administrators have access to all aspects of Azure"
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 9",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure Secure Score Self Service Password Reset",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScoreSelfServicePasswordReset'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for requires you to setup Azure AD Connect. \n Azure AD Connect is free with all Azure Subscriptions"
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 10",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure secure score sign in risk policy",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScoreSigninRiskPolicy'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for an active Azure Premium P2 license is required to use and edit this policy. \n You will be required to have setup the MFA Policy before activating this policy"
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 11",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Azure secure score user risk policy",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'AzureSecureScoreUserRiskPolicy'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for an active Azure Premium P2 license is required to use and edit this policy. \n You will be required to have setup the MFA Policy before activating this policy"
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 12",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Non-admin guest",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'UserNonAdminGuest'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for guest is not an admin in Azure"
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 13",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Service principal not using client credentials",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'ServicePrincipalNotUsingClientCredentials'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for an service principal is not using a client certificate or secret is not secure. \n It is recommended that you review your needs and use an Authentication method \n for sign-in."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 14",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Stale last password change",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'UserStaleLastPasswordChange'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for stale last password change"
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "SenservaPro Hunting Query 15",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "UserAccountDisabled",
            "category": "Hunting Queries",
            "query": "let timeframe = 14d;\nSenservaPro_CL\n| where TimeGenerated >= ago(timeframe)\n| where ControlName_s == 'UserDisabled'\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query searches for account is Disabled. Does not effect score as its easily enabled."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        }
      ]
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "SenservaPro (Preview)",
          "publisher": "Senserva",
          "descriptionMarkdown": "The SenservaPro data connector provides a viewing experience for your SenservaPro scanning logs. View dashboards of your data, use queries to hunt & explore, and create custom alerts.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "SenservaPro_CL",
              "baseQuery": "SenservaPro_CL"
            }
          ],
          "sampleQueries": [
            {
              "description": "All SenservaPro data",
              "query": "SenservaPro_CL"
            },
            {
              "description": "All SenservaPro data received in the last 24 hours",
              "query": "SenservaPro_CL\n            | where TimeGenerated > ago(1d)"
            },
            {
              "description": "All SenservaPro data with 'High' Severity, ordered by the most recent received",
              "query": "SenservaPro_CL\n            | where Severity == 3\n            | order by TimeGenerated desc"
            },
            {
              "description": "All 'ApplicationNotUsingClientCredentials' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'ApplicationNotUsingClientCredentials'"
            },
            {
              "description": "All 'AzureSecureScoreAdminMFAV2' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScoreAdminMFAV2'"
            },
            {
              "description": "All 'AzureSecureScoreBlockLegacyAuthentication' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScoreBlockLegacyAuthentication'"
            },
            {
              "description": "All 'AzureSecureScoreIntegratedApps' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScoreIntegratedApps'"
            },
            {
              "description": "All 'AzureSecureScoreMFARegistrationV2' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScoreMFARegistrationV2'"
            },
            {
              "description": "All 'AzureSecureScoreOneAdmin' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScoreOneAdmin'"
            },
            {
              "description": "All 'AzureSecureScorePWAgePolicyNew' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScorePWAgePolicyNew'"
            },
            {
              "description": "All 'AzureSecureScoreRoleOverlap' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScoreRoleOverlap'"
            },
            {
              "description": "All 'AzureSecureScoreSelfServicePasswordReset' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScoreSelfServicePasswordReset'"
            },
            {
              "description": "All 'AzureSecureScoreSigninRiskPolicy' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScoreSignInRiskPolicy'"
            },
            {
              "description": "All 'AzureSecureScoreUserRiskPolicy' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'AzureSecureScoreUserRiskPolicy'"
            },
            {
              "description": "All 'Disabled' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'UserDisabled'"
            },
            {
              "description": "All 'NonAdminGuest' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'UserNonAdminGuest'"
            },
            {
              "description": "All 'ServicePrincipalNotUsingClientCredentials' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'ServicePrincipalNotUsingClientCredentials'"
            },
            {
              "description": "All 'StaleLastPasswordChange' controls received in the last 14 days",
              "query": "let timeframe = 14d;\n            SenservaPro_CL\n            | where TimeGenerated >= ago(timeframe)\n            | where ControlName_s == 'UserStaleLastPasswordChange'"
            }
          ],
          "dataTypes": [
            {
              "name": "SenservaPro_CL",
              "lastDataReceivedQuery": "SenservaPro_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "SenservaPro_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Visit [Senserva Setup](https://www.senserva.com/senserva-setup/) for information on setting up the Senserva data connection, support, or any other questions. The Senserva installation will configure a Log Analytics Workspace for output. Deploy Azure Sentinel onto the configured Log Analytics Workspace to finish the data connection setup by following [this onboarding guide.](https://docs.microsoft.com/azure/sentinel/quickstart-onboard)",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "1. Setup the data connection"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.1.0",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "SenservaPro",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Nikhil Tripathi",
          "email": "v-ntripathi@microsoft.com"
        },
        "support": {
          "name": "Senserva",
          "email": "support@senserva.com",
          "tier": "Partner",
          "link": "https://www.senserva.com/contact/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_SenservaProAnalyticsWorkbook_workbook')]",
              "version": "1.1.0"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_SenservaProMultipleWorkspaceWorkbook_workbook')]",
              "version": "1.1.0"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_SenservaProSecureScoreMultiTenantWorkbook_workbook')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_AdminMFA_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_AppsNoClientCredentials_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BlockLegacyAuthentication_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_GlobaAdminRoleOverlap_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_MFARegistration_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NonAdminGuest_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NotUsingClientCredentials_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_OneGlobalAdmin_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_PasswordAgePolicyNew_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_SearchStaleLastPasswordChange_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_SelfServicePasswordReset_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_SignInRiskPolicy_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_ThirdPartyIntegratedApps_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_UserAccountDisabled_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_UserRiskPolicy_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ApplicationNotUsingClientCredentials_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScoreAdminMFAV2_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScoreBlockLegacyAuthentication_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScoreIntegratedApps_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScoreMFARegistrationV2_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScoreOneAdmin_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScorePWAgePolicyNew_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScoreRoleOverlap_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScoreSelfServicePasswordReset_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScoreSigninRiskPolicy_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_AzureSecureScoreUserRiskPolicy_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NonAdminGuest_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_ServicePrincipalNotUsingClientCredentials_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_StaleLastPasswordChange_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_UserAccountDisabled_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_SenservaProConnector')]",
              "version": "1.1.0"
            }
          ]
        },
        "firstPublishDate": "2021-10-20",
        "providers": [
          "Senserva Pro"
        ],
        "categories": {
          "domains": [
            "Compliance"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
