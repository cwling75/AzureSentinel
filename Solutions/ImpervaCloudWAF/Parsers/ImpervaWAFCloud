// Usage Instruction : 
// Paste below query in log analytics, click on Save button and select as Function from drop down by specifying function name and alias as ImpervaWAFCloud.
// Function usually takes 10-15 minutes to activate. You can then use function alias from any other queries (e.g. ImpervaWAFCloud | take 10).
// Reference : Using functions in Azure monitor log queries : https://docs.microsoft.com/azure/azure-monitor/log-query/functions
ImpervaWAFCloud_CL 
| extend    EventVendor = EventVendor_s,
            EventProduct = EventProduct_s,
            EventType = EventType_s,
            EventSeverity = column_ifexists('severity_s', ''),
            DvcAction = column_ifexists('act_s', ''),
            NetworkApplicationProtocol = column_ifexists('app_s', ''),
            Country = column_ifexists('ccode_s', ''),
            City = column_ifexists('cicode_s', ''),
            HttpStatusCode = column_ifexists('cn1_s', ''),
            SrcPortNumber = column_ifexists('cpt_s', ''),
            AccountName = column_ifexists('Customer_s', ''),
            RequestId = column_ifexists('deviceExternalId_s', ''),
            PoPName = column_ifexists('deviceFacility_s', ''),
            BrowserType = column_ifexists('dproc_s', ''),
            EventEndTime = column_ifexists('end_s', ''),
            NetworkSessionId = column_ifexists('fileId_s', ''),
            PostBody = column_ifexists('postbody_s', ''),
            QueryString = column_ifexists('qstr_s', ''),
            UrlOriginal = column_ifexists('request_s', ''),
            HttpUserAgentOriginal = column_ifexists('requestClientApplication_s', ''),
            HttpRequestMethod = column_ifexists('requestMethod_s', ''),
            DstIpAddr = column_ifexists('sip_s', ''),
            SiteID = column_ifexists('siteid_s', ''),
            DstDomainHostname = column_ifexists('sourceServiceName_s', ''),
            DstPortNumber = column_ifexists('spt_s', ''),
            SrcIpAddr = column_ifexists('src_s', ''),
            EventStartTime = column_ifexists('start_s', ''),
            AccountID = column_ifexists('suid_s', ''),
            NetworkApplicationProtocoVersion = column_ifexists('ver_s', ''),
            HttpRequestXff = column_ifexists('xff_s', ''),
            CaptchaSupport = column_ifexists('CapSupport_s', ''),
            ClientApp = column_ifexists('clapp_s', ''),
            ClientAppSig = column_ifexists('clappsig_s', ''),
            CookiesSupport = column_ifexists('COSupport_s', ''),
            SrcGeoLatitude = column_ifexists('latitude_s', ''),
            SrcGeoLongitude = column_ifexists('longitude_s', ''),
            VisitorID = column_ifexists('VID_g', '')
| project TimeGenerated, EventVendor, EventProduct, EventType, EventSeverity, DvcAction, NetworkApplicationProtocol, Country, City, HttpStatusCode, SrcPortNumber, AccountName, RequestId, PoPName, BrowserType, EventEndTime, NetworkSessionId, PostBody, QueryString, UrlOriginal, HttpUserAgentOriginal, HttpRequestMethod, DstIpAddr, SiteID, DstDomainHostname, DstPortNumber, SrcIpAddr, EventStartTime, AccountID, NetworkApplicationProtocoVersion, HttpRequestXff, CaptchaSupport, ClientApp, ClientAppSig, CookiesSupport, SrcGeoLatitude, SrcGeoLongitude, VisitorID
