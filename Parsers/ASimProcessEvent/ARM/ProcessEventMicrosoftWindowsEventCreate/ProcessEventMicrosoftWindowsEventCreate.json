{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspaceName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "vimProcessCreateMicrosoftWindowsEvents",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "ASIM Microsoft WindowsEvent Process Creation Events Parser",
            "category": "Security",
            "FunctionAlias": "vimProcessCreateMicrosoftWindowsEvents",
            "query": "let MandatoryLabelLookup = datatable (MandatoryLabel:string,MandatoryLabelRid:string, MandatoryLabelText:string, MandatoryLabelMeaning:string)\n    [\n      'S-1-16-0', '0x00000000', 'SECURITY_MANDATORY_UNTRUSTED_RID', 'Untrusted',\n      'S-1-16-4096', '0x00001000', 'SECURITY_MANDATORY_LOW_RID', 'Low integrity',\n      'S-1-16-8192', '0x00002000', 'SECURITY_MANDATORY_MEDIUM_RID', 'Medium integrity',\n      'S-1-16-8448', '0x00002100', 'SECURITY_MANDATORY_MEDIUM_PLUS_RID', 'Medium high integrity',\n      'S-1-16-12288', '0X00003000', 'SECURITY_MANDATORY_HIGH_RID', 'High integrity',\n      'S-1-16-16384', '0x00004000', 'SECURITY_MANDATORY_SYSTEM_RID', 'System integrity',\n      'S-1-16-20480', '0x00005000', 'SECURITY_MANDATORY_PROTECTED_PROCESS_RID', 'Protected process'\n    ];\n  let ProcessEvents=(){\n                WindowsEvent\n                | where EventID == 4688\n                // -- Map\n                | extend\n                  // Event\n                    EventCount = int(1),\n                    EventVendor = 'Microsoft',\n                    EventProduct = 'Security Event',\n                    EventSchemaVersion = '0.1.0',\n                    EventResult = 'Success',\n                    EventStartTime = todatetime(TimeGenerated),\n                    EventEndTime = todatetime(TimeGenerated),\n                    EventType = 'ProcessCreated',\n                    EventOriginalType = tostring(EventID),\n                    // EventOriginalUid = EventOriginId, will be added later to the schema\n                  // Device\n                    // DvcId = SourceComputerId, \n                    DvcHostname = Computer,\n                    DvcOs = 'Windows',\n                  // Users\n                    ActorUserId = tostring(EventData.SubjectUserSid),\n                    ActorUserIdType = 'SID',\n                    ActorUsername = tostring(iff (EventData.SubjectDomainName == '-', EventData.SubjectUserName, strcat(EventData.SubjectDomainName, @\"\\\" , EventData.SubjectUserName))),\n                    ActorUsernameType = iff(EventData.SubjectDomainName == '-','Simple', 'Windows'),\n                    ActorSessionId = tostring(toint(EventData.SubjectLogonId)),\n                  // ActorType = AccountType, No such field in WindowsEvent\n                    TargetUserId = tostring(EventData.TargetUserSid), \n                    TargetUserIdType = 'SID',\n                    TargetUsername = tostring(iff (EventData.TargetDomainName == '-', EventData.TargetUserName, strcat(EventData.TargetDomainName, @\"\\\" , EventData.TargetUserName))),\n                    TargetUsernameType = iff (EventData.TargetDomainName == '-', 'Simple', 'Windows'),\n                    TargetUserSessionId = tostring(toint(EventData.TargetLogonId)),    \n                  // Processes \n                    ActingProcessId = tostring(toint(EventData.ProcessId)),\n                    ActingProcessName = tostring(EventData.ParentProcessName),\n                    TargetProcessId = tostring(EventData.NewProcessId),\n                    TargetProcessName = tostring(EventData.NewProcessName),\n                    TargetProcessCommandLine = tostring(EventData.CommandLine),\n                    TargetProcessTokenElevation = tostring(EventData.TokenElevationType),\n                    MandatoryLabel = tostring(EventData.MandatoryLabel)\n                  | lookup MandatoryLabelLookup on MandatoryLabel\n                // -- Aliases\n                  | extend\n                    User = TargetUsername,\n                    Dvc = DvcHostname,\n                    Process = TargetProcessName\n                }; ProcessEvents",
            "version": 1
          }
        }
      ]
    }
  ]
}