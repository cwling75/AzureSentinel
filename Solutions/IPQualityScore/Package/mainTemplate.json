{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Nikhil Tripathi - v-ntripathi@microsoft.com",
    "comments": "Solution template for IPQualityScore"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Region to deploy solution resources"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "playbook1-PlaybookName": {
      "defaultValue": "Enrich_Sentinel_IPQualityScore_Email_Address_Reputation",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook1-UserName": {
      "defaultValue": "<username>@<domain>",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username to connect to IPQualityScore API"
      }
    },
    "playbook2-PlaybookName": {
      "defaultValue": "Enrich_Sentinel_IPQualityScore_IP_Address_Reputation",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook2-UserName": {
      "defaultValue": "<username>@<domain>",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username to connect to IPQualityScore API"
      }
    },
    "playbook3-PlaybookName": {
      "defaultValue": "Enrich_Sentinel_IPQualityScore_Phone_Number_Reputation",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook3-UserName": {
      "defaultValue": "<username>@<domain>",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username to connect to IPQualityScore API"
      }
    },
    "playbook4-PlaybookName": {
      "defaultValue": "Enrich_Sentinel_IPQualityScore_URL_Reputation",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook4-UserName": {
      "defaultValue": "<username>@<domain>",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username to connect to IPQualityScore API"
      }
    },
    "playbook5-PlaybookName": {
      "defaultValue": "Enrich_Sentinel_IPQualityScore_Domain_Reputation",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook5-UserName": {
      "defaultValue": "<username>@<domain>",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username to connect to IPQualityScore API"
      }
    }
  },
  "variables": {
    "Enrich-Sentinel-IPQualityScore-Email-Address-Reputation": "Enrich-Sentinel-IPQualityScore-Email-Address-Reputation",
    "_Enrich-Sentinel-IPQualityScore-Email-Address-Reputation": "[variables('Enrich-Sentinel-IPQualityScore-Email-Address-Reputation')]",
    "playbook1-IPQSApiKey": "[concat('ipqsfraudandriskscor-', parameters('playbook1-PlaybookName'))]",
    "playbook1-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook1-PlaybookName'))]",
    "playbook-1-connection-1": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]",
    "_playbook-1-connection-1": "[variables('playbook-1-connection-1')]",
    "playbook-1-connection-2": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/ipqsfraudandriskscor')]",
    "_playbook-1-connection-2": "[variables('playbook-1-connection-2')]",
    "Enrich-Sentinel-IPQualityScore-IP-Address-Reputation": "Enrich-Sentinel-IPQualityScore-IP-Address-Reputation",
    "_Enrich-Sentinel-IPQualityScore-IP-Address-Reputation": "[variables('Enrich-Sentinel-IPQualityScore-IP-Address-Reputation')]",
    "playbook2-IPQSApiKey": "[concat('ipqsfraudandriskscor-', parameters('playbook2-PlaybookName'))]",
    "playbook2-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook2-PlaybookName'))]",
    "Enrich-Sentinel-IPQualityScore-Phone-Number-Reputation": "Enrich-Sentinel-IPQualityScore-Phone-Number-Reputation",
    "_Enrich-Sentinel-IPQualityScore-Phone-Number-Reputation": "[variables('Enrich-Sentinel-IPQualityScore-Phone-Number-Reputation')]",
    "playbook3-IPQSApiKey": "[concat('ipqsfraudandriskscor-', parameters('playbook3-PlaybookName'))]",
    "playbook3-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook3-PlaybookName'))]",
    "Enrich-Sentinel-IPQualityScore-URL-Reputation": "Enrich-Sentinel-IPQualityScore-URL-Reputation",
    "_Enrich-Sentinel-IPQualityScore-URL-Reputation": "[variables('Enrich-Sentinel-IPQualityScore-URL-Reputation')]",
    "playbook4-IPQSApiKey": "[concat('ipqsfraudandriskscor-', parameters('playbook4-PlaybookName'))]",
    "playbook4-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook4-PlaybookName'))]",
    "Enrich_Sentinel_IPQualityScore_Domain_Reputation": "Enrich_Sentinel_IPQualityScore_Domain_Reputation",
    "_Enrich_Sentinel_IPQualityScore_Domain_Reputation": "[variables('Enrich_Sentinel_IPQualityScore_Domain_Reputation')]",
    "playbook5-IPQSApiKey": "[concat('ipqsfraudandriskscor-', parameters('playbook5-PlaybookName'))]",
    "playbook5-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook5-PlaybookName'))]",
    "sourceId": "publisherId_test.planId_test",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook1-AzureSentinelConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-1-connection-1')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook1-IPQSApiKey')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "displayName": "[parameters('playbook1-UserName')]",
        "api": {
          "id": "[variables('_playbook-1-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook1-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook1-IPQSApiKey'))]",
        "[resourceId('Microsoft.Web/connections', variables('playbook1-AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              }
            }
          },
          "actions": {
            "Account_Name_Variable": {
              "runAfter": {
                "JSON_OUPUT": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "account_name",
                    "type": "string"
                  }
                ]
              }
            },
            "Account_UPN_Suffix_Variable": {
              "runAfter": {
                "Account_Name_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "account_upn_suffix",
                    "type": "string"
                  }
                ]
              }
            },
            "Disposable_Variable": {
              "runAfter": {
                "Email_FRAUD_SCORE_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "disposable",
                    "type": "boolean"
                  }
                ]
              }
            },
            "Domain_Age_Variable": {
              "runAfter": {
                "Email_Entity_Value": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "domain_age",
                    "type": "string"
                  }
                ]
              }
            },
            "Email_Connector_Variable": {
              "runAfter": {
                "Account_UPN_Suffix_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "email_connector",
                    "type": "string",
                    "value": "@"
                  }
                ]
              }
            },
            "Email_Entity_Value": {
              "runAfter": {
                "Email_Connector_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "email_entity_value",
                    "type": "string"
                  }
                ]
              }
            },
            "Email_FRAUD_SCORE_Variable": {
              "runAfter": {
                "IPQS_Reputation_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "email_fraud_score",
                    "type": "integer"
                  }
                ]
              }
            },
            "Entities_-_Get_Accounts": {
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['Entities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/account"
              }
            },
            "First_Seen_Variable": {
              "runAfter": {
                "Domain_Age_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "first_seen",
                    "type": "string"
                  }
                ]
              }
            },
            "For_each": {
              "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
              "actions": {
                "Add_comment_to_incident_(V3)_2": {
                  "runAfter": {
                    "Alert_-_Get_incident_2": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "incidentArmId": "@body('Alert_-_Get_incident_2')?['id']",
                      "message": "<p><span style=\"font-size: 24px; color: rgb(71,85,119)\">IPQualityScore Reputation Data for </span><span style=\"font-size: 24px\"></span><span style=\"font-size: 24px\">@{variables('email_entity_value')}</span><span style=\"font-size: 24px\"><br> </span><span style=\"font-size: 18px; color: rgb(71,85,119)\">IPQS REPUTATION: </span><span style=\"font-size: 18px; color: rgb(71,85,119)\">@{variables('ipqs_reputation')}</span><span style=\"font-size: 18px; color: rgb(71,85,119)\"><br> IPQS API RESPONSE:<br> </span><span style=\"font-size: 18px; color: rgb(71,85,119)\">@{body('Create_HTML_table')}</span><span style=\"font-size: 18px; color: rgb(71,85,119)\"></span></p>"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Incidents/Comment"
                  }
                },
                "Alert_-_Get_incident_2": {
                  "runAfter": {
                    "Create_HTML_table": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  }
                },
                "Checking_for_Successful_Response": {
                  "actions": {
                    "Check_Disposable": {
                      "actions": {
                        "IPQS_Reputation_Variable_CRITICAL": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "ipqs_reputation",
                            "value": "CRITICAL"
                          }
                        }
                      },
                      "runAfter": {
                        "Set_Valid": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Check_Fraud_Score_is_100": {
                            "actions": {
                              "IPQS_Reputation_Variable_HIGH_RISK": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "ipqs_reputation",
                                  "value": "HIGH RISK"
                                }
                              }
                            },
                            "else": {
                              "actions": {
                                "Check_Fraud_Score_is_in_between_88_and_99": {
                                  "actions": {
                                    "IPQS_Reputation_Variable_MODERATE_RISK": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "ipqs_reputation",
                                        "value": "MODERATE RISK"
                                      }
                                    }
                                  },
                                  "else": {
                                    "actions": {
                                      "Check_Fraud_Score_is_in_between_80_and_87": {
                                        "actions": {
                                          "IPQS_Reputation_Variable_LOW_RISK": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "ipqs_reputation",
                                              "value": "LOW RISK"
                                            }
                                          }
                                        },
                                        "else": {
                                          "actions": {
                                            "Check_Valid": {
                                              "actions": {
                                                "IPQS_Reputation_Variable_SUSPICIOUS": {
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "ipqs_reputation",
                                                    "value": "SUSPICIOUS"
                                                  }
                                                }
                                              },
                                              "else": {
                                                "actions": {
                                                  "Check_Fraud_Score_is_less_than_or_equal_to_79": {
                                                    "actions": {
                                                      "IPQS_Reputation_Variable_CLEAN": {
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                          "name": "ipqs_reputation",
                                                          "value": "CLEAN"
                                                        }
                                                      }
                                                    },
                                                    "expression": {
                                                      "and": [
                                                        {
                                                          "lessOrEquals": [
                                                            "@variables('email_fraud_score')",
                                                            79
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "type": "If"
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "and": [
                                                  {
                                                    "equals": [
                                                      "@variables('valid')",
                                                      false
                                                    ]
                                                  }
                                                ]
                                              },
                                              "type": "If"
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "greaterOrEquals": [
                                                "@variables('email_fraud_score')",
                                                80
                                              ]
                                            },
                                            {
                                              "lessOrEquals": [
                                                "@variables('email_fraud_score')",
                                                87
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greaterOrEquals": [
                                          "@variables('email_fraud_score')",
                                          88
                                        ]
                                      },
                                      {
                                        "lessOrEquals": [
                                          "@variables('email_fraud_score')",
                                          99
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "equals": [
                                    "@variables('email_fraud_score')",
                                    100
                                  ]
                                }
                              ]
                            },
                            "type": "If"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@variables('disposable')",
                              true
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Set_Disposable": {
                      "runAfter": {
                        "Set_Fraud_Score": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "disposable",
                        "value": "@body('Retrieve_Email_address_reputation_data')?['disposable']"
                      }
                    },
                    "Set_Fraud_Score": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "email_fraud_score",
                        "value": "@body('Retrieve_Email_address_reputation_data')?['fraud_score']"
                      }
                    },
                    "Set_Valid": {
                      "runAfter": {
                        "Set_Disposable": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "valid",
                        "value": "@body('Retrieve_Email_address_reputation_data')?['valid']"
                      }
                    }
                  },
                  "runAfter": {
                    "Setting_Successful_Response_Variable": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('is_success')",
                          true
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Create_HTML_table": {
                  "runAfter": {
                    "Setting_JSON_OUTPUT": [
                      "Succeeded"
                    ]
                  },
                  "type": "Table",
                  "inputs": {
                    "format": "HTML",
                    "from": "@variables('json_output')"
                  }
                },
                "Retrieve_Email_address_reputation_data": {
                  "runAfter": {
                    "Setting_Email_Entity_Value": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "$content-type": "multipart/form-data",
                      "$multipart": [
                        {
                          "body": "@variables('email_entity_value')",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"email\""
                          }
                        },
                        {
                          "body": "0",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"abuse_strictness\""
                          }
                        }
                      ]
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['ipqsfraudandriskscor']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/email"
                  }
                },
                "Set_Domain_Age_Variable": {
                  "runAfter": {
                    "Checking_for_Successful_Response": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "domain_age",
                    "value": "Human:@{body('Retrieve_Email_address_reputation_data')?['domain_age']?['human']}   , Timestamp: @{body('Retrieve_Email_address_reputation_data')?['domain_age']?['timestamp']}, ISO: @{body('Retrieve_Email_address_reputation_data')?['domain_age']?['iso']}"
                  }
                },
                "Set_First_Seen_Variable": {
                  "runAfter": {
                    "Set_Domain_Age_Variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "first_seen",
                    "value": "Human: @{body('Retrieve_Email_address_reputation_data')?['first_seen']?['human']}, Timestamp: @{body('Retrieve_Email_address_reputation_data')?['first_seen']?['timestamp']} , ISO: @{body('Retrieve_Email_address_reputation_data')?['first_seen']?['iso']}"
                  }
                },
                "Setting_Accounts_Name_Variable": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "account_name",
                    "value": "@items('For_each')?['Name']"
                  }
                },
                "Setting_Accounts_UPN_suffix_variable": {
                  "runAfter": {
                    "Setting_Accounts_Name_Variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "account_upn_suffix",
                    "value": "@items('For_each')?['UPNSuffix']"
                  }
                },
                "Setting_Email_Entity_Value": {
                  "runAfter": {
                    "Setting_Accounts_UPN_suffix_variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "email_entity_value",
                    "value": "@{concat(variables('account_name'),variables('email_connector'),variables('account_upn_suffix'))}"
                  }
                },
                "Setting_JSON_OUTPUT": {
                  "runAfter": {
                    "Set_First_Seen_Variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "json_output",
                    "value": [
                      {
                        "Catch All": "@body('Retrieve_Email_address_reputation_data')?['catch_all']",
                        "Common": "@body('Retrieve_Email_address_reputation_data')?['common']",
                        "DNS Valid": "@body('Retrieve_Email_address_reputation_data')?['dns_valid']",
                        "Deliverability": "@body('Retrieve_Email_address_reputation_data')?['deliverability']",
                        "Disposable": "@body('Retrieve_Email_address_reputation_data')?['disposable']",
                        "Domain Age": "@variables('domain_age')",
                        "First Name": "@body('Retrieve_Email_address_reputation_data')?['first_name']",
                        "First Seen": "@variables('first_seen')",
                        "Fraud Score": "@body('Retrieve_Email_address_reputation_data')?['fraud_score']",
                        "Frequent Complainer": "@body('Retrieve_Email_address_reputation_data')?['frequent_complainer']",
                        "Generic": "@body('Retrieve_Email_address_reputation_data')?['generic']",
                        "HoneyPot": "@body('Retrieve_Email_address_reputation_data')?['honeypot']",
                        "Leaked": "@body('Retrieve_Email_address_reputation_data')?['leaked']",
                        "Overall Score": "@body('Retrieve_Email_address_reputation_data')?['overall_score']",
                        "Recent Abuse": "@body('Retrieve_Email_address_reputation_data')?['recent_abuse']",
                        "SMTP Score": "@body('Retrieve_Email_address_reputation_data')?['smtp_score']",
                        "Sanitized Email": "@body('Retrieve_Email_address_reputation_data')?['sanitized_email']",
                        "Spam Trap Score": "@body('Retrieve_Email_address_reputation_data')?['spam_trap_score']",
                        "Suggested Domain": "@body('Retrieve_Email_address_reputation_data')?['suggested_domain']",
                        "Suspect": "@body('Retrieve_Email_address_reputation_data')?['suspect']",
                        "Timed Out": "@body('Retrieve_Email_address_reputation_data')?['timed_out']",
                        "Valid": "@body('Retrieve_Email_address_reputation_data')?['valid']"
                      }
                    ]
                  }
                },
                "Setting_Successful_Response_Variable": {
                  "runAfter": {
                    "Retrieve_Email_address_reputation_data": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "is_success",
                    "value": "@body('Retrieve_Email_address_reputation_data')?['success']"
                  }
                }
              },
              "runAfter": {
                "First_Seen_Variable": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "IPQS_Reputation_Variable": {
              "runAfter": {
                "Successful_Response_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ipqs_reputation",
                    "type": "string"
                  }
                ]
              }
            },
            "JSON_OUPUT": {
              "runAfter": {
                "Valid_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "json_output",
                    "type": "array"
                  }
                ]
              }
            },
            "Successful_Response_Variable": {
              "runAfter": {
                "Entities_-_Get_Accounts": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "is_success",
                    "type": "boolean"
                  }
                ]
              }
            },
            "Valid_Variable": {
              "runAfter": {
                "Disposable_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "valid",
                    "type": "boolean"
                  }
                ]
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook1-AzureSentinelConnectionName'))]",
                "connectionName": "[variables('playbook1-AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]"
              },
              "ipqsfraudandriskscor": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook1-IPQSApiKey'))]",
                "connectionName": "[variables('playbook1-IPQSApiKey')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/ipqsfraudandriskscor')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook2-AzureSentinelConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-1-connection-1')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook2-IPQSApiKey')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "displayName": "[parameters('playbook2-UserName')]",
        "api": {
          "id": "[variables('_playbook-1-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook2-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook2-IPQSApiKey'))]",
        "[resourceId('Microsoft.Web/connections', variables('playbook2-AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              }
            }
          },
          "actions": {
            "Entities_-_Get_IPs": {
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['Entities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/ip"
              }
            },
            "IPQS_Reputation_Variable": {
              "runAfter": {
                "Sucessful_Response_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ipqs_reputation",
                    "type": "string"
                  }
                ]
              }
            },
            "IP_FRAUD_SCORE_Variable": {
              "runAfter": {
                "IPQS_Reputation_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ip_fraud_score",
                    "type": "integer",
                    "value": 0
                  }
                ]
              }
            },
            "JSON_OUPUT": {
              "runAfter": {
                "IP_FRAUD_SCORE_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "json_output",
                    "type": "array"
                  }
                ]
              }
            },
            "Looping_Through_IP_Object": {
              "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
              "actions": {
                "Checking_for_Successful_Response": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_2": {
                      "runAfter": {
                        "Alert_-_Get_incident_3": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident_3')?['id']",
                          "message": "<p><span style=\"font-size: 24px; color: rgb(71,85,119)\">IPQualityScore Reputation Data For </span><span style=\"font-size: 24px; color: rgb(71,85,119)\">@{items('Looping_Through_IP_Object')?['Address']}</span><span style=\"font-size: 24px; color: rgb(71,85,119)\">:</span><span style=\"color: rgb(71,85,119)\"><br> </span><span style=\"font-size: 18px; color: rgb(71,85,119)\">IPQS Reputation : </span><span style=\"font-size: 18px; color: rgb(71,85,119)\">@{variables('ipqs_reputation')}</span><span style=\"font-size: 18px; color: rgb(71,85,119)\"><br> IPQS API Response :<br> </span><span style=\"font-size: 18px; color: rgb(71,85,119)\">@{body('Create_HTML_table')}</span><span style=\"font-size: 18px; color: rgb(71,85,119)\"></span></p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Alert_-_Get_incident_3": {
                      "runAfter": {
                        "Create_HTML_table": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      }
                    },
                    "Check_Fraud_Score_is_100": {
                      "actions": {
                        "SET_CRITICAL": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "ipqs_reputation",
                            "value": "CRITICAL "
                          }
                        }
                      },
                      "runAfter": {
                        "Fetch_Fraud_Score": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Check_Fraud_Score_is_between_85_and_99": {
                            "actions": {
                              "SET_HIGH_RISK": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "ipqs_reputation",
                                  "value": "HIGH RISK"
                                }
                              }
                            },
                            "else": {
                              "actions": {
                                "Check_Fraud_Score_is_between_75_and_84": {
                                  "actions": {
                                    "SET_MODERATE_RISK": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "ipqs_reputation",
                                        "value": "MODERATE RISK"
                                      }
                                    }
                                  },
                                  "else": {
                                    "actions": {
                                      "Check_Fraud_Score_is_between_60_and_74": {
                                        "actions": {
                                          "Set_SUSPICIOUS": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "ipqs_reputation",
                                              "value": "SUSPICIOUS"
                                            }
                                          }
                                        },
                                        "else": {
                                          "actions": {
                                            "Check_Fraud_Score_is_less_than_or_equal_to_59": {
                                              "actions": {
                                                "Set_CLEAN": {
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "ipqs_reputation",
                                                    "value": "CLEAN"
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "and": [
                                                  {
                                                    "lessOrEquals": [
                                                      "@variables('ip_fraud_score')",
                                                      59
                                                    ]
                                                  }
                                                ]
                                              },
                                              "type": "If"
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "greaterOrEquals": [
                                                "@variables('ip_fraud_score')",
                                                60
                                              ]
                                            },
                                            {
                                              "lessOrEquals": [
                                                "@variables('ip_fraud_score')",
                                                74
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greaterOrEquals": [
                                          "@variables('ip_fraud_score')",
                                          75
                                        ]
                                      },
                                      {
                                        "lessOrEquals": [
                                          "@variables('ip_fraud_score')",
                                          84
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "greaterOrEquals": [
                                    "@variables('ip_fraud_score')",
                                    85
                                  ]
                                },
                                {
                                  "lessOrEquals": [
                                    "@variables('ip_fraud_score')",
                                    99
                                  ]
                                }
                              ]
                            },
                            "type": "If"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@variables('ip_fraud_score')",
                              100
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Create_HTML_table": {
                      "runAfter": {
                        "Set_JSON_OUTPUT": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table",
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('json_output')"
                      }
                    },
                    "Fetch_Fraud_Score": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "ip_fraud_score",
                        "value": "@body('Retrieve_IP_address_reputation_data')?['fraud_score']"
                      }
                    },
                    "Set_JSON_OUTPUT": {
                      "runAfter": {
                        "Check_Fraud_Score_is_100": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "json_output",
                        "value": [
                          {
                            "ASN": "@body('Retrieve_IP_address_reputation_data')?['ASN']",
                            "Abuse Velocity": "@body('Retrieve_IP_address_reputation_data')?['abuse_velocity']",
                            "Active TOR": "@body('Retrieve_IP_address_reputation_data')?['active_tor']",
                            "Active VPN": "@body('Retrieve_IP_address_reputation_data')?['active_vpn']",
                            "Bot Status": "@body('Retrieve_IP_address_reputation_data')?['bot_status']",
                            "City": "@body('Retrieve_IP_address_reputation_data')?['city']",
                            "Connection Type": "@body('Retrieve_IP_address_reputation_data')?['connection_type']",
                            "Country Code": "@body('Retrieve_IP_address_reputation_data')?['country_code']",
                            "Fraud Score": "@body('Retrieve_IP_address_reputation_data')?['fraud_score']",
                            "Host": "@body('Retrieve_IP_address_reputation_data')?['host']",
                            "ISP": "@body('Retrieve_IP_address_reputation_data')?['ISP']",
                            "Is Crawler": "@body('Retrieve_IP_address_reputation_data')?['is_crawler']",
                            "Latitube": "@body('Retrieve_IP_address_reputation_data')?['latitude']",
                            "Longitude": "@body('Retrieve_IP_address_reputation_data')?['longitude']",
                            "Mobile": "@body('Retrieve_IP_address_reputation_data')?['mobile']",
                            "Organization": "@body('Retrieve_IP_address_reputation_data')?['Organization']",
                            "Proxy": "@body('Retrieve_IP_address_reputation_data')?['proxy']",
                            "Recent Abuse": "@body('Retrieve_IP_address_reputation_data')?['recent_abuse']",
                            "Region": "@body('Retrieve_IP_address_reputation_data')?['region']",
                            "TOR": "@body('Retrieve_IP_address_reputation_data')?['tor']",
                            "TimeZone": "@body('Retrieve_IP_address_reputation_data')?['timezone']",
                            "VPN": "@body('Retrieve_IP_address_reputation_data')?['vpn']"
                          }
                        ]
                      }
                    }
                  },
                  "runAfter": {
                    "Setting_Successful_Response_Variable": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('is_success')",
                          true
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Retrieve_IP_address_reputation_data": {
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "$content-type": "multipart/form-data",
                      "$multipart": [
                        {
                          "body": "@items('Looping_Through_IP_Object')?['Address']",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"ip\""
                          }
                        },
                        {
                          "body": "0",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"strictness\""
                          }
                        }
                      ]
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['ipqsfraudandriskscor']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/ip"
                  }
                },
                "Setting_Successful_Response_Variable": {
                  "runAfter": {
                    "Retrieve_IP_address_reputation_data": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "is_success",
                    "value": "@body('Retrieve_IP_address_reputation_data')?['success']"
                  }
                }
              },
              "runAfter": {
                "JSON_OUPUT": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "Sucessful_Response_Variable": {
              "runAfter": {
                "Entities_-_Get_IPs": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "is_success",
                    "type": "boolean"
                  }
                ]
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook2-AzureSentinelConnectionName'))]",
                "connectionName": "[variables('playbook2-AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]"
              },
              "ipqsfraudandriskscor": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook2-IPQSApiKey'))]",
                "connectionName": "[variables('playbook2-IPQSApiKey')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/ipqsfraudandriskscor')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook3-AzureSentinelConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-1-connection-1')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook3-IPQSApiKey')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "displayName": "[parameters('playbook3-UserName')]",
        "api": {
          "id": "[variables('_playbook-1-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook3-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook3-IPQSApiKey'))]",
        "[resourceId('Microsoft.Web/connections', variables('playbook3-AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              }
            }
          },
          "actions": {
            "Active_Variable": {
              "runAfter": {
                "Phone_FRAUD_SCORE_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "active",
                    "type": "boolean"
                  }
                ]
              }
            },
            "Entities_-_Get_Accounts": {
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['Entities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/account"
              }
            },
            "For_each": {
              "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
              "actions": {
                "Checking_for_Successful_Response": {
                  "actions": {
                    "Add_comment_to_incident_(V3)_3": {
                      "runAfter": {
                        "Alert_-_Get_incident_3": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "incidentArmId": "@body('Alert_-_Get_incident_3')?['id']",
                          "message": "<p><span style=\"font-size: 24px; color: rgb(71,85,119)\">IPQualityScore Reputation Data for </span><span style=\"font-size: 24px; color: rgb(71,85,119)\">@{variables('phone_number')}</span><span style=\"font-size: 24px; color: rgb(71,85,119)\"></span><span style=\"color: rgb(71,85,119)\"><br> </span><span style=\"font-size: 18px; color: rgb(71,85,119)\">IPQS REPUTATION: </span><span style=\"font-size: 18px; color: rgb(71,85,119)\">@{variables('ipqs_reputation')}</span><span style=\"font-size: 18px; color: rgb(71,85,119)\"><br> IPQS API RESPONSE:<br> </span><span style=\"font-size: 18px; color: rgb(71,85,119)\">@{body('Create_HTML_table_2')}</span><span style=\"font-size: 18px; color: rgb(71,85,119)\"></span></p>"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Alert_-_Get_incident_3": {
                      "runAfter": {
                        "Create_HTML_table_2": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                      }
                    },
                    "Check_Fraud_Score_between_90_and_100": {
                      "actions": {
                        "IPQS_Reputation_Variable_HIGH_RISK_1": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "ipqs_reputation",
                            "value": "HIGH RISK"
                          }
                        }
                      },
                      "runAfter": {
                        "Set_Valid": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Check_Active_OR_Valid": {
                            "actions": {
                              "IPQS_Reputation_Variable_MODERATE_RISK_1": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "ipqs_reputation",
                                  "value": "MODERATE RISK"
                                }
                              }
                            },
                            "else": {
                              "actions": {
                                "Check_Fraud_Score_is_in_between_80_and_89": {
                                  "actions": {
                                    "IPQS_Reputation_Variable_LOW_RISK_1": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "ipqs_reputation",
                                        "value": "LOW RISK"
                                      }
                                    }
                                  },
                                  "else": {
                                    "actions": {
                                      "Check_Fraud_Score_is_in_between_50_and_79": {
                                        "actions": {
                                          "IPQS_Reputation_Variable_SUSPICIOUS_1": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "ipqs_reputation",
                                              "value": "SUSPICIOUS"
                                            }
                                          }
                                        },
                                        "else": {
                                          "actions": {
                                            "Check_Fraud_Score_is_less_than_or_equal_to_49": {
                                              "actions": {
                                                "IPQS_Reputation_Variable_CLEAN_1": {
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "ipqs_reputation",
                                                    "value": "CLEAN"
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "and": [
                                                  {
                                                    "lessOrEquals": [
                                                      "@variables('phone_fraud_score')",
                                                      49
                                                    ]
                                                  }
                                                ]
                                              },
                                              "type": "If"
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "greaterOrEquals": [
                                                "@variables('phone_fraud_score')",
                                                50
                                              ]
                                            },
                                            {
                                              "lessOrEquals": [
                                                "@variables('phone_fraud_score')",
                                                79
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greaterOrEquals": [
                                          "@variables('phone_fraud_score')",
                                          80
                                        ]
                                      },
                                      {
                                        "lessOrEquals": [
                                          "@variables('phone_fraud_score')",
                                          89
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                }
                              }
                            },
                            "expression": {
                              "or": [
                                {
                                  "equals": [
                                    "@variables('active')",
                                    false
                                  ]
                                },
                                {
                                  "equals": [
                                    "@variables('valid')",
                                    false
                                  ]
                                }
                              ]
                            },
                            "type": "If"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greaterOrEquals": [
                              "@variables('phone_fraud_score')",
                              90
                            ]
                          },
                          {
                            "lessOrEquals": [
                              "@variables('phone_fraud_score')",
                              100
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Create_HTML_table_2": {
                      "runAfter": {
                        "Set_JSON_OUTPUT": [
                          "Succeeded"
                        ]
                      },
                      "type": "Table",
                      "inputs": {
                        "format": "HTML",
                        "from": "@variables('json_output')"
                      }
                    },
                    "Set_Active": {
                      "runAfter": {
                        "Set_Fraud_Score": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "active",
                        "value": "@body('Retrieve_Phone_Number_reputation_data')?['active']"
                      }
                    },
                    "Set_Fraud_Score": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "phone_fraud_score",
                        "value": "@body('Retrieve_Phone_Number_reputation_data')?['fraud_score']"
                      }
                    },
                    "Set_JSON_OUTPUT": {
                      "runAfter": {
                        "Check_Fraud_Score_between_90_and_100": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "json_output",
                        "value": [
                          {
                            "Active": "@body('Retrieve_Phone_Number_reputation_data')?['active']",
                            "Active Status": "@body('Retrieve_Phone_Number_reputation_data')?['active_status']",
                            "Carrier": "@body('Retrieve_Phone_Number_reputation_data')?['carrier']",
                            "City": "@body('Retrieve_Phone_Number_reputation_data')?['city']",
                            "Country": "@body('Retrieve_Phone_Number_reputation_data')?['country']",
                            "Dialing Code": "@body('Retrieve_Phone_Number_reputation_data')?['dialing_code']",
                            "Do Not Call": "@body('Retrieve_Phone_Number_reputation_data')?['do_not_call']",
                            "Formatted ": "@body('Retrieve_Phone_Number_reputation_data')?['formatted']",
                            "Fraud Score": "@body('Retrieve_Phone_Number_reputation_data')?['fraud_score']",
                            "Line Type": "@body('Retrieve_Phone_Number_reputation_data')?['line_type']",
                            "Local Format": "@body('Retrieve_Phone_Number_reputation_data')?['local_format']",
                            "Name": "@body('Retrieve_Phone_Number_reputation_data')?['name']",
                            "Prepaid": "@body('Retrieve_Phone_Number_reputation_data')?['prepaid']",
                            "Recent Abuse": "@body('Retrieve_Phone_Number_reputation_data')?['recent_abuse']",
                            "Region": "@body('Retrieve_Phone_Number_reputation_data')?['region']",
                            "Risky": "@body('Retrieve_Phone_Number_reputation_data')?['risky']",
                            "Timezone": "@body('Retrieve_Phone_Number_reputation_data')?['timezone']",
                            "VOIP": "@body('Retrieve_Phone_Number_reputation_data')?['VOIP']",
                            "Valid": "@body('Retrieve_Phone_Number_reputation_data')?['valid']",
                            "Zip Code": "@body('Retrieve_Phone_Number_reputation_data')?['zip_code']"
                          }
                        ]
                      }
                    },
                    "Set_Valid": {
                      "runAfter": {
                        "Set_Active": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "valid",
                        "value": "@body('Retrieve_Phone_Number_reputation_data')?['valid']"
                      }
                    }
                  },
                  "runAfter": {
                    "Setting_Successful_Response_Variable": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('is_success')",
                          true
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Retrieve_Phone_Number_reputation_data": {
                  "runAfter": {
                    "Setting_Phone_Number_Variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "$content-type": "multipart/form-data",
                      "$multipart": [
                        {
                          "body": "@variables('phone_number')",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"phone\""
                          }
                        },
                        {
                          "body": "0",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"strictness\""
                          }
                        }
                      ]
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['ipqsfraudandriskscor']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/phone"
                  }
                },
                "Setting_Phone_Number_Variable": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "phone_number",
                    "value": "@items('For_each')?['Name']"
                  }
                },
                "Setting_Successful_Response_Variable": {
                  "runAfter": {
                    "Retrieve_Phone_Number_reputation_data": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "is_success",
                    "value": "@body('Retrieve_Phone_Number_reputation_data')?['success']"
                  }
                }
              },
              "runAfter": {
                "Phone_Variable": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "IPQS_Reputation_Variable": {
              "runAfter": {
                "Successful_Response_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ipqs_reputation",
                    "type": "string"
                  }
                ]
              }
            },
            "JSON_OUPUT": {
              "runAfter": {
                "Valid_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "json_output",
                    "type": "array"
                  }
                ]
              }
            },
            "Phone_FRAUD_SCORE_Variable": {
              "runAfter": {
                "IPQS_Reputation_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "phone_fraud_score",
                    "type": "integer"
                  }
                ]
              }
            },
            "Phone_Variable": {
              "runAfter": {
                "JSON_OUPUT": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "phone_number",
                    "type": "string"
                  }
                ]
              }
            },
            "Successful_Response_Variable": {
              "runAfter": {
                "Entities_-_Get_Accounts": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "is_success",
                    "type": "boolean"
                  }
                ]
              }
            },
            "Valid_Variable": {
              "runAfter": {
                "Active_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "valid",
                    "type": "boolean"
                  }
                ]
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook3-AzureSentinelConnectionName'))]",
                "connectionName": "[variables('playbook3-AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]"
              },
              "ipqsfraudandriskscor": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook3-IPQSApiKey'))]",
                "connectionName": "[variables('playbook3-IPQSApiKey')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/ipqsfraudandriskscor')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook4-AzureSentinelConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-1-connection-1')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook4-IPQSApiKey')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "displayName": "[parameters('playbook4-UserName')]",
        "api": {
          "id": "[variables('_playbook-1-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook4-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook4-IPQSApiKey'))]",
        "[resourceId('Microsoft.Web/connections', variables('playbook4-AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              }
            }
          },
          "actions": {
            "Domain_Age_Variable": {
              "runAfter": {
                "JSON_OUPUT": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "domain_age",
                    "type": "string"
                  }
                ]
              }
            },
            "Entities_-_Get_URLs": {
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['Entities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/url"
              }
            },
            "For_each": {
              "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
              "actions": {
                "Add_comment_to_incident_(V3)": {
                  "runAfter": {
                    "Alert_-_Get_incident_2": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "incidentArmId": "@body('Alert_-_Get_incident_2')?['id']",
                      "message": "<p><span style=\"font-size: 24px; color: rgb(71,85,119)\">IPQualityScore Reputation Data for </span><span style=\"font-size: 24px; color: rgb(71,85,119)\">@{items('For_each')?['Url']}</span><span style=\"font-size: 24px; color: rgb(71,85,119)\">:<br> </span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\">IPQS Reputation: </span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\">@{variables('ipqs_reputation')}</span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\"><br> IPQS API Response:<br> </span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\">@{body('Create_HTML_table')}</span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\"></span></p>"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Incidents/Comment"
                  }
                },
                "Alert_-_Get_incident_2": {
                  "runAfter": {
                    "Create_HTML_table": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  }
                },
                "Checking_for_Successful_Response": {
                  "actions": {
                    "Check_Malware_or_Phishing_is_true": {
                      "actions": {
                        "Set_IPQS_Reputation_Variable_Critical": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "ipqs_reputation",
                            "value": "CRITICAL"
                          }
                        }
                      },
                      "runAfter": {
                        "Set_RISK_SCORE": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Check_Risk_Score_is_greater_than_or_equal_to_90": {
                            "actions": {
                              "Set_IPQS_Reputation_Variable_High_Risk": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "ipqs_reputation",
                                  "value": "HIGH RISK"
                                }
                              }
                            },
                            "else": {
                              "actions": {
                                "Check_Risk_Score_is_between_80_and_89": {
                                  "actions": {
                                    "Set_IPQS_Reputation_Variable_MODERATE_Risk": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "ipqs_reputation",
                                        "value": "MODERATE RISK"
                                      }
                                    }
                                  },
                                  "else": {
                                    "actions": {
                                      "Check_Risk_Score_is_between_70_and_79": {
                                        "actions": {
                                          "Set_IPQS_Reputation_Variable_Low_Risk": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "ipqs_reputation",
                                              "value": "LOW RISK"
                                            }
                                          }
                                        },
                                        "else": {
                                          "actions": {
                                            "Check_Risk_Score_is_between_55_and_69": {
                                              "actions": {
                                                "Set_IPQS_Reputation_Variable_Suspicious": {
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "ipqs_reputation",
                                                    "value": "SUSPICIOUS"
                                                  }
                                                }
                                              },
                                              "else": {
                                                "actions": {
                                                  "Check_Risk_Score_is_less_than_or_equal_to_54": {
                                                    "actions": {
                                                      "Set_IPQS_Reputation_Variable_Clean": {
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                          "name": "ipqs_reputation",
                                                          "value": "CLEAN"
                                                        }
                                                      }
                                                    },
                                                    "expression": {
                                                      "and": [
                                                        {
                                                          "lessOrEquals": [
                                                            "@variables('url_risk_score')",
                                                            54
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "type": "If"
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "and": [
                                                  {
                                                    "greaterOrEquals": [
                                                      "@variables('url_risk_score')",
                                                      55
                                                    ]
                                                  },
                                                  {
                                                    "lessOrEquals": [
                                                      "@variables('url_risk_score')",
                                                      69
                                                    ]
                                                  }
                                                ]
                                              },
                                              "type": "If"
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "greaterOrEquals": [
                                                "@variables('url_risk_score')",
                                                70
                                              ]
                                            },
                                            {
                                              "lessOrEquals": [
                                                "@variables('url_risk_score')",
                                                79
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greaterOrEquals": [
                                          "@variables('url_risk_score')",
                                          80
                                        ]
                                      },
                                      {
                                        "lessOrEquals": [
                                          "@variables('url_risk_score')",
                                          89
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "greaterOrEquals": [
                                    "@variables('url_risk_score')",
                                    90
                                  ]
                                }
                              ]
                            },
                            "type": "If"
                          }
                        }
                      },
                      "expression": {
                        "or": [
                          {
                            "equals": [
                              "@variables('is_phishing')",
                              true
                            ]
                          },
                          {
                            "equals": [
                              "@variables('is_malware')",
                              true
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Set_Malware_Valriable": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "is_malware",
                        "value": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['malware']"
                      }
                    },
                    "Set_Phishing_Variable": {
                      "runAfter": {
                        "Set_Malware_Valriable": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "is_phishing",
                        "value": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['phishing']"
                      }
                    },
                    "Set_RISK_SCORE": {
                      "runAfter": {
                        "Set_Phishing_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "url_risk_score",
                        "value": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['risk_score']"
                      }
                    }
                  },
                  "runAfter": {
                    "Setting_Successful_Response_Variable": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('is_success')",
                          true
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Create_HTML_table": {
                  "runAfter": {
                    "Setting_JSON_OUTPUT": [
                      "Succeeded"
                    ]
                  },
                  "type": "Table",
                  "inputs": {
                    "format": "HTML",
                    "from": "@variables('json_output')"
                  }
                },
                "Retrieve_URL_(or)_Domain_reputation_data": {
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "$content-type": "multipart/form-data",
                      "$multipart": [
                        {
                          "body": "@items('For_each')?['Url']",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"url\""
                          }
                        },
                        {
                          "body": "0",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"strictness\""
                          }
                        }
                      ]
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['ipqsfraudandriskscor']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/url"
                  }
                },
                "Set_Domain_Age_Variable": {
                  "runAfter": {
                    "Checking_for_Successful_Response": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "domain_age",
                    "value": "Human: @{body('Retrieve_URL_(or)_Domain_reputation_data')?['domain_age']?['human']} , Timestamp: @{body('Retrieve_URL_(or)_Domain_reputation_data')?['domain_age']?['timestamp']} , ISO: @{body('Retrieve_URL_(or)_Domain_reputation_data')?['domain_age']?['iso']}"
                  }
                },
                "Setting_JSON_OUTPUT": {
                  "runAfter": {
                    "Set_Domain_Age_Variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "json_output",
                    "value": [
                      {
                        "Adult": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['adult']",
                        "Content Type": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['content_type']",
                        "DNS Valid": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['dns_valid']",
                        "Domain": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['domain']",
                        "Domain Age": "@variables('domain_age')",
                        "Domain Rank": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['domain_rank']",
                        "IP Address": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['ip_address']",
                        "Malware": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['malware']",
                        "Page Size": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['page_size']",
                        "Parking": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['parking']",
                        "Phishing": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['phishing']",
                        "Risk Score": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['risk_score']",
                        "Server": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['server']",
                        "Spamming": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['spamming']",
                        "Status Code": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['status_code']",
                        "Suspicious": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['suspicious']",
                        "UnSafe": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['unsafe']"
                      }
                    ]
                  }
                },
                "Setting_Successful_Response_Variable": {
                  "runAfter": {
                    "Retrieve_URL_(or)_Domain_reputation_data": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "is_success",
                    "value": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['success']"
                  }
                }
              },
              "runAfter": {
                "Domain_Age_Variable": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "IPQS_Reputation_Variable": {
              "runAfter": {
                "Successful_Response_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ipqs_reputation",
                    "type": "string"
                  }
                ]
              }
            },
            "JSON_OUPUT": {
              "runAfter": {
                "Phishing_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "json_output",
                    "type": "array"
                  }
                ]
              }
            },
            "Malware_Variable": {
              "runAfter": {
                "URL_RISK_SCORE_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "is_malware",
                    "type": "boolean"
                  }
                ]
              }
            },
            "Phishing_Variable": {
              "runAfter": {
                "Malware_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "is_phishing",
                    "type": "boolean"
                  }
                ]
              }
            },
            "Successful_Response_Variable": {
              "runAfter": {
                "Entities_-_Get_URLs": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "is_success",
                    "type": "boolean"
                  }
                ]
              }
            },
            "URL_RISK_SCORE_Variable": {
              "runAfter": {
                "IPQS_Reputation_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "url_risk_score",
                    "type": "integer"
                  }
                ]
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook4-AzureSentinelConnectionName'))]",
                "connectionName": "[variables('playbook4-AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]"
              },
              "ipqsfraudandriskscor": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook4-IPQSApiKey'))]",
                "connectionName": "[variables('playbook4-IPQSApiKey')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/ipqsfraudandriskscor')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook5-AzureSentinelConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-1-connection-1')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "[variables('playbook5-IPQSApiKey')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "displayName": "[parameters('playbook5-UserName')]",
        "api": {
          "id": "[variables('_playbook-1-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook5-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook5-IPQSApiKey'))]",
        "[resourceId('Microsoft.Web/connections', variables('playbook5-AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              }
            }
          },
          "actions": {
            "Domain_Age_Variable": {
              "runAfter": {
                "Host_Host_Entity_Full_Name": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "domain_age",
                    "type": "string"
                  }
                ]
              }
            },
            "Domain_RISK_SCORE_Variable": {
              "runAfter": {
                "IPQS_Reputation_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "domain_risk_score",
                    "type": "integer"
                  }
                ]
              }
            },
            "Entities_-_Get_Hosts": {
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['Entities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/host"
              }
            },
            "For_each": {
              "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
              "actions": {
                "Add_comment_to_incident_(V3)": {
                  "runAfter": {
                    "Alert_-_Get_incident_2": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "incidentArmId": "@body('Alert_-_Get_incident_2')?['id']",
                      "message": "<p><span style=\"font-size: 24px; color: rgb(71,85,119)\">IPQualityScore Reputation Data for </span><span style=\"font-size: 24px; color: rgb(71,85,119)\">@{items('For_each')?['HostName']}</span><span style=\"font-size: 24px; color: rgb(71,85,119)\">.</span><span style=\"font-size: 24px; color: rgb(71,85,119)\">@{items('For_each')?['DnsDomain']}</span><span style=\"font-size: 24px; color: rgb(71,85,119)\">:<br> </span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\">IPQS Reputation: </span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\"></span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\">@{variables('ipqs_reputation')}</span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\"><br> IPQS API Response:</span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\"><strong><br> </strong></span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\"><strong>@{body('Create_HTML_table')}</strong></span><span style=\"font-family: arial; font-size: 18px; color: rgb(71,85,119)\"><strong></strong></span></p>"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Incidents/Comment"
                  }
                },
                "Alert_-_Get_incident_2": {
                  "runAfter": {
                    "Create_HTML_table": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                  }
                },
                "Checking_for_Successful_Response": {
                  "actions": {
                    "Check_Malware_or_Phishing_is_true": {
                      "actions": {
                        "Set_IPQS_Reputation_Variable_Critical": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "ipqs_reputation",
                            "value": "CRITICAL"
                          }
                        }
                      },
                      "runAfter": {
                        "Set_Domain_Risk_variable": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Check_Risk_Score_is_greater_than_or_equal_to_90": {
                            "actions": {
                              "Set_IPQS_Reputation_Variable_High_Risk": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "ipqs_reputation",
                                  "value": "HIGH RISK"
                                }
                              }
                            },
                            "else": {
                              "actions": {
                                "Check_Risk_Score_is_between_80_and_89": {
                                  "actions": {
                                    "Set_IPQS_Reputation_Variable_MODERATE_Risk": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "ipqs_reputation",
                                        "value": "MODERATE RISK"
                                      }
                                    }
                                  },
                                  "else": {
                                    "actions": {
                                      "Check_Risk_Score_is_between_70_and_79": {
                                        "actions": {
                                          "Set_IPQS_Reputation_Variable_Low_Risk": {
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "ipqs_reputation",
                                              "value": "LOW RISK"
                                            }
                                          }
                                        },
                                        "else": {
                                          "actions": {
                                            "Check_Risk_Score_is_between_55_and_69": {
                                              "actions": {
                                                "Set_IPQS_Reputation_Variable_Suspicious": {
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "ipqs_reputation",
                                                    "value": "SUSPICIOUS"
                                                  }
                                                }
                                              },
                                              "else": {
                                                "actions": {
                                                  "Check_Risk_Score_is_less_than_or_equal_to_54": {
                                                    "actions": {
                                                      "Set_IPQS_Reputation_Variable_Clean": {
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                          "name": "ipqs_reputation",
                                                          "value": "CLEAN"
                                                        }
                                                      }
                                                    },
                                                    "expression": {
                                                      "and": [
                                                        {
                                                          "lessOrEquals": [
                                                            "@variables('domain_risk_score')",
                                                            54
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "type": "If"
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "and": [
                                                  {
                                                    "greaterOrEquals": [
                                                      "@variables('domain_risk_score')",
                                                      55
                                                    ]
                                                  },
                                                  {
                                                    "lessOrEquals": [
                                                      "@variables('domain_risk_score')",
                                                      69
                                                    ]
                                                  }
                                                ]
                                              },
                                              "type": "If"
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "greaterOrEquals": [
                                                "@variables('domain_risk_score')",
                                                70
                                              ]
                                            },
                                            {
                                              "lessOrEquals": [
                                                "@variables('domain_risk_score')",
                                                79
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greaterOrEquals": [
                                          "@variables('domain_risk_score')",
                                          80
                                        ]
                                      },
                                      {
                                        "lessOrEquals": [
                                          "@variables('domain_risk_score')",
                                          89
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "greaterOrEquals": [
                                    "@variables('domain_risk_score')",
                                    90
                                  ]
                                }
                              ]
                            },
                            "type": "If"
                          }
                        }
                      },
                      "expression": {
                        "or": [
                          {
                            "equals": [
                              "@variables('is_phishing')",
                              true
                            ]
                          },
                          {
                            "equals": [
                              "@variables('is_malware')",
                              true
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Set_Domain_Risk_variable": {
                      "runAfter": {
                        "Set_Phishing_Variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "domain_risk_score",
                        "value": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['risk_score']"
                      }
                    },
                    "Set_Malware_Valriable": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "is_malware",
                        "value": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['malware']"
                      }
                    },
                    "Set_Phishing_Variable": {
                      "runAfter": {
                        "Set_Malware_Valriable": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "is_phishing",
                        "value": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['phishing']"
                      }
                    }
                  },
                  "runAfter": {
                    "Setting_Successful_Response_Variable": [
                      "Succeeded"
                    ]
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('is_success')",
                          true
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Create_HTML_table": {
                  "runAfter": {
                    "Setting_JSON_OUTPUT": [
                      "Succeeded"
                    ]
                  },
                  "type": "Table",
                  "inputs": {
                    "format": "HTML",
                    "from": "@variables('json_output')"
                  }
                },
                "Retrieve_URL_(or)_Domain_reputation_data": {
                  "runAfter": {
                    "Set_host_entity_value": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "$content-type": "multipart/form-data",
                      "$multipart": [
                        {
                          "body": "@variables('host_entity_value')",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"url\""
                          }
                        },
                        {
                          "body": "0",
                          "headers": {
                            "Content-Disposition": "form-data; name=\"strictness\""
                          }
                        }
                      ]
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['ipqsfraudandriskscor']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/url"
                  }
                },
                "Set_Domain_Age_Variable": {
                  "runAfter": {
                    "Checking_for_Successful_Response": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "domain_age",
                    "value": "Human:@{body('Retrieve_URL_(or)_Domain_reputation_data')?['domain_age']?['human']} , Timestamp: @{body('Retrieve_URL_(or)_Domain_reputation_data')?['domain_age']?['timestamp']}, ISO: @{body('Retrieve_URL_(or)_Domain_reputation_data')?['domain_age']?['iso']}"
                  }
                },
                "Set_dns_domain_variable": {
                  "runAfter": {
                    "Set_host_name_variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "dns_domain",
                    "value": "@items('For_each')?['DnsDomain']"
                  }
                },
                "Set_host_entity_value": {
                  "runAfter": {
                    "Set_dns_domain_variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "host_entity_value",
                    "value": "@{variables('host_name')}.@{variables('dns_domain')}"
                  }
                },
                "Set_host_name_variable": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "host_name",
                    "value": "@items('For_each')?['HostName']"
                  }
                },
                "Setting_JSON_OUTPUT": {
                  "runAfter": {
                    "Set_Domain_Age_Variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "json_output",
                    "value": [
                      {
                        "Adult": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['adult']",
                        "Content Type": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['content_type']",
                        "DNS Valid": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['dns_valid']",
                        "Domain": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['domain']",
                        "Domain Age": "@variables('domain_age')",
                        "Domain Rank": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['domain_rank']",
                        "IP Address": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['ip_address']",
                        "Malware": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['malware']",
                        "Page Size": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['page_size']",
                        "Parking": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['parking']",
                        "Phishing": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['phishing']",
                        "Risk Score": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['risk_score']",
                        "Server": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['server']",
                        "Spamming": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['spamming']",
                        "Status Code": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['status_code']",
                        "Suspicious": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['suspicious']",
                        "UnSafe": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['unsafe']"
                      }
                    ]
                  }
                },
                "Setting_Successful_Response_Variable": {
                  "runAfter": {
                    "Retrieve_URL_(or)_Domain_reputation_data": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "is_success",
                    "value": "@body('Retrieve_URL_(or)_Domain_reputation_data')?['success']"
                  }
                }
              },
              "runAfter": {
                "Domain_Age_Variable": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "Host_Dns_Domain_Variable": {
              "runAfter": {
                "Host_Host_Name_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "dns_domain",
                    "type": "string"
                  }
                ]
              }
            },
            "Host_Host_Entity_Full_Name": {
              "runAfter": {
                "Host_Dns_Domain_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "host_entity_value",
                    "type": "string"
                  }
                ]
              }
            },
            "Host_Host_Name_Variable": {
              "runAfter": {
                "JSON_OUPUT": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "host_name",
                    "type": "string"
                  }
                ]
              }
            },
            "IPQS_Reputation_Variable": {
              "runAfter": {
                "Successful_Response_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ipqs_reputation",
                    "type": "string"
                  }
                ]
              }
            },
            "JSON_OUPUT": {
              "runAfter": {
                "Phishing_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "json_output",
                    "type": "array"
                  }
                ]
              }
            },
            "Malware_Variable": {
              "runAfter": {
                "Domain_RISK_SCORE_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "is_malware",
                    "type": "boolean"
                  }
                ]
              }
            },
            "Phishing_Variable": {
              "runAfter": {
                "Malware_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "is_phishing",
                    "type": "boolean"
                  }
                ]
              }
            },
            "Successful_Response_Variable": {
              "runAfter": {
                "Entities_-_Get_Hosts": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "is_success",
                    "type": "boolean"
                  }
                ]
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook5-AzureSentinelConnectionName'))]",
                "connectionName": "[variables('playbook5-AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]"
              },
              "ipqsfraudandriskscor": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook5-IPQSApiKey'))]",
                "connectionName": "[variables('playbook5-IPQSApiKey')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/ipqsfraudandriskscor')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.1.0",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "IPQualityScore",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Nikhil Tripathi",
          "email": "v-ntripathi@microsoft.com"
        },
        "support": {
          "name": "name_test",
          "email": "email_test",
          "tier": "Partner",
          "link": "link_test"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich-Sentinel-IPQualityScore-Email-Address-Reputation')]",
              "version": "1.1.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich-Sentinel-IPQualityScore-IP-Address-Reputation')]",
              "version": "1.1.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich-Sentinel-IPQualityScore-Phone-Number-Reputation')]",
              "version": "1.1.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich-Sentinel-IPQualityScore-URL-Reputation')]",
              "version": "1.1.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Enrich_Sentinel_IPQualityScore_Domain_Reputation')]",
              "version": "1.1.0"
            }
          ]
        },
        "firstPublishDate": "2021-10-20",
        "providers": [
          "providers_test"
        ],
        "categories": {
          "domains": [
            "Security - Threat Intelligence"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
