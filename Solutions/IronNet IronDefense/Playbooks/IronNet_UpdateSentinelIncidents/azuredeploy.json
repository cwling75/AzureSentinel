{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "Enrich IronNet Alerts based on the corresponding Sentinel Incident updates via IronNet Endpoints",
    "author": "IronNet"
  },
  "parameters": {
    "IronApiUsername": {
      "type": "String",
      "metadata": {
        "description": "Username used to authenticate to IronAPI"
      }
    },
    "IronApiPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "Password used to authenticate to IronAPI"
      }
    },
    "IronDefenseUrl": {
      "type": "String",
      "metadata": {
        "description": "IronNet URL used to authenticate to IronAPI"
      }
    },
    "ClientId": {
      "type": "String",
      "metadata": {
        "description": "Azure Active Directory ClientId used to connect to the Azure Sentinel API to fetch Incidents"
      }
    },
    "ClientSecret": {
      "type": "SecureString",
      "metadata": {
        "description": "Azure Active Directory ClientSecret used to connect to the Azure Sentinel API to fetch Incidents"
      }
    },
    "TenantId": {
      "type": "String",
      "metadata": {
        "description": "Azure Active Directory TenantId of Azure Sentinel"
      }
    },
    "WorkspaceName": {
      "type": "String",
      "metadata": {
        "description": "Log Analytics Workspace connected to Azure Sentinel"
      }
    },
    "Playbook Name": {
      "type": "String",
      "metadata": {
        "description": "Playbook name to test the IronNet API"
      }
    }
  },
  "variables": {
    "azuresentinelConnectionName": "[concat('azuresentinel-', parameters('Playbook Name'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('azuresentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "IronDefenseAPIConnection",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('Playbook Name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "IronNetUrl": {
              "defaultValue": "[parameters('IronDefenseUrl')]",
              "type": "SecureString"
            },
            "Password": {
              "defaultValue": "[parameters('IronApiPassword')]",
              "type": "SecureString"
            },
            "TenantId": {
              "defaultValue": "[parameters('TenantId')]",
              "type": "SecureString"
            },
            "Username": {
              "defaultValue": "[parameters('IronApiUsername')]",
              "type": "SecureString"
            },
            "client_id": {
              "defaultValue": "[parameters('ClientId')]",
              "type": "SecureString"
            },
            "client_secret": {
              "defaultValue": "[parameters('ClientSecret')]",
              "type": "SecureString"
            },
            "ResourceGroupId": {
              "defaultValue": "[resourceGroup().id]",
              "type": "SecureString"
            },
            "ResourceGroup": {
              "defaultValue": "[resourceGroup().name]",
              "type": "String"
            },
            "workspace_name": {
              "defaultValue": "[parameters('WorkspaceName')]",
              "type": "SecureString"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              }
            }
          },
          "actions": {
            "Check_if_IronNet_Alert_details_exists_in_sentinel_Alert": {
              "actions": {
                "Check_for_an_Alert_or_Event": {
                  "actions": {
                    "Check_if_Sentinel_Incident_Exists": {
                      "actions": {
                        "Fetch_IronDefense_Severity": {
                          "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['AnalystRating']",
                          "actions": {
                            "Map_IronNet_Severity_to_Azure_Sentinel_Severity": {
                              "runAfter": {},
                              "cases": {
                                "Case": {
                                  "case": "Low",
                                  "actions": {
                                    "Map_Severity_'Low'": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Severity",
                                        "value": "Low"
                                      }
                                    }
                                  }
                                },
                                "Case_2": {
                                  "case": "Medium",
                                  "actions": {
                                    "Map_Severity_'Medium'": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Severity",
                                        "value": "Medium"
                                      }
                                    }
                                  }
                                },
                                "Case_3": {
                                  "case": "High",
                                  "actions": {
                                    "Map_Severity_'High'": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Severity",
                                        "value": "High"
                                      }
                                    }
                                  }
                                },
                                "Case_4": {
                                  "case": "Very-High",
                                  "actions": {
                                    "Map_Severity_'Very-High'": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Severity",
                                        "value": "High"
                                      }
                                    }
                                  }
                                }
                              },
                              "default": {
                                "actions": {}
                              },
                              "expression": "@items('Fetch_IronDefense_Severity')",
                              "type": "Switch"
                            }
                          },
                          "runAfter": {
                            "Fetch_IronDefense_Status": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Fetch_IronDefense_Status": {
                          "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['IronDefenseStatus']",
                          "actions": {
                            "Map_IronNet_Status_to_Azure_Sentinel_Status": {
                              "runAfter": {},
                              "cases": {
                                "Case": {
                                  "case": "STATUS_AWAITING_REVIEW",
                                  "actions": {
                                    "Map_Status_'STATUS_AWAITING_REVIEW'": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Status",
                                        "value": "New"
                                      }
                                    }
                                  }
                                },
                                "Case_2": {
                                  "case": "STATUS_UNDER_REVIEW",
                                  "actions": {
                                    "Map_Status_'STATUS_UNDER_REVIEW'": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Status",
                                        "value": "Active"
                                      }
                                    }
                                  }
                                },
                                "Case_3": {
                                  "case": "STATUS_CLOSED",
                                  "actions": {
                                    "Map_Classification": {
                                      "runAfter": {
                                        "Map_Status_'STATUS_CLOSED'": [
                                          "Succeeded"
                                        ]
                                      },
                                      "cases": {
                                        "Case": {
                                          "case": "SEVERITY_UNDECIDED",
                                          "actions": {
                                            "Map_Classification_'SEVERITY_UNDECIDED'": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Classification",
                                                "value": "Undetermined"
                                              }
                                            }
                                          }
                                        },
                                        "Case_2": {
                                          "case": "SEVERITY_BENIGN",
                                          "actions": {
                                            "Map_Classification_'SEVERITY_BENIGN'": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Classification",
                                                "value": "FalsePositive - IncorrectAlertLogic"
                                              }
                                            }
                                          }
                                        },
                                        "Case_3": {
                                          "case": "SEVERITY_MALICIOUS",
                                          "actions": {
                                            "Map_Classification_'SEVERITY_MALICIOUS'": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Classification",
                                                "value": "BenignPositive - SuspiciousButExpected"
                                              }
                                            }
                                          }
                                        },
                                        "Case_4": {
                                          "case": "SEVERITY_SUSPICIOUS",
                                          "actions": {
                                            "Map_Classification_'SEVERITY_SUSPICIOUS'": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Classification",
                                                "value": "TruePositive - SuspiciousActivity"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "default": {
                                        "actions": {}
                                      },
                                      "expression": "@variables('Analyst Severity')",
                                      "type": "Switch"
                                    },
                                    "Map_Status_'STATUS_CLOSED'": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Status",
                                        "value": "Closed"
                                      }
                                    }
                                  }
                                }
                              },
                              "default": {
                                "actions": {
                                  "Map_Other_Statuses": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Status",
                                      "value": "New"
                                    }
                                  }
                                }
                              },
                              "expression": "@items('Fetch_IronDefense_Status')",
                              "type": "Switch"
                            }
                          },
                          "runAfter": {},
                          "type": "Foreach"
                        },
                        "For_each_Sentinel_Incident": {
                          "foreach": "@body('Parse_Sentinel_Incident')?['value']",
                          "actions": {
                            "Check_for_Classification": {
                              "actions": {
                                "Update_incident_2": {
                                  "runAfter": {},
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "body": {
                                      "classification": {
                                        "ClassificationAndReason": "@variables('Classification')",
                                        "ClassificationReasonText": "This incident was closed in IronVue. View more details at @{variables('vueUrl')}"
                                      },
                                      "incidentArmId": "@items('For_each_Sentinel_Incident')?['id']",
                                      "severity": "@variables('Severity')",
                                      "status": "Closed"
                                    },
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                      }
                                    },
                                    "method": "put",
                                    "path": "/Incidents"
                                  }
                                }
                              },
                              "runAfter": {},
                              "else": {
                                "actions": {
                                  "Update_incident": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "body": {
                                        "incidentArmId": "@items('For_each_Sentinel_Incident')?['id']",
                                        "severity": "@variables('Severity')",
                                        "status": "@variables('Status')"
                                      },
                                      "host": {
                                        "connection": {
                                          "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                        }
                                      },
                                      "method": "put",
                                      "path": "/Incidents"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@variables('Status')",
                                      "Closed"
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Check_if_Irondefense_Alert_has_Comments": {
                              "actions": {
                                "For_each_Comment": {
                                  "foreach": "@body('Parse_Get_Alert_IronDome_Information')?['community_comments']",
                                  "actions": {
                                    "Check_for_24_hours_comments": {
                                      "actions": {
                                        "Add_comment_to_incident_(V3)": {
                                          "runAfter": {},
                                          "type": "ApiConnection",
                                          "inputs": {
                                            "body": {
                                              "incidentArmId": "@items('For_each_Sentinel_Incident')?['id']",
                                              "message": "<p>@{items('For_each_Comment')?['comment']}</p>"
                                            },
                                            "host": {
                                              "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                              }
                                            },
                                            "method": "post",
                                            "path": "/Incidents/Comment"
                                          }
                                        }
                                      },
                                      "runAfter": {},
                                      "else": {
                                        "actions": {
                                          "Older_Comments": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Message",
                                              "value": "Olders Comments"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@items('For_each_Comment')?['created']",
                                              "@addHours(utcNow(),-24)"
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  },
                                  "runAfter": {},
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {
                                "Parse_Get_Alert_IronDome_Information": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "No_Comments": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Message",
                                      "value": "No Comments available for Alert @{variables('IronNet Alert Id')}"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@length(body('Parse_Get_Alert_IronDome_Information')?['community_comments'])",
                                      0
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Get_Alert_IronDome_Information": {
                              "runAfter": {
                                "Check_for_Classification": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "password": "@parameters('Password')",
                                  "type": "Basic",
                                  "username": "@parameters('Username')"
                                },
                                "body": {
                                  "alert_id": "@variables('IronNet Alert Id')"
                                },
                                "headers": {
                                  "Content-Type": "application/json"
                                },
                                "method": "POST",
                                "uri": "@{parameters('IronNetUrl')}/IronApi/GetAlertIronDomeInformation"
                              }
                            },
                            "Parse_Get_Alert_IronDome_Information": {
                              "runAfter": {
                                "Get_Alert_IronDome_Information": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Get_Alert_IronDome_Information')",
                                "schema": {
                                  "properties": {
                                    "cognitive_system_score": {
                                      "type": "integer"
                                    },
                                    "community_comments": {
                                      "items": {
                                        "properties": {
                                          "comment": {
                                            "type": "string"
                                          },
                                          "created": {
                                            "type": "string"
                                          },
                                          "dome_tags": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "enterprise": {
                                            "type": "boolean"
                                          },
                                          "self": {
                                            "type": "boolean"
                                          }
                                        },
                                        "required": [
                                          "created",
                                          "comment",
                                          "dome_tags",
                                          "enterprise",
                                          "self"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "correlation_participation": {
                                      "items": {
                                        "properties": {
                                          "behavior": {},
                                          "domain": {},
                                          "dome_tag": {
                                            "type": "string"
                                          },
                                          "ip": {
                                            "properties": {
                                              "activity_count": {
                                                "type": "integer"
                                              },
                                              "benign_count": {
                                                "type": "integer"
                                              },
                                              "comments_count": {
                                                "type": "integer"
                                              },
                                              "first_seen": {
                                                "type": "string"
                                              },
                                              "last_seen": {
                                                "type": "string"
                                              },
                                              "malicious_count": {
                                                "type": "integer"
                                              },
                                              "resource_owner": {
                                                "type": "boolean"
                                              },
                                              "suspicious_count": {
                                                "type": "integer"
                                              },
                                              "whitelisted_count": {
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "dome_tag",
                                          "behavior",
                                          "domain",
                                          "ip"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "correlations": {
                                      "items": {
                                        "properties": {
                                          "correlations": {
                                            "items": {
                                              "properties": {
                                                "community_correlations": {
                                                  "type": "integer"
                                                },
                                                "enterprise_correlations": {
                                                  "type": "integer"
                                                },
                                                "ip": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "ip",
                                                "enterprise_correlations",
                                                "community_correlations"
                                              ],
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "dome_tag": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "dome_tag",
                                          "correlations"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "dome_notifications": {
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Fetch_IronDefense_Severity": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Parse_Sentinel_Incident": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "No_Sentinel_Incidents": {
                            "runAfter": {},
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Message",
                              "value": "No Sentinel Incidents present for the alert "
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(body('Parse_Sentinel_Incident')?['value'])",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "For_each_Analyst_Rating": {
                      "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['AnalystRating']",
                      "actions": {
                        "Set_Analyst_Rating": {
                          "runAfter": {},
                          "type": "SetVariable",
                          "inputs": {
                            "name": "Analyst Rating",
                            "value": "@{items('For_each_Analyst_Rating')}"
                          }
                        }
                      },
                      "runAfter": {},
                      "type": "Foreach"
                    },
                    "For_each_Analyst_Severity": {
                      "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['AnalystSeverity']",
                      "actions": {
                        "Set_Analyst_Severity": {
                          "runAfter": {},
                          "type": "SetVariable",
                          "inputs": {
                            "name": "Analyst Severity",
                            "value": "@{items('For_each_Analyst_Severity')}"
                          }
                        }
                      },
                      "runAfter": {
                        "For_each_Analyst_Rating": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_vueUrl": {
                      "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['IronVueUrl']",
                      "actions": {
                        "Set_vueUrl": {
                          "runAfter": {},
                          "type": "SetVariable",
                          "inputs": {
                            "name": "vueUrl",
                            "value": "@{items('For_each_vueUrl')}"
                          }
                        }
                      },
                      "runAfter": {
                        "For_each_Analyst_Severity": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Generate_the_token_for_Azure_Sentinel_Incident": {
                      "runAfter": {
                        "For_each_vueUrl": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "body": "grant_type=client_credentials&client_id=@{parameters('client_id')}&client_secret=@{parameters('client_secret')}&resource=https://management.azure.com",
                        "headers": {
                          "Content-Type": "application/x-www-form-urlencoded"
                        },
                        "method": "POST",
                        "uri": "https://login.microsoftonline.com/@{parameters('TenantId')}/oauth2/token"
                      }
                    },
                    "Get_Sentinel_Incident": {
                      "runAfter": {
                        "Parse_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "headers": {
                          "Authorization": "Bearer @{body('Parse_Token')?['access_token']}",
                          "Content-Type": "application/json"
                        },
                        "method": "GET",
                        "uri": "https://management.azure.com@{parameters('ResourceGroupId')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents?api-version=2020-01-01&$filter=endsWith(properties/title,'(@{variables('IronNet Alert Id')})')"
                      }
                    },
                    "Parse_Sentinel_Incident": {
                      "runAfter": {
                        "Get_Sentinel_Incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Sentinel_Incident')",
                        "schema": {
                          "properties": {
                            "value": {
                              "items": {
                                "properties": {
                                  "etag": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "additionalData": {
                                        "properties": {
                                          "alertProductNames": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "alertsCount": {
                                            "type": "integer"
                                          },
                                          "bookmarksCount": {
                                            "type": "integer"
                                          },
                                          "commentsCount": {
                                            "type": "integer"
                                          },
                                          "tactics": {
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "classification": {
                                        "type": "string"
                                      },
                                      "classificationComment": {
                                        "type": "string"
                                      },
                                      "classificationReason": {
                                        "type": "string"
                                      },
                                      "createdTimeUtc": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "firstActivityTimeUtc": {
                                        "type": "string"
                                      },
                                      "incidentNumber": {
                                        "type": "integer"
                                      },
                                      "incidentUrl": {
                                        "type": "string"
                                      },
                                      "labels": {
                                        "type": "array"
                                      },
                                      "lastActivityTimeUtc": {
                                        "type": "string"
                                      },
                                      "lastModifiedTimeUtc": {
                                        "type": "string"
                                      },
                                      "owner": {
                                        "properties": {
                                          "assignedTo": {},
                                          "email": {},
                                          "objectId": {},
                                          "userPrincipalName": {}
                                        },
                                        "type": "object"
                                      },
                                      "relatedAnalyticRuleIds": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "severity": {
                                        "type": "string"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "title": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "etag",
                                  "type",
                                  "properties"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_Token": {
                      "runAfter": {
                        "Generate_the_token_for_Azure_Sentinel_Incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Generate_the_token_for_Azure_Sentinel_Incident')",
                        "schema": {
                          "properties": {
                            "access_token": {
                              "type": "string"
                            },
                            "expires_in": {
                              "type": "string"
                            },
                            "expires_on": {
                              "type": "string"
                            },
                            "ext_expires_in": {
                              "type": "string"
                            },
                            "not_before": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "token_type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "For_each_IronDefense_Alert": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Sentinel_Alert_contains_IronNet_Event_": {
                        "runAfter": {},
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Message",
                          "value": "This is an Event belonging to Alert @{variables('IronNet Alert Id')}"
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "contains": [
                          "@body('Parse_Extended_Properties')",
                          "IronDefenseStatus"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Extract_IronNet_Alert_details_from_Sentinel_Alert": {
                  "runAfter": {},
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Parse_Extended_Properties')?['Custom Details']",
                    "schema": {
                      "properties": {
                        "AlertCreatedTime": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "AnalystRating": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "AnalystSeverity": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "IronDefenseAlertId": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "IronDefenseStatus": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "IronVueUrl": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "For_each_IronDefense_Alert": {
                  "foreach": "@body('Extract_IronNet_Alert_details_from_Sentinel_Alert')?['IronDefenseAlertId']",
                  "actions": {
                    "Set_IronNet_Alert_Id": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "IronNet Alert Id",
                        "value": "@{items('For_each_IronDefense_Alert')}"
                      }
                    }
                  },
                  "runAfter": {
                    "Extract_IronNet_Alert_details_from_Sentinel_Alert": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                }
              },
              "runAfter": {
                "Parse_Extended_Properties": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "No_Notifications": {
                    "runAfter": {},
                    "type": "SetVariable",
                    "inputs": {
                      "name": "Message",
                      "value": "No Notifications"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "not": {
                      "equals": [
                        "@body('Parse_Extended_Properties')?['Custom Details']",
                        ""
                      ]
                    }
                  }
                ]
              },
              "type": "If"
            },
            "Display_Output_Message": {
              "runAfter": {
                "Check_if_IronNet_Alert_details_exists_in_sentinel_Alert": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@variables('Message')"
            },
            "Initialize_Analyst_Rating": {
              "runAfter": {
                "Initialize_Severity": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Analyst Rating",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Analyst_Severity": {
              "runAfter": {
                "Initialize_Analyst_Rating": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Analyst Severity",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Classification": {
              "runAfter": {
                "Initialize_IronNet_Alert_Id": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Classification",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_IronNet_Alert_Id": {
              "runAfter": {
                "Initialize_Analyst_Severity": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IronNet Alert Id",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Message": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Message",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Severity": {
              "runAfter": {
                "Initialize_Status": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Severity",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Status": {
              "runAfter": {
                "Initialize_Message": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Status",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_vueUrl": {
              "runAfter": {
                "Initialize_Classification": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "vueUrl",
                    "type": "string"
                  }
                ]
              }
            },
            "Parse_Extended_Properties": {
              "runAfter": {
                "Initialize_vueUrl": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()?['ExtendedProperties']",
                "schema": {
                  "properties": {
                    "Analytic Rule Ids": {
                      "type": "string"
                    },
                    "Analytic Rule Name": {
                      "type": "string"
                    },
                    "Custom Details": {
                      "type": "string"
                    },
                    "Data Sources": {
                      "type": "string"
                    },
                    "Event Grouping": {
                      "type": "string"
                    },
                    "OriginalQuery": {
                      "type": "string"
                    },
                    "ProcessedBySentinel": {
                      "type": "string"
                    },
                    "Query": {
                      "type": "string"
                    },
                    "Query End Time UTC": {
                      "type": "string"
                    },
                    "Query Period": {
                      "type": "string"
                    },
                    "Query Start Time UTC": {
                      "type": "string"
                    },
                    "Search Query Results Overall Count": {
                      "type": "string"
                    },
                    "Trigger Operator": {
                      "type": "string"
                    },
                    "Trigger Threshold": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]",
                "connectionName": "[variables('azuresentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
              }
            }
          }
        }
      }
    }
  ]
}