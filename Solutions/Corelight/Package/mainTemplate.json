{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Nikhil Tripathi - v-ntripathi@microsoft.com",
    "comments": "Solution template for Corelight"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Region to deploy solution resources"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Corelight",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic6-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic7-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic8-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic9-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic10-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "5169dd5d-2241-4089-8f3f-9955e548b3b9"
    }
  },
  "variables": {
    "Corelight_workbook": "Corelight_workbook",
    "_Corelight_workbook": "[variables('Corelight_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "CorelightC2RepetitiveFailures_AnalyticalRules": "CorelightC2RepetitiveFailures_AnalyticalRules",
    "_CorelightC2RepetitiveFailures_AnalyticalRules": "[variables('CorelightC2RepetitiveFailures_AnalyticalRules')]",
    "CorelightExternalProxyDetected_AnalyticalRules": "CorelightExternalProxyDetected_AnalyticalRules",
    "_CorelightExternalProxyDetected_AnalyticalRules": "[variables('CorelightExternalProxyDetected_AnalyticalRules')]",
    "CorelightForcedExternalOutboundSMB_AnalyticalRules": "CorelightForcedExternalOutboundSMB_AnalyticalRules",
    "_CorelightForcedExternalOutboundSMB_AnalyticalRules": "[variables('CorelightForcedExternalOutboundSMB_AnalyticalRules')]",
    "CorelightMultipleCompressedFilesTransferredOverHTTP_AnalyticalRules": "CorelightMultipleCompressedFilesTransferredOverHTTP_AnalyticalRules",
    "_CorelightMultipleCompressedFilesTransferredOverHTTP_AnalyticalRules": "[variables('CorelightMultipleCompressedFilesTransferredOverHTTP_AnalyticalRules')]",
    "CorelightMultipleFilesSentOverHTTPAbnormalRequests_AnalyticalRules": "CorelightMultipleFilesSentOverHTTPAbnormalRequests_AnalyticalRules",
    "_CorelightMultipleFilesSentOverHTTPAbnormalRequests_AnalyticalRules": "[variables('CorelightMultipleFilesSentOverHTTPAbnormalRequests_AnalyticalRules')]",
    "CorelightNetworkServiceScanning_AnalyticalRules": "CorelightNetworkServiceScanning_AnalyticalRules",
    "_CorelightNetworkServiceScanning_AnalyticalRules": "[variables('CorelightNetworkServiceScanning_AnalyticalRules')]",
    "CorelightPossibleWebshell_AnalyticalRules": "CorelightPossibleWebshell_AnalyticalRules",
    "_CorelightPossibleWebshell_AnalyticalRules": "[variables('CorelightPossibleWebshell_AnalyticalRules')]",
    "CorelightPossibleWebshellRarePOST_AnalyticalRules": "CorelightPossibleWebshellRarePOST_AnalyticalRules",
    "_CorelightPossibleWebshellRarePOST_AnalyticalRules": "[variables('CorelightPossibleWebshellRarePOST_AnalyticalRules')]",
    "CorelightSMTPEmailSubjectNonAsciiCharacters_AnalyticalRules": "CorelightSMTPEmailSubjectNonAsciiCharacters_AnalyticalRules",
    "_CorelightSMTPEmailSubjectNonAsciiCharacters_AnalyticalRules": "[variables('CorelightSMTPEmailSubjectNonAsciiCharacters_AnalyticalRules')]",
    "CorelightTypoSquattingOrPunycodePhishingHTTPRequest_AnalyticalRules": "CorelightTypoSquattingOrPunycodePhishingHTTPRequest_AnalyticalRules",
    "_CorelightTypoSquattingOrPunycodePhishingHTTPRequest_AnalyticalRules": "[variables('CorelightTypoSquattingOrPunycodePhishingHTTPRequest_AnalyticalRules')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "CorelightConnector": "CorelightConnector",
    "_CorelightConnector": "[variables('CorelightConnector')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "Corelight_Parser": "Corelight_Parser",
    "_Corelight_Parser": "[variables('Corelight_Parser')]",
    "CorelightAbnormalEmailSubject_HuntingQueries": "CorelightAbnormalEmailSubject_HuntingQueries",
    "_CorelightAbnormalEmailSubject_HuntingQueries": "[variables('CorelightAbnormalEmailSubject_HuntingQueries')]",
    "CorelightCompressedFilesTransferredOverHTTP_HuntingQueries": "CorelightCompressedFilesTransferredOverHTTP_HuntingQueries",
    "_CorelightCompressedFilesTransferredOverHTTP_HuntingQueries": "[variables('CorelightCompressedFilesTransferredOverHTTP_HuntingQueries')]",
    "CorelightDataTransferedByIp_HuntingQueries": "CorelightDataTransferedByIp_HuntingQueries",
    "_CorelightDataTransferedByIp_HuntingQueries": "[variables('CorelightDataTransferedByIp_HuntingQueries')]",
    "CorelightExternalServices_HuntingQueries": "CorelightExternalServices_HuntingQueries",
    "_CorelightExternalServices_HuntingQueries": "[variables('CorelightExternalServices_HuntingQueries')]",
    "CorelightFilesSeen_HuntingQueries": "CorelightFilesSeen_HuntingQueries",
    "_CorelightFilesSeen_HuntingQueries": "[variables('CorelightFilesSeen_HuntingQueries')]",
    "CorelightFilesTransferedByIp_HuntingQueries": "CorelightFilesTransferedByIp_HuntingQueries",
    "_CorelightFilesTransferedByIp_HuntingQueries": "[variables('CorelightFilesTransferedByIp_HuntingQueries')]",
    "CorelightMultipleRemoteSMBConnectionsFromSingleIP_HuntingQueries": "CorelightMultipleRemoteSMBConnectionsFromSingleIP_HuntingQueries",
    "_CorelightMultipleRemoteSMBConnectionsFromSingleIP_HuntingQueries": "[variables('CorelightMultipleRemoteSMBConnectionsFromSingleIP_HuntingQueries')]",
    "CorelightObfuscatedBinary_HuntingQueries": "CorelightObfuscatedBinary_HuntingQueries",
    "_CorelightObfuscatedBinary_HuntingQueries": "[variables('CorelightObfuscatedBinary_HuntingQueries')]",
    "CorelightRarePOST_HuntingQueries": "CorelightRarePOST_HuntingQueries",
    "_CorelightRarePOST_HuntingQueries": "[variables('CorelightRarePOST_HuntingQueries')]",
    "CorelightRepetitiveDnsFailures_HuntingQueries": "CorelightRepetitiveDnsFailures_HuntingQueries",
    "_CorelightRepetitiveDnsFailures_HuntingQueries": "[variables('CorelightRepetitiveDnsFailures_HuntingQueries')]",
    "sourceId": "corelightinc1584998267292.corelight-for-azure-sentinel",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2020-02-12",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\">**NOTE:** This workbook depends on a parser based on a Kusto Function to work as expected [**Corelight**](https://aka.ms/sentinel-Corelight-parser) which is deployed with the Azure Sentinel Solution.\"},\"name\":\"text - 23\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"d723eef6-b3f0-40be-9a56-125421b32619\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Corelight Main Dashboard\",\"subTarget\":\"corelight_main_dashboard\",\"style\":\"link\"},{\"id\":\"5736d4f4-bd4c-4a49-bea7-00da2bbc7fd9\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Corelight Connections\",\"subTarget\":\"corelight_connections\",\"style\":\"link\"},{\"id\":\"5336f601-4da3-4da0-8196-332a97636047\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Corelight DNS\",\"subTarget\":\"corelight_dns\",\"style\":\"link\"},{\"id\":\"5c26ac35-85e3-4f48-8673-f80d30314d1a\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Corelight Files\",\"subTarget\":\"corelight_files\",\"style\":\"link\"},{\"id\":\"14595b52-fcaa-402c-9a39-3d236b2aeba9\",\"cellValue\":\"Tab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Corelight Software\",\"subTarget\":\"corelight_software\",\"style\":\"link\"}]},\"name\":\"links - 24\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"c64d5d3d-90c6-484a-ab88-c70652b75b6e\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":300000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated {TimeRange}\\n|make-series Trend = count() on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by EventType;\",\"size\":0,\"title\":\"Sensor Events Timechart\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_main_dashboard\"},\"customWidth\":\"50\",\"name\":\"Sensor Events Timechart\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated {TimeRange}\\n| summarize Count=count() by EventType | sort by Count desc\",\"size\":0,\"title\":\"Sensor Events Count\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_main_dashboard\"},\"customWidth\":\"50\",\"name\":\"Sensor Events Count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"conn\\\"\\n| where isnotempty(Service)\\n| summarize count() by tostring(Service) | take 10\",\"size\":3,\"title\":\"Top Services\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true,\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_connections\"},\"customWidth\":\"50\",\"name\":\"Top Services\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"conn\\\"\\n| where isnotempty(DstPort)\\n| extend dstprt = tostring(DstPort)\\n| summarize Count=count() by dstprt | sort by Count desc |take 10\",\"size\":3,\"title\":\"Top Responder Ports\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true,\"ySettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_connections\"},\"customWidth\":\"50\",\"name\":\"Top Responder Ports\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"conn\\\"\\n| extend NetworkDirection = case(LocalOrig == true,\\\"outbound\\\", LocalOrig == false, \\\"inbound\\\",'')\\n| where NetworkDirection == \\\"outbound\\\"\\n| where isnotempty(SrcIpAddr) and isnotempty(DstIpAddr) and isnotempty(SrcIpBytes) and isnotempty(DstIpBytes)\\n| extend bytes = toint(SrcIpBytes) + toint(DstIpBytes)\\n| summarize Bytes=sum(bytes) by SrcIpAddr, DstIpAddr, NetworkProtocol | sort by Bytes desc | take 15\",\"size\":0,\"title\":\"Top Outbound Data Flows by Originator Bytes\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_connections\"},\"customWidth\":\"50\",\"name\":\"Top Outbound Data Flows by Originator Bytes\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"conn\\\"\\n| extend NetworkDirection = case(LocalOrig == true,\\\"outbound\\\", LocalOrig == false, \\\"inbound\\\",'')\\n| where NetworkDirection == \\\"inbound\\\"\\n| where isnotempty(SrcIpAddr) and isnotempty(DstIpAddr) and isnotempty(SrcIpBytes) and isnotempty(DstIpBytes)\\n| extend bytes = toint(SrcIpBytes) + toint(DstIpBytes)\\n| summarize Bytes=sum(bytes) by SrcIpAddr, DstIpAddr, NetworkProtocol | sort by Bytes desc | take 15\",\"size\":0,\"title\":\"Top Inbound Data Flows by Originator Bytes\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_connections\"},\"customWidth\":\"50\",\"name\":\"Top Inbound Data Flows by Originator Bytes - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where EventType startswith \\\"conn\\\"\\n| where TimeGenerated  {TimeRange} \\n| summarize Count=count() by SrcIpAddr | sort by Count\",\"size\":3,\"title\":\"Top Originators (sources) by # of connections\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_connections\"},\"customWidth\":\"50\",\"name\":\"Top Originators (sources) by # of connections\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where EventType startswith \\\"conn\\\"\\n| where TimeGenerated  {TimeRange} \\n| summarize Count=count() by DstIpAddr | sort by Count\",\"size\":3,\"title\":\"Top Responders (destinations) by # of connections\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_connections\"},\"customWidth\":\"50\",\"name\":\"Top Responders (destinations) by # of connections - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where EventType startswith \\\"conn\\\"\\n| where TimeGenerated  {TimeRange}\\n| where isnotempty(SrcIpAddr) and isnotempty(DstIpAddr) and isnotempty(Service) and isnotempty(DstPort) and isnotempty(SrcPort)\\n| summarize duration=avg(toint(Duration)), make_list(SrcIpAddr), make_list(DstIpAddr), make_list(NetworkProtocol) by EventUid | sort by duration desc | take 50\",\"size\":0,\"title\":\"Open/Active Long Lived Connections (requires Long Connections Pkg)\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"duration\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"duration\",\"sortOrder\":2}]},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_connections\"},\"name\":\"Open/Active Long Lived Connections (requires Long Connections Pkg)\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"dns\\\"\\n| where isnotempty(DnsQueryTypeName)\\n| where DstPort ==\\\"53\\\" | summarize count() by DnsQueryTypeName\",\"size\":3,\"title\":\"Top Query Types\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_dns\"},\"customWidth\":\"33\",\"name\":\"Top Query Types\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"dns\\\"\\n| where isnotempty(DnsQueryName)\\n| summarize Count=count() by DnsQueryName | sort by Count desc | take 10\\n| join kind = inner (Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"dns\\\"\\n| where isnotempty(DnsQueryName)\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by DnsQueryName)\\n on DnsQueryName\",\"size\":0,\"title\":\"Top 10 Queries by Count\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blueDark\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}]}},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_dns\"},\"customWidth\":\"33\",\"name\":\"Top 10 Queries by Count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"dns\\\"\\n| where DnsResponseCodeName ==\\\"NXDOMAIN\\\" and DnsQueryTypeName !=\\\"PTR\\\" and DstPort ==\\\"53\\\"\\n| summarize Count=count() by DnsQueryName | sort by Count desc | take 10\\n| join kind = inner (Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"dns\\\"\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by DnsQueryName)\\n on DnsQueryName\",\"size\":0,\"title\":\"Top 10 Queries by Count to Non-Existent Domains\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"DnsQueryName1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blueDark\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}]}},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_dns\"},\"customWidth\":\"33\",\"name\":\"Top 10 Queries by Count to Non-Existent Domains\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where EventType startswith \\\"dns\\\"\\n| where TimeGenerated  {TimeRange}\\n| where DstPort == \\\"53\\\" and isnotempty(DnsQueryTypeName)\\n| summarize Count=count() by SrcIpAddr | sort by Count | take 10\",\"size\":0,\"title\":\"Top Originators by Count\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_dns\"},\"customWidth\":\"33\",\"name\":\"Top Originators by Count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"dns\\\"\\n| where DnsResponseCodeName ==\\\"NOERROR\\\" and DnsQueryTypeName ==\\\"PTR\\\" and DstPort ==\\\"53\\\"\\n| where DstPort == \\\"53\\\" and isnotempty(DnsQueryTypeName)\\n| summarize Count=count() by DnsQueryName | sort by Count | take 10\",\"size\":0,\"title\":\"Top Successful Reverse Queries by Count\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_dns\"},\"customWidth\":\"33\",\"name\":\"Top Successful Reverse Queries by Count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"dns\\\"\\n| where DnsResponseCodeName ==\\\"NXDOMAIN\\\" and DnsQueryTypeName == \\\"PTR\\\" and DstPort == \\\"53\\\"\\n| summarize Count=count() by DnsQueryName | sort by Count | take 10\",\"size\":0,\"title\":\"Top Reverse Queries by Count to Non-Existent Domains\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_dns\"},\"customWidth\":\"33\",\"name\":\"Top Reverse Queries by Count to Non-Existent Domains\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"files\\\"\\n| where isnotempty(MimeType)\\n| where MimeType != \\\"application/pkix-cert\\\"\\n| summarize Count=count() by MimeType | sort by Count desc | take 20\",\"size\":0,\"title\":\"Top 20 Mime Types by File Count\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_files\"},\"name\":\"Top 20 Mime Types by File Count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"files\\\"\\n| where isnotempty(MimeType)\\n| where MimeType != \\\"application/pkix-cert\\\"\\n| summarize [\\\"File Count\\\"]=count() by Source | sort by [\\\"File Count\\\"] desc | take 15\",\"size\":0,\"title\":\"Top File Protocols by File Count\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_files\"},\"name\":\"Top File Protocols by File Count\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where EventType startswith \\\"files\\\"\\n| where isnotempty(MimeType)\\n| where MimeType != \\\"application/pkix-cert\\\"\\n| extend NetworkDirection = case(LocalOrig == \\\"true\\\", \\\"outbound\\\", LocalOrig == \\\"false\\\", \\\"inbound\\\", \\\"\\\" )\\n|make-series [\\\"Files Sent\\\"]=countif(NetworkDirection==\\\"outbound\\\"), [\\\"Files Received\\\"]=countif(NetworkDirection==\\\"inbound\\\") on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by EventType | project [\\\"Files Sent\\\"], [\\\"Files Received\\\"], TimeGenerated;\",\"size\":0,\"title\":\"File Flow - # of Files\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false},\"graphSettings\":{\"type\":0}},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_files\"},\"customWidth\":\"50\",\"name\":\"File Flow - # of Files\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where EventType startswith \\\"files\\\"\\n| where isnotempty(MimeType)\\n| where MimeType != \\\"application/pkix-cert\\\"\\n| extend NetworkDirection = case(LocalOrig == \\\"true\\\", \\\"outbound\\\", LocalOrig == \\\"false\\\", \\\"inbound\\\", \\\"\\\" )\\n|make-series [\\\"Bytes Sent\\\"]=sumif(toint(ZeekFilesSeenBytes), NetworkDirection==\\\"outbound\\\" ), [\\\"Bytes Received\\\"]=sumif(toint(ZeekFilesSeenBytes),NetworkDirection==\\\"inbound\\\") on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by EventType;\",\"size\":0,\"title\":\"File Flow - Bytes\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"tileSettings\":{\"showBorder\":false},\"graphSettings\":{\"type\":0}},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_files\"},\"customWidth\":\"50\",\"name\":\"File Flow - Bytes\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where EventType startswith \\\"software\\\"\\n| where TimeGenerated  {TimeRange}\\n| where isnotempty(SoftwareType)\\n| summarize Count=count() by Name | sort by Count | take 20\",\"size\":0,\"title\":\"Top Software\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_software\"},\"name\":\"Top Software\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where TimeGenerated  {TimeRange}\\n| where EventType startswith \\\"software\\\"\\n| where isnotempty(SoftwareType)\\n| summarize Count=count() by Name, UnparsedVersion | sort by Count \",\"size\":0,\"title\":\"Top Software Versions\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Name\",\"formatter\":5}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Name\"],\"expandTopLevel\":true}}},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_software\"},\"customWidth\":\"50\",\"name\":\"Top Software Versions\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Corelight\\n| where EventType startswith \\\"software\\\"\\n| where isnotempty(SoftwareType)\\n| summarize Count=count() by SoftwareType | sort by Count \",\"size\":0,\"title\":\"Top Software Types\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Name\",\"formatter\":5}],\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"Name\"],\"expandTopLevel\":true}}},\"conditionalVisibility\":{\"parameterName\":\"Tab\",\"comparison\":\"isEqualTo\",\"value\":\"corelight_software\"},\"customWidth\":\"50\",\"name\":\"Top Software Types\"}],\"fromTemplateId\":\"sentinel-CorelightWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects large amounts of DNS resolution failures.",
        "displayName": "Corelight - C2 DGA Detected Via Repetitive Failures",
        "enabled": false,
        "query": "let threshold = 25;\nCorelight\n| where EventType =~ 'dns'\n| where DnsResponseCodeName in~ ('NXDOMAIN', 'SERVFAIL')\n| summarize count() by DnsQueryName, SrcIpAddr, bin(TimeGenerated, 5m)\n| where count_ > threshold\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CommandAndControl"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects external proxy usage.",
        "displayName": "Corelight - External Proxy Detected",
        "enabled": false,
        "query": "Corelight\n| where EventType =~ 'http'\n| where isnotempty(HttpProxiedHeaders)\n| where ipv4_is_private(SrcIpAddr) == 'False'\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Low",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "DefenseEvasion",
          "CommandAndControl"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects SMB requests that originate internally and communicate with an external IP address.",
        "displayName": "Corelight - Forced External Outbound SMB",
        "enabled": false,
        "query": "Corelight\n| where EventType =~ 'conn'\n| where ZeekConnLocalSrc == 'True'\n| where ZeekConnLocalDst == 'False'\n| where NetworkConnectionHistory hasprefix 'Sh' and NetworkApplication hasprefix 'smb'\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CredentialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects compressed archives transferre over HTTP.",
        "displayName": "Corelight - Multiple Compressed Files Transferred over HTTP",
        "enabled": false,
        "query": "let threshold = 25;\nCorelight\n| where EventType =~ 'http'\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where isempty(HttpReferrerOriginal)\n| where SrcMimeType in~ ('application/vnd.ms-cab-compressed', 'application/warc', 'application/x-7z-compressed', 'application/x-ace', 'application/x-arc', 'application/x-archive', 'application/x-arj', 'application/x-compress', 'application/x-cpio', 'application/x-dmg', 'application/x-eet', 'application/x-gzip', 'application/x-lha', 'application/x-lrzip', 'application/x-lz4', 'application/x-lzma', 'application/x-lzh', 'application/x-lzip', 'application/x-rar', 'application/x-rpm', 'application/x-stuffit', 'application/x-tar', 'application/x-xz', 'application/x-zoo', 'application/zip')\n| summarize count() by UrlOriginal, SrcIpAddr, bin(TimeGenerated, 15m)\n| where count_ > threshold\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Exfiltration"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects sources sending multiple compressed files greater than 10MBs sent over HTTP in a short amount of time.",
        "displayName": "Corelight - Multiple files sent over HTTP with abnormal requests",
        "enabled": false,
        "query": "let threshold = 25;\nlet fl_size_threshold = 10000000;\nCorelight\n| where EventType =~ 'http'\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where isempty(HttpReferrerOriginal)\n| where tolong(HttpRequestBodyBytes) > fl_size_threshold\n| summarize count() by UrlOriginal, SrcIpAddr, bin(TimeGenerated, 15m)\n| where count_ > threshold\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Exfiltration"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Identify scanning of services that may be available on the internal network.",
        "displayName": "Corelight - Network Service Scanning Multiple IP Addresses",
        "enabled": false,
        "query": "let threshold = 25;\nCorelight\n| where EventType =~ 'conn'\n| where ZeekConnLocalSrc == 'True'\n| where ZeekConnLocalDst == 'True'\n| where NetworkConnectionState in~ ('S0', 'REJ')\n| where NetworkConnectionHistory !contains 'D'\n| summarize count() by SrcIpAddr, DstPort, bin(TimeGenerated, 1m)\n| where count_ > threshold\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects post requests to unusual extensions.",
        "displayName": "Corelight - Possible Webshell",
        "enabled": false,
        "query": "Corelight\n| where EventType =~ 'http'\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where toint(HttpStatusCode) between (200 .. 299)\n| where HttpRequestBodyBytes != 0 or HttpResponseBodyBytes != 0\n| extend fe = extract(@'.*(\\.\\w+)$', 1, UrlOriginal)\n| where fe in~ ('.jpg', '.jpeg', '.gif', '.png', '.icon', '.ico', '.xml', '.swf', '.svg', '.ppt', '.pttx', '.doc', '.docx', '.rtf', '.pdf', '.tif', '.zip', '.mov')\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Persistence"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects rare post requests to a single webserver location.",
        "displayName": "Corelight - Possible Webshell (Rare PUT or POST)",
        "enabled": false,
        "query": "let threshold = 3;\nCorelight\n| where EventType =~ 'http'\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where toint(HttpStatusCode) !between (400 .. 499)\n| where HttpRequestBodyBytes != 0 or HttpResponseBodyBytes != 0\n| extend fe = extract(@'.*(\\.\\w+)$', 1, UrlOriginal)\n| where fe in~ ('.aspx', '.asp', '.php', '.jsp', '.jspx', '.war', '.ashx', '.asmx', '.ascx', '.asx', '.cshtml', '.cfm', '.cfc', '.cfml', '.wss', '.do', '.action', '.pl', '.plx', '.pm', '.xs', '.t', '.pod', '.php-s', '.pht', '.phar', '.phps', '.php7', '.php5', '.php4', '.php3', '.phtml', '.py', '.rb', '.rhtml', '.cgi', '.dll', '.ayws', '.cgi', '.erb', '.rjs', '.hta', '.htc', '.cs', '.kt', '.lua', '.vbhtml')\n| summarize count() by UrlOriginal, SrcIpAddr\n| where count_ < threshold\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Persistence"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects where an emails contain non ascii characters within the Subject.",
        "displayName": "Corelight - SMTP Email containing NON Ascii Characters within the Subject",
        "enabled": false,
        "query": "Corelight\n| where EventType =~ 'smtp'\n| where Subject hasprefix  @'\\=?utf-16'\n| summarize recipients = dcount(To)\n| extend k = 1\n| join (Corelight\n        | where Subject hasprefix  @'\\=?utf-16'\n        | summarize by To\n        | extend k = 1) on k\n| where recipients > 1\n| extend MailCustomEntity = To\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Low",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when an HTTP request was made to a domain that was using unicode/punycode.",
        "displayName": "Corelight - Possible Typo Squatting or Punycode Phishing HTTP Request",
        "enabled": false,
        "query": "Corelight\n| where EventType =~ 'http'\n| where HttpRequestMethod =~ 'GET'\n| where isempty(HttpReferrerOriginal)\n| where HttpRequestHeaderHost has 'xn--'\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ]
      }
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Corelight",
          "publisher": "Corelight",
          "descriptionMarkdown": "The [Corelight](https://corelight.com/) data connector enables incident responders and threat hunters who use Azure Sentinel to work faster and more effectively. The data connector enables ingestion of events from [Zeek](https://zeek.org/) and [Suricata](https://suricata-ids.org/) via Corelight Sensors into Azure Sentinel.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Corelight_CL",
              "baseQuery": "Corelight"
            }
          ],
          "sampleQueries": [
            {
              "description": "Top 10 Clients (Source IP)",
              "query": "Corelight\n | summarize count() by SrcIpAddr\n | top 10 by count_"
            }
          ],
          "dataTypes": [
            {
              "name": "Corelight_CL",
              "lastDataReceivedQuery": "Corelight\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Corelight\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected [**Corelight**](https://aka.ms/sentinel-Corelight-parser) which is deployed with the Azure Sentinel Solution."
            },
            {
              "description": "Install the agent on the Server where the Corelight logs are generated.\n\n> Logs from Corelight Server deployed on Linux or Windows servers are collected by **Linux** or **Windows** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Linux agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux or Windows"
            },
            {
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Windows agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Windows Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Windows Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ]
            },
            {
              "description": "Follow the configuration steps below to get Corelight logs into Azure Sentinel. This configuration enriches events generated by Corelight module to provide visibility on log source information for Corelight logs. Refer to the [Azure Monitor Documentation](https://docs.microsoft.com/azure/azure-monitor/agents/data-sources-json) for more details on these steps.\n1. Download config file: [corelight.conf](https://aka.ms/sentinel-Corelight-conf/).\n2. Login to the server where you have installed Azure Log Analytics agent.\n3. Copy corelight.conf to the /etc/opt/microsoft/omsagent/**workspace_id**/conf/omsagent.d/ folder.\n4. Edit corelight.conf as follows:\n\n\t i. configure an alternate port to send data to, if desired (line 3)\n\n\t ii. replace **workspace_id** with real value of your Workspace ID (lines 22,23,24,27)\n5. Save changes and restart the Azure Log Analytics agent for Linux service with the following command:\n\t\tsudo /opt/microsoft/omsagent/bin/service_control restart",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                }
              ],
              "title": "2. Configure the logs to be collected"
            },
            {
              "description": "See the [Corelight documentation](https://docs.corelight.com/docs/sensor/export/json_tcp.html) for details on how to configure the Corelight Sensor to export JSON over TCP. Configure the JSON TCP Server to the IP address of the Azure Log Analytics Agent, using the port configured in the previous step (port 21234 by default)",
              "title": "3. Configure the Corelight Sensor to send logs to the Azure Log Analytics Agent"
            }
          ],
          "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**Corelight**](https://aka.ms/sentinel-Corelight-parser) which is deployed with the Azure Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Data Parser",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight Data Parser",
            "category": "Samples",
            "functionAlias": "Corelight",
            "query": "\nlet Corelight_view = view () {\r\n    Corelight_CL | where isnotempty(Message)\r\n| extend tmp = parse_json(Message)\r\n| evaluate bag_unpack(tmp)\r\n    | extend \r\n        EventVendor=\"Corelight\",\r\n        EventProduct=\"Corelight Sensor\",\r\n        EventType=column_ifexists('_path',''),\r\n        DvcHostname=column_ifexists('_system_name', ''),\r\n        SrcDvcHostname=column_ifexists('hostname_s', ''),\r\n        EventEndTime=column_ifexists('ts', '')\r\n};\r\nlet Corelight_main_view = view () {\r\n    Corelight_view \r\n    | extend\r\n        Action=column_ifexists('action', ''),\r\n        Actions=column_ifexists('actions', ''),\r\n        AgentRemoteId=column_ifexists('agent_remote_id', ''),\r\n        AlertCategory=column_ifexists('alert.category', ''),\r\n        AlertGroupId=column_ifexists('alert.gid', ''),\r\n        AlertMetadata=column_ifexists('alert.metadata', ''),\r\n        AlertRevision=column_ifexists('alert.rev', ''),\r\n        AlertSeverity=column_ifexists('alert.severity', ''),\r\n        AlertSignature=column_ifexists('alert.signature', ''),\r\n        AlertSignatureId=column_ifexists('alert.signature_id', ''),\r\n        Analyzer=column_ifexists('analyzer', ''),\r\n        AuthAttempts=column_ifexists('auth_attempts', ''),\r\n        AuthSuccess=column_ifexists('auth_success', ''),\r\n        BasicConstraintsCa=column_ifexists('basic_constraints.ca', ''),\r\n        BasicConstraintsPathLen=column_ifexists('basic_constraints.path_len', ''),\r\n        Cc=column_ifexists('cc', ''),\r\n        CertificateCn=column_ifexists('certificate.cn', ''),\r\n        CertificateCurve=column_ifexists('certificate.curve', ''),\r\n        CertificateExponent=column_ifexists('certificate.exponent', ''),\r\n        CertificateHashSha1=column_ifexists('orig_certificate_sha1', ''),\r\n        CertificateIssuer=column_ifexists('certificate.issuer', column_ifexists('client_issuer', '')),\r\n        CertificateKeyAlg=column_ifexists('certificate.key_alg', ''),\r\n        CertificateKeyLength=column_ifexists('certificate.key_length', ''),\r\n        CertificateKeyType=column_ifexists('certificate.key_type', ''),\r\n        CertificateNotValidAfter=column_ifexists('certificate.not_valid_after', ''),\r\n        CertificateNotValidBefore=column_ifexists('certificate.not_valid_before', ''),\r\n        CertificateSerial=column_ifexists('certificate.serial', ''),\r\n        CertificateSigAlg=column_ifexists('certificate.sig_alg', ''),\r\n        CertificateSubject=column_ifexists('certificate.subject', column_ifexists('client_subject', '')),\r\n        CertificateVersion=column_ifexists('certificate.version', ''),\r\n        CipherAlg=column_ifexists('cipher_alg', ''),\r\n        Client=column_ifexists('client', ''),\r\n        ClientMessage=column_ifexists('client_message', ''),\r\n        ClientSoftware=column_ifexists('client_software', ''),\r\n        CompileTs=column_ifexists('compile_ts', ''),\r\n        CompressionAlg=column_ifexists('compression_alg', ''),\r\n        Cshka=column_ifexists('cshka', ''),\r\n        DataChannelOrigH=column_ifexists('data_channel.orig_h', ''),\r\n        DataChannelPassive=column_ifexists('data_channel.passive', ''),\r\n        DataChannelRespH=column_ifexists('data_channel.resp_h', ''),\r\n        DataChannelRespP=column_ifexists('data_channel.resp_p', ''),\r\n        Date=column_ifexists('date', ''),\r\n        Depth=column_ifexists('depth', ''),\r\n        DhcpAssignedIpAddr=column_ifexists('assigned_addr', ''),\r\n        DhcpCircuitId=column_ifexists('circuit_id', ''),\r\n        DhcpLeaseTime=column_ifexists('lease_time', ''),\r\n        DhcpRequestedIpAddr=column_ifexists('requested_addr', ''),\r\n        DhcpSubscriberId=column_ifexists('subscriber_id', ''),\r\n        Direction=column_ifexists('direction', ''),\r\n        Dnp3FunctionReply=column_ifexists('fc_reply', ''),\r\n        Dnp3FunctionRequest=column_ifexists('fc_request', ''),\r\n        Dnp3Iin=column_ifexists('iin', ''),\r\n        DnsAdditionalAuthoritativeName=column_ifexists('auth', ''),\r\n        DnsAdditionalName=column_ifexists('addl', ''),\r\n        DnsFlagsAuthoritative=column_ifexists('AA', ''),\r\n        DnsFlagsRecursionAvailable=column_ifexists('RA', ''),\r\n        DnsFlagsRecursionDesired=column_ifexists('RD', ''),\r\n        DnsFlagsTruncated=column_ifexists('TC', ''),\r\n        DnsFlagsZ=column_ifexists('Z', ''),\r\n        DnsQueryClass=column_ifexists('qclass', ''),\r\n        DnsQueryClassName=column_ifexists('qclass_name', ''),\r\n        DnsQueryName=column_ifexists('query', ''),\r\n        DnsQueryType=column_ifexists('qtype', ''),\r\n        DnsQueryTypeName=column_ifexists('qtype_name', ''),\r\n        DnsRejected=column_ifexists('rejected', ''),\r\n        DnsResponseCode=column_ifexists('rcode', ''),\r\n        DnsResponseCodeName=column_ifexists('rcode_name', ''),\r\n        DnsResponseName=column_ifexists('answers', ''),\r\n        DnsResponseTtl=column_ifexists('TTLs', ''),\r\n        DnsRtt=column_ifexists('rtt', ''),\r\n        DnsTransactionId=column_ifexists('trans_id', ''),\r\n        Domainname=column_ifexists('domainname', ''),\r\n        Dropped=column_ifexists('dropped', ''),\r\n        Dst=column_ifexists('dst', ''),\r\n        DstBytes=column_ifexists('resp_bytes', ''),\r\n        DstCertificateIssuerName=column_ifexists('issuer', ''),\r\n        DstCertificateSha1=column_ifexists('resp_certificate_sha1', ''),\r\n        DstCertificateSubjectName=column_ifexists('subject', ''),\r\n        DstHostName=column_ifexists('http_header_host', column_ifexists('tls_server_name', '')),\r\n        DstIpAddr=column_ifexists('id.resp_h', column_ifexists('server_addr', column_ifexists('tx_hosts', ''))),\r\n        DstIpBytes=column_ifexists('resp_ip_bytes', ''),\r\n        DstMac=column_ifexists('resp_l2_addr', ''),\r\n        DstPackets=column_ifexists('resp_pkts', ''),\r\n        DstPort=column_ifexists('id.resp_p', ''),\r\n        Duration=column_ifexists('duration', ''),\r\n        EmailBodySections=column_ifexists('email_body_sections', ''),\r\n        EventDuration=column_ifexists('duration', ''),\r\n        EventUid=column_ifexists('z_Enrichment', column_ifexists('zeek_id_uids', column_ifexists('uid', ''))),\r\n        FailureReason=column_ifexists('failure_reason', ''),\r\n        FileAccessedTime=column_ifexists('times_accessed', ''),\r\n        FileChangedTime=column_ifexists('times_changed', ''),\r\n        FileCreationTime=column_ifexists('times_created', ''),\r\n        FileDesc=column_ifexists('file_desc', ''),\r\n        FileDirectory=column_ifexists('cwd', ''),\r\n        FileMimeType=column_ifexists('file_mime_type', column_ifexists('mime_type', column_ifexists('resp_mime_types', ''))),\r\n        FileModifiedTime=column_ifexists('times_modified', ''),\r\n        FileName=column_ifexists('filename', column_ifexists('resp_filenames', '')),\r\n        FilePath=column_ifexists('file_name', ''),\r\n        FilePreviousName=column_ifexists('prev_name', ''),\r\n        FileSize=column_ifexists('file_size', column_ifexists('total_bytes', column_ifexists('size', ''))),\r\n        FileSystemType=column_ifexists('native_file_system', ''),\r\n        FingerprintNetworkCommunityId=column_ifexists('community_id', ''),\r\n        FirstReceived=column_ifexists('first_received', ''),\r\n        FlowId=column_ifexists('flow_id', ''),\r\n        From=column_ifexists('from', ''),\r\n        FtpCommandLine=column_ifexists('arg', ''),\r\n        FtpPassive=column_ifexists('ftp_passive', ''),\r\n        FtpProcessName=column_ifexists('command', ''),\r\n        Fuid=column_ifexists('fuid', ''),\r\n        Fuids=column_ifexists('fuids', ''),\r\n        HasCertTable=column_ifexists('has_cert_table', ''),\r\n        HasDebugData=column_ifexists('has_debug_data', ''),\r\n        HasExportTable=column_ifexists('has_export_table', ''),\r\n        HasImportTable=column_ifexists('has_import_table', ''),\r\n        HashJa3=column_ifexists('ja3', ''),\r\n        HashJa3s=column_ifexists('ja3s', ''),\r\n        HashMd5=column_ifexists('md5', ''),\r\n        HashSha1=column_ifexists('sha1', ''),\r\n        HashSha256=column_ifexists('sha256', ''),\r\n        Hassh=column_ifexists('hassh', ''),\r\n        Hasshalgorithms=column_ifexists('hasshAlgorithms', ''),\r\n        Hasshserver=column_ifexists('hasshServer', ''),\r\n        Hasshserveralgorithms=column_ifexists('hasshServerAlgorithms', ''),\r\n        Hasshversion=column_ifexists('hasshVersion', ''),\r\n        Helo=column_ifexists('helo', ''),\r\n        Host=column_ifexists('host', ''),\r\n        HostKey=column_ifexists('host_key', ''),\r\n        HostKeyAlg=column_ifexists('host_key_alg', ''),\r\n        HostP=column_ifexists('host_p', ''),\r\n        Hostname=column_ifexists('hostname', ''),\r\n        HttpCookieVariables=column_ifexists('cookie_vars', ''),\r\n        HttpInformationalCode=column_ifexists('info_code', ''),\r\n        HttpInformationalMessage=column_ifexists('info_msg', ''),\r\n        HttpProxiedHeaders=column_ifexists('proxied', ''),\r\n        HttpReferrerOriginal=column_ifexists('referrer', ''),\r\n        HttpRequestBodyBytes=column_ifexists('request_body_len', ''),\r\n        HttpRequestHeaderHost=column_ifexists('host', ''),\r\n        HttpRequestHeaderNames=column_ifexists('client_header_names', ''),\r\n        HttpRequestHeaderOrigin=column_ifexists('origin', ''),\r\n        HttpRequestMethod=column_ifexists('method', ''),\r\n        HttpResponseBodyBytes=column_ifexists('response_body_len', ''),\r\n        HttpResponseBodyOriginal=column_ifexists('post_body', ''),\r\n        HttpResponseHeaderNames=column_ifexists('server_header_names', ''),\r\n        HttpStatusCode=column_ifexists('status_code', ''),\r\n        HttpStatusMessage=column_ifexists('status_msg', ''),\r\n        HttpVersion=column_ifexists('version', ''),\r\n        Id=column_ifexists('id', ''),\r\n        InReplyTo=column_ifexists('in_reply_to', ''),\r\n        Is64bit=column_ifexists('is_64bit', ''),\r\n        IsExe=column_ifexists('is_exe', ''),\r\n        IsOrig=column_ifexists('is_orig', ''),\r\n        IsWebmail=column_ifexists('is_webmail', ''),\r\n        KexAlg=column_ifexists('kex_alg', ''),\r\n        LastReply=column_ifexists('last_reply', ''),\r\n        LocalOrig=column_ifexists('local_orig', ''),\r\n        Logcert=column_ifexists('logcert', ''),\r\n        MacAlg=column_ifexists('mac_alg', ''),\r\n        Machine=column_ifexists('machine', ''),\r\n        Mailfrom=column_ifexists('mailfrom', ''),\r\n        Matched=column_ifexists('matched', ''),\r\n        MimeType=column_ifexists('mime_type', ''),\r\n        Msg=column_ifexists('msg', ''),\r\n        MsgId=column_ifexists('msg_id', ''),\r\n        MsgOrig=column_ifexists('msg_orig', ''),\r\n        MsgTypes=column_ifexists('msg_types', ''),\r\n        N=column_ifexists('n', ''),\r\n        Name=column_ifexists('name', ''),\r\n        NetworkApplication=column_ifexists('service', ''),\r\n        NetworkConnectionHistory=column_ifexists('history', ''),\r\n        NetworkConnectionState=column_ifexists('conn_state', ''),\r\n        NetworkInnerVlanId=column_ifexists('inner_vlan', ''),\r\n        NetworkMissedBytes=column_ifexists('missed_bytes', ''),\r\n        NetworkOuterVlanId=column_ifexists('vlan', ''),\r\n        NetworkProtocol=case(EventType == \"smb_files\" or EventType == \"smb_mapping\" or EventType == \"ssl\" or EventType == \"ssl_red\" or EventType == \"http\" or EventType == \"http_red\", \"tcp\",EventType == \"dhcp\", \"udp\",column_ifexists('proto','')),\r\n        Node=column_ifexists('node', ''),\r\n        Note=column_ifexists('note', ''),\r\n        Notice=column_ifexists('notice', ''),\r\n        Os=column_ifexists('os', ''),\r\n        OscpValidationStatus=column_ifexists('ocsp_status', ''),\r\n        P=column_ifexists('p', ''),\r\n        PacketSegment=column_ifexists('packet_segment', ''),\r\n        Path=column_ifexists('path', ''),\r\n        PcapCount=column_ifexists('pcap_cnt', ''),\r\n        Peer=column_ifexists('peer', ''),\r\n        PeerDescr=column_ifexists('peer_descr', ''),\r\n        Rcptto=column_ifexists('rcptto', ''),\r\n        RemoteLocationCity=column_ifexists('remote_location.city', ''),\r\n        RemoteLocationCountryCode=column_ifexists('remote_location.country_code', ''),\r\n        RemoteLocationLatitude=column_ifexists('remote_location.latitude', ''),\r\n        RemoteLocationLongitude=column_ifexists('remote_location.longitude', ''),\r\n        RemoteLocationRegion=column_ifexists('remote_location.region', ''),\r\n        ReplyCode=column_ifexists('reply_code', ''),\r\n        ReplyMsg=column_ifexists('reply_msg', ''),\r\n        ReplyTo=column_ifexists('reply_to', ''),\r\n        SanDns=column_ifexists('san.dns', ''),\r\n        SanEmail=column_ifexists('san.email', ''),\r\n        SanIp=column_ifexists('san.ip', ''),\r\n        SanUri=column_ifexists('san.uri', '') ,\r\n        SecondReceived=column_ifexists('second_received', ''),\r\n        SectionNames=column_ifexists('section_names', ''),\r\n        SeenIndicator=column_ifexists('seen.indicator', ''),\r\n        SeenIndicatorType=column_ifexists('seen.indicator_type', ''),\r\n        SeenWhere=column_ifexists('seen.where', ''),\r\n        Server=column_ifexists('server', ''),\r\n        ServerDnsComputerName=column_ifexists('server_dns_computer_name', ''),\r\n        ServerMessage=column_ifexists('server_message', ''),\r\n        ServerNbComputerName=column_ifexists('server_nb_computer_name', ''),\r\n        ServerSoftware=column_ifexists('server_software', ''),\r\n        ServerTreeName=column_ifexists('server_tree_name', ''),\r\n        Service=column_ifexists('service', ''),\r\n        ShareName=column_ifexists('path', ''),\r\n        ShareRelativeTargetName=column_ifexists('name', ''),\r\n        ShareType=column_ifexists('share_type', ''),\r\n        SmbAction=column_ifexists('action', ''),\r\n        SoftwareFlashVersionOriginal=column_ifexists('flash_version', ''),\r\n        SoftwareType=column_ifexists('software_type', ''),\r\n        Source=column_ifexists('source', ''),\r\n        Sources=column_ifexists('sources', ''),\r\n        Src=column_ifexists('src', ''),\r\n        SrcBytes=column_ifexists('orig_bytes', ''),\r\n        SrcDomain=column_ifexists('domain', ''),\r\n        SrcFileName=column_ifexists('orig_filenames', ''),\r\n        SrcFilePath=column_ifexists('src_file_name', ''),\r\n        SrcFqdn=column_ifexists('client_fqdn', ''),\r\n        SrcHostName=column_ifexists('host_name', ''),\r\n        SrcIpAddr=column_ifexists('id.orig_h', column_ifexists('rx_hosts', column_ifexists('client_addr', ''))),\r\n        SrcIpBytes=column_ifexists('orig_ip_bytes', ''),\r\n        SrcMac=column_ifexists('mac', column_ifexists('orig_l2_addr', '')),\r\n        SrcMimeType=column_ifexists('orig_mime_types', ''),\r\n        SrcPackets=column_ifexists('orig_pkts', ''),\r\n        SrcPort=column_ifexists('id.orig_p', ''),\r\n        Sub=column_ifexists('sub', ''),\r\n        Subject=column_ifexists('subject', ''),\r\n        SubpressFor=column_ifexists('subpress_for', ''),\r\n        Subsystem=column_ifexists('subsystem', ''),\r\n        Success=column_ifexists('success', ''),\r\n        SuricataId=column_ifexists('suri_id', ''),\r\n        SuricataIds=column_ifexists('suri_ids', ''),\r\n        Tls=column_ifexists('tls', ''),\r\n        TlsCertificateValidationStatus=column_ifexists('validation_status', ''),\r\n        TlsCipher=column_ifexists('cipher', ''),\r\n        TlsCurve=column_ifexists('curve', ''),\r\n        TlsEstablished=column_ifexists('established', ''),\r\n        TlsLastAlert=column_ifexists('last_alert', ''),\r\n        TlsNextProtocol=column_ifexists('next_protocol', ''),\r\n        TlsNotaryResponse=column_ifexists('notary', ''),\r\n        TlsResumed=column_ifexists('resumed', ''),\r\n        TlsServerName=column_ifexists('server_name', ''),\r\n        TlsVersion=column_ifexists('version', ''),\r\n        TlsVersionNumber=column_ifexists('version_num', ''),\r\n        To=column_ifexists('to', ''),\r\n        TransactionId=column_ifexists('tx_id', ''),\r\n        TransDepth=column_ifexists('trans_depth', ''),\r\n        TunnelType=column_ifexists('tunnel_type', ''),\r\n        UnparsedVersion=column_ifexists('unparsed_version', ''),\r\n        Url=column_ifexists('url', ''),\r\n        UrlOriginal=column_ifexists('uri', ''),\r\n        UrlQueryValues=column_ifexists('uri_vars', ''),\r\n        UserAgent=column_ifexists('user_agent', ''),\r\n        UserAgentOriginal=column_ifexists('user_agent', ''),\r\n        UserName=column_ifexists('user', column_ifexists('username', '')),\r\n        UserPassword=column_ifexists('password', ''),\r\n        Username=column_ifexists('username', ''),\r\n        UsesAslr=column_ifexists('uses_aslr', ''),\r\n        UsesCodeIntegrity=column_ifexists('uses_code_integrity', ''),\r\n        UsesDep=column_ifexists('uses_dep', ''),\r\n        UsesSeh=column_ifexists('uses_seh', ''),\r\n        ValidCtLogs=column_ifexists('valid_ct_logs', ''),\r\n        ValidCtOperators=column_ifexists('valid_ct_operators', ''),\r\n        ValidCtOperatorsList=column_ifexists('valid_ct_operators_list', ''),\r\n        Version=column_ifexists('version', ''),\r\n        VersionAddl=column_ifexists('version.addl', ''),\r\n        VersionMajor=column_ifexists('version.major', ''),\r\n        VersionMinor2=column_ifexists('version.minor2', ''),\r\n        VersionMinor3=column_ifexists('version.minor3', ''),\r\n        VersionMinor=column_ifexists('version.minor', ''),\r\n        X509=column_ifexists('x509', ''),\r\n        XOriginatingIp=column_ifexists('x_originating_ip', ''),\r\n        ZeekConnLocalDst=column_ifexists('local_resp', ''),\r\n        ZeekConnLocalSrc=column_ifexists('local_orig', ''),\r\n        ZeekFilesAnalyzers=column_ifexists('analyzers', ''),\r\n        ZeekFilesEntropy=column_ifexists('entropy', ''),\r\n        ZeekFilesExtracted=column_ifexists('extracted', ''),\r\n        ZeekFilesExtractedCutoff=column_ifexists('extracted_cutoff', ''),\r\n        ZeekFilesExtractedSize=column_ifexists('extracted_size', ''),\r\n        ZeekFilesMissingBytes=column_ifexists('missing_bytes', ''),\r\n        ZeekFilesOverflowBytes=column_ifexists('overflow_bytes', ''),\r\n        ZeekFilesSeenBytes=column_ifexists('seen_bytes', ''),\r\n        ZeekFilesTimedout=column_ifexists('timedout', ''),\r\n        ZeekHttpOmniture=column_ifexists('omniture', ''),\r\n        ZeekHttpTags=column_ifexists('tags', ''),\r\n        ZeekHttpTransDepth=column_ifexists('trans_depth', ''),\r\n        ZeekIdCertChainFuids=column_ifexists('cert_chain_fuids', ''),\r\n        ZeekIdClientCertChainFuids=column_ifexists('client_cert_chain_fuids', ''),\r\n        ZeekIdConnUids=column_ifexists('conn_uids', ''),\r\n        ZeekIdFuid=column_ifexists('fuid', ''),\r\n        ZeekIdOrigFuids=column_ifexists('orig_fuids', ''),\r\n        ZeekIdParentFuid=column_ifexists('parent_fuid', ''),\r\n        ZeekIdRespFuids=column_ifexists('resp_fuids', ''),\r\n        ZeekIdTunnelParents=column_ifexists('tunnel_parents', ''),\r\n        ZeekIdUids=column_ifexists('uids', ''),\r\n        ZeekMetaDstIpAddrHostName=column_ifexists('id.resp_h_name.vals', ''),\r\n        ZeekMetaDstIpAddrSource=column_ifexists('id.resp_h_name.src', ''),\r\n        ZeekMetaSrcIpAddrHostName=column_ifexists('id.orig_h_name.vals', ''),\r\n        ZeekMetaSrcIpAddrSource=column_ifexists('id.orig_h_name.src', ''),\r\n        ZeekOrigCc=column_ifexists('orig_cc', ''),\r\n        ZeekRespCc=column_ifexists('resp_cc', '')\r\n       | project\r\n        DvcHostname,\r\n        SrcDvcHostname,\r\n        EventEndTime,\r\n        Message,\r\n        TimeGenerated, \r\n        EventType,\r\n        EventVendor,\r\n        EventProduct,\r\n        Action,\r\n        Actions,\r\n        AgentRemoteId,\r\n        AlertCategory,\r\n        AlertGroupId,\r\n        AlertMetadata,\r\n        AlertRevision,\r\n        AlertSeverity,\r\n        AlertSignature,\r\n        AlertSignatureId,\r\n        Analyzer,\r\n        AuthAttempts,\r\n        AuthSuccess,\r\n        BasicConstraintsCa,\r\n        BasicConstraintsPathLen,\r\n        Cc,\r\n        CertificateCn,\r\n        CertificateCurve,\r\n        CertificateExponent,\r\n        CertificateHashSha1,\r\n        CertificateIssuer,\r\n        CertificateKeyAlg,\r\n        CertificateKeyLength,\r\n        CertificateKeyType,\r\n        CertificateNotValidAfter,\r\n        CertificateNotValidBefore,\r\n        CertificateSerial,\r\n        CertificateSigAlg,\r\n        CertificateSubject,\r\n        CertificateVersion,\r\n        CipherAlg,\r\n        Client,\r\n        ClientMessage,\r\n        ClientSoftware,\r\n        CompileTs,\r\n        CompressionAlg,\r\n        Cshka,\r\n        DataChannelOrigH,\r\n        DataChannelPassive,\r\n        DataChannelRespH,\r\n        DataChannelRespP,\r\n        Date,\r\n        Depth,\r\n        DhcpAssignedIpAddr,\r\n        DhcpCircuitId,\r\n        DhcpLeaseTime,\r\n        DhcpRequestedIpAddr,\r\n        DhcpSubscriberId,\r\n        Direction,\r\n        Dnp3FunctionReply,\r\n        Dnp3FunctionRequest,\r\n        Dnp3Iin,\r\n        DnsAdditionalAuthoritativeName,\r\n        DnsAdditionalName,\r\n        DnsFlagsAuthoritative,\r\n        DnsFlagsRecursionAvailable,\r\n        DnsFlagsRecursionDesired,\r\n        DnsFlagsTruncated,\r\n        DnsFlagsZ,\r\n        DnsQueryClass,\r\n        DnsQueryClassName,\r\n        DnsQueryName,\r\n        DnsQueryType,\r\n        DnsQueryTypeName,\r\n        DnsRejected,\r\n        DnsResponseCode,\r\n        DnsResponseCodeName,\r\n        DnsResponseName,\r\n        DnsResponseTtl,\r\n        DnsRtt,\r\n        DnsTransactionId,\r\n        Domainname,\r\n        Dropped,\r\n        Dst,\r\n        DstBytes,\r\n        DstCertificateIssuerName,\r\n        DstCertificateSha1,\r\n        DstCertificateSubjectName,\r\n        DstHostName,\r\n        DstIpAddr,\r\n        DstIpBytes,\r\n        DstMac,\r\n        DstPackets,\r\n        DstPort,\r\n        Duration,\r\n        EmailBodySections,\r\n        EventDuration,\r\n        EventUid,\r\n        FailureReason,\r\n        FileAccessedTime,\r\n        FileChangedTime,\r\n        FileCreationTime,\r\n        FileDesc,\r\n        FileDirectory,\r\n        FileMimeType,\r\n        FileModifiedTime,\r\n        FileName,\r\n        FilePath,\r\n        FilePreviousName,\r\n        FileSize,\r\n        FileSystemType,\r\n        FingerprintNetworkCommunityId,\r\n        FirstReceived,\r\n        FlowId,\r\n        From,\r\n        FtpCommandLine,\r\n        FtpPassive,\r\n        FtpProcessName,\r\n        Fuid,\r\n        Fuids,\r\n        HasCertTable,\r\n        HasDebugData,\r\n        HasExportTable,\r\n        HasImportTable,\r\n        HashJa3,\r\n        HashJa3s,\r\n        HashMd5,\r\n        HashSha1,\r\n        HashSha256,\r\n        Hassh,\r\n        Hasshalgorithms,\r\n        Hasshserver,\r\n        Hasshserveralgorithms,\r\n        Hasshversion,\r\n        Helo,\r\n        Host,\r\n        HostKey,\r\n        HostKeyAlg,\r\n        HostP,\r\n        Hostname,\r\n        HttpCookieVariables,\r\n        HttpInformationalCode,\r\n        HttpInformationalMessage,\r\n        HttpProxiedHeaders,\r\n        HttpReferrerOriginal,\r\n        HttpRequestBodyBytes,\r\n        HttpRequestHeaderHost,\r\n        HttpRequestHeaderNames,\r\n        HttpRequestHeaderOrigin,\r\n        HttpRequestMethod,\r\n        HttpResponseBodyBytes,\r\n        HttpResponseBodyOriginal,\r\n        HttpResponseHeaderNames,\r\n        HttpStatusCode,\r\n        HttpStatusMessage,\r\n        HttpVersion,\r\n        Id,\r\n        InReplyTo,\r\n        Is64bit,\r\n        IsExe,\r\n        IsOrig,\r\n        IsWebmail,\r\n        KexAlg,\r\n        LastReply,\r\n        LocalOrig,\r\n        Logcert,\r\n        MacAlg,\r\n        Machine,\r\n        Mailfrom,\r\n        Matched,\r\n        MimeType,\r\n        Msg,\r\n        MsgId,\r\n        MsgOrig,\r\n        MsgTypes,\r\n        N,\r\n        Name,\r\n        NetworkApplication,\r\n        NetworkConnectionHistory,\r\n        NetworkConnectionState,\r\n        NetworkInnerVlanId,\r\n        NetworkMissedBytes,\r\n        NetworkOuterVlanId,\r\n        NetworkProtocol,\r\n        Node,\r\n        Note,\r\n        Notice,\r\n        Os,\r\n        OscpValidationStatus,\r\n        P,\r\n        PacketSegment,\r\n        Path,\r\n        PcapCount,\r\n        Peer,\r\n        PeerDescr,\r\n        Rcptto,\r\n        RemoteLocationCity,\r\n        RemoteLocationCountryCode,\r\n        RemoteLocationLatitude,\r\n        RemoteLocationLongitude,\r\n        RemoteLocationRegion,\r\n        ReplyCode,\r\n        ReplyMsg,\r\n        ReplyTo,\r\n        SanDns,\r\n        SanEmail,\r\n        SanIp,\r\n        SanUri,\r\n        SecondReceived,\r\n        SectionNames,\r\n        SeenIndicator,\r\n        SeenIndicatorType,\r\n        SeenWhere,\r\n        Server,\r\n        ServerDnsComputerName,\r\n        ServerMessage,\r\n        ServerNbComputerName,\r\n        ServerSoftware,\r\n        ServerTreeName,\r\n        Service,\r\n        ShareName,\r\n        ShareRelativeTargetName,\r\n        ShareType,\r\n        SmbAction,\r\n        SoftwareFlashVersionOriginal,\r\n        SoftwareType,\r\n        Source,\r\n        Sources,\r\n        Src,\r\n        SrcBytes,\r\n        SrcDomain,\r\n        SrcFileName,\r\n        SrcFilePath,\r\n        SrcFqdn,\r\n        SrcHostName,\r\n        SrcIpAddr,\r\n        SrcIpBytes,\r\n        SrcMac,\r\n        SrcMimeType,\r\n        SrcPackets,\r\n        SrcPort,\r\n        Sub,\r\n        Subject,\r\n        SubpressFor,\r\n        Subsystem,\r\n        Success,\r\n        SuricataId,\r\n        SuricataIds,\r\n        Tls,\r\n        TlsCertificateValidationStatus,\r\n        TlsCipher,\r\n        TlsCurve,\r\n        TlsEstablished,\r\n        TlsLastAlert,\r\n        TlsNextProtocol,\r\n        TlsNotaryResponse,\r\n        TlsResumed,\r\n        TlsServerName,\r\n        TlsVersion,\r\n        TlsVersionNumber,\r\n        To,\r\n        TransactionId,\r\n        TransDepth,\r\n        TunnelType,\r\n        UnparsedVersion,\r\n        Url,\r\n        UrlOriginal,\r\n        UrlQueryValues,\r\n        UserAgent,\r\n        UserAgentOriginal,\r\n        UserName,\r\n        UserPassword,\r\n        Username,\r\n        UsesAslr,\r\n        UsesCodeIntegrity,\r\n        UsesDep,\r\n        UsesSeh,\r\n        ValidCtLogs,\r\n        ValidCtOperators,\r\n        ValidCtOperatorsList,\r\n        Version,\r\n        VersionAddl,\r\n        VersionMajor,\r\n        VersionMinor2,\r\n        VersionMinor3,\r\n        VersionMinor,\r\n        X509,\r\n        XOriginatingIp,\r\n        ZeekConnLocalDst,\r\n        ZeekConnLocalSrc,\r\n        ZeekFilesAnalyzers,\r\n        ZeekFilesEntropy,\r\n        ZeekFilesExtracted,\r\n        ZeekFilesExtractedCutoff,\r\n        ZeekFilesExtractedSize,\r\n        ZeekFilesMissingBytes,\r\n        ZeekFilesOverflowBytes,\r\n        ZeekFilesSeenBytes,\r\n        ZeekFilesTimedout,\r\n        ZeekHttpOmniture,\r\n        ZeekHttpTags,\r\n        ZeekHttpTransDepth,\r\n        ZeekIdCertChainFuids,\r\n        ZeekIdClientCertChainFuids,\r\n        ZeekIdConnUids,\r\n        ZeekIdFuid,\r\n        ZeekIdOrigFuids,\r\n        ZeekIdParentFuid,\r\n        ZeekIdRespFuids,\r\n        ZeekIdTunnelParents,\r\n        ZeekIdUids,\r\n        ZeekMetaDstIpAddrHostName,\r\n        ZeekMetaDstIpAddrSource,\r\n        ZeekMetaSrcIpAddrHostName,\r\n        ZeekMetaSrcIpAddrSource,\r\n        ZeekOrigCc,\r\n        ZeekRespCc\r\n};\r\nCorelight_main_view\r\n\r\n",
            "version": 1
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - Abnormal Email Subject",
            "category": "Hunting Queries",
            "query": "Corelight\n| where EventType =~ 'smtp'\n| where Subject hasprefix @'\\=?utf-16'\n| extend MailCustomEntity = To\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for emails with NON-Ascii characters within the Subject ."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - Compressed Files Transferred over HTTP",
            "category": "Hunting Queries",
            "query": "Corelight\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'http'\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where SrcMimeType in~ ('application/vnd.ms-cab-compressed', 'application/warc', 'application/x-7z-compressed', 'application/x-ace', 'application/x-arc', 'application/x-archive', 'application/x-arj', 'application/x-compress', 'application/x-cpio', 'application/x-dmg', 'application/x-eet', 'application/x-gzip', 'application/x-lha', 'application/x-lrzip', 'application/x-lz4', 'application/x-lzma', 'application/x-lzh', 'application/x-lzip', 'application/x-rar', 'application/x-rpm', 'application/x-stuffit', 'application/x-tar', 'application/x-xz', 'application/x-zoo', 'application/zip')\n| summarize count() by SrcIpAddr\n| top 10 by count_\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for top sources which transferred compressed archives over HTTP."
              },
              {
                "name": "tactics",
                "value": "Exfiltration"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - Top sources of data transferred",
            "category": "Hunting Queries",
            "query": "Corelight\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'http'\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| summarize data_sent = sum(tolong(HttpRequestBodyBytes)) by SrcIpAddr\n| top 10 by data_sent\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for top sources by transferred data over period of time."
              },
              {
                "name": "tactics",
                "value": "Exfiltration"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 4",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - External Facing Services",
            "category": "Hunting Queries",
            "query": "Corelight\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'conn'\n| where ipv4_is_private(SrcIpAddr) == 'False'\n| where isnotempty(DstPort)\n| where NetworkConnectionHistory startswith 'Sh'\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for external facing services."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 5",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - Files in logs",
            "category": "Hunting Queries",
            "query": "Corelight\n| where isnotempty(FileName)\n| summarize makeset(FileName) by SrcIpAddr\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for files which where seen in logs over period of time."
              },
              {
                "name": "tactics",
                "value": "InitialAccess,Exfiltration"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 6",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - File transferred by source",
            "category": "Hunting Queries",
            "query": "Corelight\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'http'\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where isnotempty(FilePath)\n| summarize f_list = makeset(FilePath) by SrcIpAddr\n| extend f_cnt = array_length(f_list)\n| order by f_cnt\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for files transferred over period of time by each source."
              },
              {
                "name": "tactics",
                "value": "Exfiltration"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 7",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - Multiple Remote SMB Connections from single client",
            "category": "Hunting Queries",
            "query": "let threshold = 50;\nCorelight\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'smb_mapping'\n| where isnotempty(ShareName)\n| summarize sh_cnt = dcount(ShareName) by SrcIpAddr, bin(TimeGenerated, 1m)\n| where sh_cnt > threshold\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Detects when a single source is connecting to many different SMB or file shares."
              },
              {
                "name": "tactics",
                "value": "Discovery"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 8",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - Obfuscated binary filenames",
            "category": "Hunting Queries",
            "query": "Corelight\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'http'\n| where FileMimeType in~ ('application/java-archive', 'application/mshelp', 'application/chrome-ext', 'application/x-object', 'application/x-executable', 'application/x-dosexec', 'application/x-msdownload', 'application/vnd.microsoft.portable-executable ')\n| where UrlOriginal !hassuffix '.exe' or UrlOriginal !hassuffix '.dll' or UrlOriginal !hassuffix '.msi'\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for downloaded obfuscated binary file names."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 9",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - Rare PUT or POST",
            "category": "Hunting Queries",
            "query": "Corelight\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'http'\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where HttpStatusCode !startswith '4'\n| where HttpRequestBodyBytes != 0 or HttpResponseBodyBytes != 0\n| extend fe = extract(@'.*(\\.\\w+)$', 1, UrlOriginal)\n| where fe in~ ('.aspx', '.asp', '.php', '.jsp', '.jspx', '.war', '.ashx', '.asmx', '.ascx', '.asx', '.cshtml', '.cfm', '.cfc', '.cfml', '.wss', '.do', '.action', '.pl', '.plx', '.pm', '.xs', '.t', '.pod', '.php-s', '.pht', '.phar', '.phps', '.php7', '.php5', '.php4', '.php3', '.phtml', '.py', '.rb', '.rhtml', '.cgi', '.dll', '.ayws', '.cgi', '.erb', '.rjs', '.hta', '.htc', '.cs', '.kt', '.lua', '.vbhtml')\n| summarize count() by SrcIpAddr\n| where count_ < 10\n| order by count_ asc\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for rare post requests to a single location."
              },
              {
                "name": "tactics",
                "value": "Persistence"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Corelight Hunting Query 10",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Corelight - Repetitive DNS Failures",
            "category": "Hunting Queries",
            "query": "let threshold = 100;\nCorelight\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'dns'\n| where DnsResponseCodeName in~ ('NXDOMAIN', 'SERVFAIL')\n| summarize count() by SrcIpAddr, bin(TimeGenerated, 1h)\n| where count_ > threshold\n| extend IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for repetitive DNS resolution failures from single host."
              },
              {
                "name": "tactics",
                "value": "CommanAndControl"
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.1.0",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "Corelight",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Nikhil Tripathi",
          "email": "v-ntripathi@microsoft.com"
        },
        "support": {
          "name": "Corelight",
          "tier": "Partner",
          "link": "https://support.corelight.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_Corelight_workbook')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightC2RepetitiveFailures_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightExternalProxyDetected_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightForcedExternalOutboundSMB_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightMultipleCompressedFilesTransferredOverHTTP_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightMultipleFilesSentOverHTTPAbnormalRequests_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightNetworkServiceScanning_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightPossibleWebshell_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightPossibleWebshellRarePOST_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightSMTPEmailSubjectNonAsciiCharacters_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CorelightTypoSquattingOrPunycodePhishingHTTPRequest_AnalyticalRules')]",
              "version": "1.1.0"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_CorelightConnector')]",
              "version": "1.1.0"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_Corelight_Parser')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightAbnormalEmailSubject_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightCompressedFilesTransferredOverHTTP_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightDataTransferedByIp_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightExternalServices_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightFilesSeen_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightFilesTransferedByIp_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightMultipleRemoteSMBConnectionsFromSingleIP_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightObfuscatedBinary_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightRarePOST_HuntingQueries')]",
              "version": "1.1.0"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CorelightRepetitiveDnsFailures_HuntingQueries')]",
              "version": "1.1.0"
            }
          ]
        },
        "firstPublishDate": "2021-10-20",
        "providers": [
          "Corelight"
        ],
        "categories": {
          "domains": [
            "IT Operations",
            "Security – Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
