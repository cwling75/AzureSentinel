{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Tenable - support@tenable.com",
    "comments": "Solution template for TenableIO"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Region to deploy solution resources"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "1d38c37c-3dd2-4446-906e-728a8bf924ed"
    }
  },
  "variables": {
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "TenableIOAPIConnector": "TenableIOAPIConnector",
    "_TenableIOAPIConnector": "[variables('TenableIOAPIConnector')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "TenableIOAssets_Parser": "TenableIOAssets_Parser",
    "_TenableIOAssets_Parser": "[variables('TenableIOAssets_Parser')]",
    "TenableIOVulnerabilities_Parser": "TenableIOVulnerabilities_Parser",
    "_TenableIOVulnerabilities_Parser": "[variables('TenableIOVulnerabilities_Parser')]",
    "sourceId": "tenable.tenable-sentinel-integration",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Tenable.io Vulnerability Management",
          "publisher": "Tenable",
          "descriptionMarkdown": "The [Tenable.io](https://www.tenable.com/products/tenable-io) data connector provides the capability to ingest Asset and Vulnerability data into Azure Sentinel through the REST API from the Tenable.io platform (Managed in the cloud). Refer to [API documentation](https://developer.tenable.com/reference) for more information. The connector provides the ability to get data which helps to examine potential security risks, get insight into your computing assets, diagnose configuration problems and more",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Tenable_IO_Assets_CL",
              "baseQuery": "Tenable_IO_Assets_CL"
            },
            {
              "metricName": "Total data received",
              "legend": "Tenable_IO_Vulns_CL",
              "baseQuery": "Tenable_IO_Vulns_CL"
            }
          ],
          "sampleQueries": [
            {
              "description": "TenableIO VM Report - All Assets",
              "query": "Tenable_IO_Assets_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "TenableIO VM Report - All Vulns",
              "query": "Tenable_IO_Vulns_CL\n | sort by TimeGenerated desc"
            },
            {
              "description": "Select unique vulnerabilities by a specific asset.",
              "query": "Tenable_IO_Vuln_CL\n | where asset_fqdn_s has \"one.one.one.one\"\n | summarize any(asset_fqdn_s, plugin_id_d, plugin_cve_s) by plugin_id_d"
            },
            {
              "description": "Select all Azure assets.",
              "query": "Tenable_IO_Assets_CL\n | where isnotempty(azure_resource_id_s) or isnotempty(azure_vm_id_g)"
            }
          ],
          "dataTypes": [
            {
              "name": "Tenable_IO_Assets_CL",
              "lastDataReceivedQuery": "Tenable_IO_Assets_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "Tenable_IO_Vulns_CL",
              "lastDataReceivedQuery": "Tenable_IO_Vulns_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Tenable_IO_Assets_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Tenable_IO_Vulns_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "REST API Credentials/permissions",
                "description": "Both a **TenableAccessKey** and a **TenableSecretKey** is required to access the Teanble REST API. [See the documentation to learn more about API](https://developer.tenable.com/reference#vulnerability-management). Check all [requirements and follow  the instructions](https://docs.tenable.com/tenableio/vulnerabilitymanagement/Content/Settings/GenerateAPIKey.htm) for obtaining credentials."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Durable Functions to connect to the Tenable.io API to pull [assets](https://developer.tenable.com/reference#exports-assets-download-chunk) and [vulnerabilities](https://developer.tenable.com/reference#exports-vulns-request-export) at a regular interval into Azure Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": ">**NOTE:** This data connector depends on a [**Tenable.io parser for vulnerabilities**](https://aka.ms/sentinel-TenableIO-TenableIOVulnerabilities-parser) and a [**Tenable.io parser for assets**](https://aka.ms/sentinel-TenableIO-TenableIOAssets-parser) based on a Kusto Function to work as expected which is deployed with the Azure Sentinel Solution."
            },
            {
              "description": "**STEP 1 - Configuration steps for Tenable.io**\n\n [Follow the instructions](https://docs.tenable.com/tenableio/vulnerabilitymanagement/Content/Settings/GenerateAPIKey.htm) to obtain the required API credentials. \n"
            },
            {
              "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function App**\n\n>**IMPORTANT:** Before deploying the Workspace data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following).",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the Tenable.io Vulnerability Management Report data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-TenableIO-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n> **NOTE:** Within the same resource group, you can't mix Windows and Linux apps in the same region. Select existing resource group without Windows apps in it or create new resource group.\n3. Enter the **TenableAccessKey** and **TenableSecretKey** and deploy. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the Tenable.io Vulnerability Management Report data connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-TenableIO-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. TenableIOXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Azure Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
            },
            {
              "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tTenableAccessKey\n\t\tTenableSecretKey\n\t\tWorkspaceID\n\t\tWorkspaceKey\n\t\tlogAnalyticsUri (optional)\n> - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<WorkspaceID>.ods.opinsights.azure.us`.\n3. Once all application settings have been entered, click **Save**."
            }
          ],
          "additionalRequirementBanner": "These queries and workbooks are dependent on a [**Tenable.io parser for vulnerabilities**](https://aka.ms/sentinel-TenableIO-TenableIOVulnerabilities-parser) and a [**Tenable.io parser for assets**](https://aka.ms/sentinel-TenableIO-TenableIOAssets-parser) based on Kusto to work as expected which is deployed with the Azure Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "TenableIO Assets Data Parser",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "TenableIO Assets Data Parser",
            "category": "Samples",
            "functionAlias": "TenableIOAssets",
            "query": "\n\r\nTenable_IO_Assets_CL\r\n| extend \r\n    EventVendor=\"TenableIO\",\r\n    EventProduct=\"Assets\",\r\n    EventType='AssetExport',\r\n    AgentName=column_ifexists('agent_names_s', ''),\r\n    AgentUUID=column_ifexists('agent_uuid_g', ''),\r\n    AWSAvailabilityZone=column_ifexists('aws_availability_zone_s', ''),\r\n    AWSEC2InstanceAMI=column_ifexists('aws_ec2_instance_ami_id_s', ''),\r\n    AWSEC2InstanceGroupName=column_ifexists('aws_ec2_instance_group_name_s', ''),\r\n    AWSEC2InstanceID=column_ifexists('aws_ec2_instance_id_s', ''),\r\n    AWSEC2InstanceStateName=column_ifexists('aws_ec2_instance_state_name_s', ''),\r\n    AWSEC2InstanceType=column_ifexists('aws_ec2_instance_type_s', ''),\r\n    AWSOwnerID=column_ifexists('aws_owner_id_s', ''),\r\n    AWSRegion=column_ifexists('aws_region_s', ''),\r\n    AWSSubnetID=column_ifexists('aws_subnet_id_s', ''),\r\n    AWSVPCID=column_ifexists('aws_vpc_id_s', ''),\r\n    AzureResourceID=column_ifexists('azure_resource_id_s', ''),\r\n    AzureVMID=column_ifexists('azure_vm_id_g', ''),\r\n    BIOSUUID=strcat(bios_uuid_g, bios_uuid_s),\r\n    Computer=column_ifexists('Computer', ''),\r\n    CreatedAtTime=column_ifexists('created_at_t', ''),\r\n    DeletedAtTime=column_ifexists('deleted_at_t', ''),\r\n    DeletedBy=column_ifexists('deleted_by_g', ''),\r\n    FirstScanTime=column_ifexists('first_scan_time_t', ''),\r\n    FirstSeen=column_ifexists('first_seen_t', ''),\r\n    FQDNs=column_ifexists('fqdns_s', ''),\r\n    GCPInstanceID=column_ifexists('gcp_instance_id_s', ''),\r\n    GCPProjectID=column_ifexists('gcp_project_id_s', ''),\r\n    GCPZone=column_ifexists('gcp_zone_s', ''),\r\n    HasAgent=column_ifexists('has_agent_b', ''),\r\n    HasPluginResults=column_ifexists('has_plugin_results_b', ''),\r\n    ID=column_ifexists('id_g', ''),\r\n    InstalledSoftware=column_ifexists('installed_software_s', ''),\r\n    IPV4s=column_ifexists('ipv4s_s', ''),\r\n    IPV6s=column_ifexists('ipv6s_s', ''),\r\n    LastAuthenticatedScanDate=column_ifexists('last_authenticated_scan_date_t', ''),\r\n    LastLicensedScanDate=column_ifexists('last_licensed_scan_date_t', ''),\r\n    LastScanID=strcat(last_scan_id_g, last_scan_id_s),\r\n    LastScanDate=column_ifexists('last_scan_time_t', ''),\r\n    LastScheduleID=column_ifexists('last_schedule_id_s', ''),\r\n    LastSeenDate=column_ifexists('last_seen_t', ''),\r\n    MACAddresses=column_ifexists('mac_addresses_s', ''),\r\n    ManufacturerTPMIDs=column_ifexists('manufacturer_tpm_ids_s', ''),\r\n    NetBIOSNames=column_ifexists('netbios_names_s', ''),\r\n    NetworkID=column_ifexists('network_id_g', ''),\r\n    NetworkInterfaces=column_ifexists('network_interfaces_s', ''),\r\n    NetworkName=column_ifexists('network_name_s', ''),\r\n    OperatingSystems=column_ifexists('operating_systems_s', ''),\r\n    QualysAssetIDs=column_ifexists('qualys_asset_ids_s', ''),\r\n    QualysHostIDs=column_ifexists('qualys_host_ids_s', ''),\r\n    ServiceNowSysID=column_ifexists('servicenow_sysid_g', ''),\r\n    Sources=column_ifexists('sources_s', ''),\r\n    SSHFingerprints=column_ifexists('ssh_fingerprints_s', ''),\r\n    SymantecEPHardwareKeys=column_ifexists('symantec_ep_hardware_keys_s', ''),\r\n    SystemTypes=column_ifexists('system_types_s', ''),\r\n    Tags=column_ifexists('tags_s', ''),\r\n    TerminatedAt=column_ifexists('terminated_at_t', ''),\r\n    TerminatedBy=column_ifexists('terminated_by_s', ''),\r\n    UpdatedAt=column_ifexists('updated_at_t', '')\r\n| project\r\n    FQDNs,\r\n    AzureResourceID,\r\n    AzureVMID,\r\n    OperatingSystems,\r\n    IPV4s,\r\n    NetworkName,\r\n    InstalledSoftware,\r\n    FirstSeen,\r\n    LastSeenDate,\r\n    FirstScanTime,\r\n    LastScanDate,\r\n    LastAuthenticatedScanDate,\r\n    LastLicensedScanDate,\r\n    HasPluginResults,\r\n    HasAgent,\r\n    TimeGenerated, \r\n    EventVendor,\r\n    EventProduct,\r\n    EventType,\r\n    AgentName,\r\n    AgentUUID,\r\n    AWSAvailabilityZone,\r\n    AWSEC2InstanceAMI,\r\n    AWSEC2InstanceGroupName,\r\n    AWSEC2InstanceID,\r\n    AWSEC2InstanceStateName,\r\n    AWSEC2InstanceType,\r\n    AWSOwnerID,\r\n    AWSRegion,\r\n    AWSSubnetID,\r\n    AWSVPCID,\r\n    BIOSUUID,\r\n    Computer,\r\n    CreatedAtTime,\r\n    DeletedAtTime,\r\n    DeletedBy,\r\n    GCPInstanceID,\r\n    GCPProjectID,\r\n    GCPZone,\r\n    ID,\r\n    IPV6s,\r\n    LastScanID,\r\n    LastScheduleID,\r\n    MACAddresses,\r\n    ManufacturerTPMIDs,\r\n    NetBIOSNames,\r\n    NetworkID,\r\n    NetworkInterfaces,\r\n    QualysAssetIDs,\r\n    QualysHostIDs,\r\n    ServiceNowSysID,\r\n    Sources,\r\n    SSHFingerprints,\r\n    SymantecEPHardwareKeys,\r\n    SystemTypes,\r\n    Tags,\r\n    TerminatedAt,\r\n    TerminatedBy,\r\n    UpdatedAt",
            "version": 1
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "TenableIO Vulnerabilities Data Parser",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "TenableIO Vulnerabilities Data Parser",
            "category": "Samples",
            "functionAlias": "TenableIOVulnerabilities",
            "query": "\nTenable_IO_Vuln_CL\r\n| extend \r\n    EventVendor=\"TenableIO\",\r\n    EventProduct=\"Vulnerabilities\",\r\n    EventType='VulnerabilityExport',\r\n    AssetAgentUUID=column_ifexists('asset_agent_uuid_g', ''),\r\n    AssetBIOSUUID=column_ifexists('asset_bios_uuid_g', ''),\r\n    AssetDeviceType=column_ifexists('asset_device_type_s', ''),\r\n    AssetFQDN=column_ifexists('asset_fqdn_s', ''),\r\n    AssetHostname=column_ifexists('asset_hostname_s', ''),\r\n    AssetIPV4=column_ifexists('asset_ipv4_s', ''),\r\n    AssetIPV6=column_ifexists('asset_ipv6_s', ''),\r\n    AssetLastAuthenticatedScanDate=column_ifexists('asset_last_authenticated_results_t', ''),\r\n    AssetLastUnauthenticatedScanDate=column_ifexists('asset_last_unauthenticated_results_t', ''),\r\n    AssetMACAddress=column_ifexists('asset_mac_address_s', ''),\r\n    AssetNetBIOSName=column_ifexists('asset_netbios_name_s', ''),\r\n    AssetNetworkID=column_ifexists('asset_network_id_g', ''),\r\n    AssetOperatingSystem=column_ifexists('asset_operating_system_s', ''),\r\n    AssetTracked=column_ifexists('asset_tracked_b', ''),\r\n    AssetUUID=column_ifexists('asset_uuid_g', ''),\r\n    Computer=column_ifexists('Computer', ''),\r\n    FirstFoundDate=column_ifexists('first_found_t', ''),\r\n    IndexedDate=column_ifexists('indexed_t', ''),\r\n    LastFixedDate=column_ifexists('last_fixed_t', ''),\r\n    LastFoundDate=column_ifexists('last_found_t', ''),\r\n    Output=column_ifexists('output_s', ''),\r\n    PluginBugtraqID=column_ifexists('plugin_bid_s', ''),\r\n    PluginCanvasPackage=column_ifexists('plugin_canvas_package_s', ''),\r\n    PluginChecksForDefaultAccount=column_ifexists('plugin_checks_for_default_account_b', ''),\r\n    PluginChecksForMalware=column_ifexists('plugin_checks_for_malware_b', ''),\r\n    PluginCPE=column_ifexists('plugin_cpe_s', ''),\r\n    PluginCVE=column_ifexists('plugin_cve_s', ''),\r\n    PluginCVSS3BaseScore=column_ifexists('plugin_cvss3_base_score_d', ''),\r\n    PluginCVSS3TemporalScore=column_ifexists('plugin_cvss3_temporal_score_d', ''),\r\n    PluginCVSS3TemporalVectorExploitability=column_ifexists('plugin_cvss3_temporal_vector_exploitability_s', ''),\r\n    PluginCVSS3TemporalVectorRaw=column_ifexists('plugin_cvss3_temporal_vector_raw_s', ''),\r\n    PluginCVSS3TemporalVectorRemediationLevel=column_ifexists('plugin_cvss3_temporal_vector_remediation_level_s', ''),\r\n    PluginCVSS3TemporalVectorReportConfidence=column_ifexists('plugin_cvss3_temporal_vector_report_confidence_s', ''),\r\n    PluginCVSS3VectorAccessComplexity=column_ifexists('plugin_cvss3_vector_access_complexity_s', ''),\r\n    PluginCVSS3VectorAccessVector=column_ifexists('plugin_cvss3_vector_access_vector_s', ''),\r\n    PluginCVSS3VectorAvailabilityImpact=column_ifexists('plugin_cvss3_vector_availability_impact_s', ''),\r\n    PluginCVSS3VectorConfidentialityImpact=column_ifexists('plugin_cvss3_vector_confidentiality_impact_s', ''),\r\n    PluginCVSS3VectorIntegrityImpact=column_ifexists('plugin_cvss3_vector_integrity_impact_s', ''),\r\n    PluginCVSS3VectorRaw=column_ifexists('plugin_cvss3_vector_raw_s', ''),\r\n    PluginCVSSBaseScore=column_ifexists('plugin_cvss_base_score_d', ''),\r\n    PluginCVSSTemporalScore=column_ifexists('plugin_cvss_temporal_score_d', ''),\r\n    PluginCVSSTemporalVectorRemediationLevel=column_ifexists('plugin_cvss_temporal_vector_remediation_level_s', ''),\r\n    PluginCVSSTemporalVectorReportConfidence=column_ifexists('plugin_cvss_temporal_vector_report_confidence_s', ''),\r\n    PluginCVSSVectorAccessComplexity=column_ifexists('plugin_cvss_vector_access_complexity_s', ''),\r\n    PluginCVSSVectorAccessVector=column_ifexists('plugin_cvss_vector_access_vector_s', ''),\r\n    PluginCVSSVectorAuthentication=column_ifexists('plugin_cvss_vector_authentication_s', ''),\r\n    PluginCVSSVectorAvailabilityImpact=column_ifexists('plugin_cvss_vector_availability_impact_s', ''),\r\n    PluginCVSSVectorConfidentialityImpact=column_ifexists('plugin_cvss_vector_confidentiality_impact_s', ''),\r\n    PluginCVSSVectorIntegrityImpact=column_ifexists('plugin_cvss_vector_integrity_impact_s', ''),\r\n    PluginCVSSVectorRaw=column_ifexists('plugin_cvss_vector_raw_s', ''),\r\n    PluginDescription=column_ifexists('plugin_description_s', ''),\r\n    PluginExploitabilityEase=column_ifexists('plugin_exploitability_ease_s', ''),\r\n    PluginExploitedByMalware=column_ifexists('plugin_exploited_by_malware_b', ''),\r\n    PluginExploitedByNessus=column_ifexists('plugin_exploited_by_nessus_b', ''),\r\n    PluginExploitAvailable=column_ifexists('plugin_exploit_available_b', ''),\r\n    PluginExploitFrameworkCanvas=column_ifexists('plugin_exploit_framework_canvas_b', ''),\r\n    PluginExploitFrameworkMetasploit=column_ifexists('plugin_exploit_framework_metasploit_b', ''),\r\n    PluginFamilyID=column_ifexists('plugin_family_id_d', ''),\r\n    PluginFamily=column_ifexists('plugin_family_s', ''),\r\n    PluginHasPatch=column_ifexists('plugin_has_patch_b', ''),\r\n    PluginID=column_ifexists('plugin_id_d', ''),\r\n    PluginInTheNews=column_ifexists('plugin_in_the_news_b', ''),\r\n    PluginMetasploitName=column_ifexists('plugin_metasploit_name_s', ''),\r\n    PluginMicrosoftBulletin=column_ifexists('plugin_ms_bulletin_s', ''),\r\n    PluginName=column_ifexists('plugin_name_s', ''),\r\n    PluginPatchPublicationDate=column_ifexists('plugin_patch_publication_date_t', ''),\r\n    PluginPublicationDate=column_ifexists('plugin_publication_date_t', ''),\r\n    PluginRiskFactor=column_ifexists('plugin_risk_factor_s', ''),\r\n    PluginSeeAlso=column_ifexists('plugin_see_also_s', ''),\r\n    PluginSolution=column_ifexists('plugin_solution_s', ''),\r\n    PluginSTIGSeverity=column_ifexists('plugin_stig_severity_s', ''),\r\n    PluginSynopsis=column_ifexists('plugin_synopsis_s', ''),\r\n    PluginType=column_ifexists('plugin_type_s', ''),\r\n    PluginUnsupportedByVendor=column_ifexists('plugin_unsupported_by_vendor_b', ''),\r\n    PluginUbuntuSecurityNotice=column_ifexists('plugin_usn_s', ''),\r\n    PluginVersion=column_ifexists('plugin_version_s', ''),\r\n    PluginVPRDriversAgeOfVulnLowerBound=column_ifexists('plugin_vpr_drivers_age_of_vuln_lower_bound_d', ''),\r\n    PluginVPRDriversAgeOfVulnUpperBound=column_ifexists('plugin_vpr_drivers_age_of_vuln_upper_bound_d', ''),\r\n    PluginVPRDriversCVSS3ImpactScore=column_ifexists('plugin_vpr_drivers_cvss3_impact_score_d', ''),\r\n    PluginVPRDriversCVSSImpactScorePredicted=column_ifexists('plugin_vpr_drivers_cvss_impact_score_predicted_b', ''),\r\n    PluginVPRDriversExploitCodeMaturity=column_ifexists('plugin_vpr_drivers_exploit_code_maturity_s', ''),\r\n    PluginVPRDriversProductCoverage=column_ifexists('plugin_vpr_drivers_product_coverage_s', ''),\r\n    PluginVPRDriversThreatIntensityLast28=column_ifexists('plugin_vpr_drivers_threat_intensity_last28_s', ''),\r\n    PluginVPRDriversThreatRecencyLowerBound=column_ifexists('plugin_vpr_drivers_threat_recency_lower_bound_d', ''),\r\n    PluginVPRDriversThreatRecencyUpperBound=column_ifexists('plugin_vpr_drivers_threat_recency_upper_bound_d', ''),\r\n    PluginVPRDriversThreatSourcesLast28=column_ifexists('plugin_vpr_drivers_threat_sources_last28_s', ''),\r\n    PluginVPRScore=column_ifexists('plugin_vpr_score_d', ''),\r\n    PluginVPRUpdatedDate=column_ifexists('plugin_vpr_updated_t', ''),\r\n    PluginVPRPublicationDate=column_ifexists('plugin_vuln_publication_date_t', ''),\r\n    PluginXRefs=column_ifexists('plugin_xrefs_s', ''),\r\n    PortNumber=column_ifexists('port_port_d', ''),\r\n    PortProtocol=column_ifexists('port_protocol_s', ''),\r\n    PortService=column_ifexists('port_service_s', ''),\r\n    ScanCompletedAtTime=column_ifexists('scan_completed_at_t', ''),\r\n    ScanScheduleUUID=column_ifexists('scan_schedule_uuid_s', ''),\r\n    ScanID=column_ifexists('scan_uuid_g', ''),\r\n    SeverityDefaultID=column_ifexists('severity_default_id_d', ''),\r\n    SeverityID=column_ifexists('severity_id_d', ''),\r\n    SeverityModificationType=column_ifexists('severity_modification_type_s', ''),\r\n    Severity=column_ifexists('severity_s', ''),\r\n    State=column_ifexists('state_s', '')\r\n| project\r\n    AssetFQDN,\r\n    AssetIPV4,\r\n    AssetOperatingSystem,\r\n    Severity,\r\n    State,\r\n    PluginID,\r\n    PluginName,\r\n    PluginCVE,\r\n    PluginCPE,\r\n    PluginVPRScore,\r\n    PluginCVSS3BaseScore,\r\n    PluginCVSSBaseScore,\r\n    PluginFamily,\r\n    PluginDescription,\r\n    PluginSolution,\r\n    FirstFoundDate,\r\n    IndexedDate,\r\n    LastFixedDate,\r\n    LastFoundDate,\r\n    AssetLastAuthenticatedScanDate,\r\n    AssetLastUnauthenticatedScanDate,\r\n    AssetAgentUUID,\r\n    AssetBIOSUUID,\r\n    AssetDeviceType,\r\n    AssetHostname,\r\n    AssetIPV6,\r\n    AssetMACAddress,\r\n    AssetNetBIOSName,\r\n    AssetNetworkID,\r\n    AssetTracked,\r\n    AssetUUID,\r\n    Computer,\r\n    Output,\r\n    PluginBugtraqID,\r\n    PluginCanvasPackage,\r\n    PluginChecksForDefaultAccount,\r\n    PluginChecksForMalware,\r\n    PluginCVSS3TemporalScore,\r\n    PluginCVSS3TemporalVectorExploitability,\r\n    PluginCVSS3TemporalVectorRaw,\r\n    PluginCVSS3TemporalVectorRemediationLevel,\r\n    PluginCVSS3TemporalVectorReportConfidence,\r\n    PluginCVSS3VectorAccessComplexity,\r\n    PluginCVSS3VectorAccessVector,\r\n    PluginCVSS3VectorAvailabilityImpact,\r\n    PluginCVSS3VectorConfidentialityImpact,\r\n    PluginCVSS3VectorIntegrityImpact,\r\n    PluginCVSS3VectorRaw,\r\n    PluginCVSSTemporalScore,\r\n    PluginCVSSTemporalVectorRemediationLevel,\r\n    PluginCVSSTemporalVectorReportConfidence,\r\n    PluginCVSSVectorAccessComplexity,\r\n    PluginCVSSVectorAccessVector,\r\n    PluginCVSSVectorAuthentication,\r\n    PluginCVSSVectorAvailabilityImpact,\r\n    PluginCVSSVectorConfidentialityImpact,\r\n    PluginCVSSVectorIntegrityImpact,\r\n    PluginCVSSVectorRaw,\r\n    PluginExploitabilityEase,\r\n    PluginExploitedByMalware,\r\n    PluginExploitedByNessus,\r\n    PluginExploitAvailable,\r\n    PluginExploitFrameworkCanvas,\r\n    PluginExploitFrameworkMetasploit,\r\n    PluginFamilyID,\r\n    PluginHasPatch,\r\n    PluginInTheNews,\r\n    PluginMetasploitName,\r\n    PluginMicrosoftBulletin,\r\n    PluginPatchPublicationDate,\r\n    PluginPublicationDate,\r\n    PluginRiskFactor,\r\n    PluginSeeAlso,\r\n    PluginSTIGSeverity,\r\n    PluginSynopsis,\r\n    PluginType,\r\n    PluginUnsupportedByVendor,\r\n    PluginUbuntuSecurityNotice,\r\n    PluginVersion,\r\n    PluginVPRDriversAgeOfVulnLowerBound,\r\n    PluginVPRDriversAgeOfVulnUpperBound,\r\n    PluginVPRDriversCVSS3ImpactScore,\r\n    PluginVPRDriversCVSSImpactScorePredicted,\r\n    PluginVPRDriversExploitCodeMaturity,\r\n    PluginVPRDriversProductCoverage,\r\n    PluginVPRDriversThreatIntensityLast28,\r\n    PluginVPRDriversThreatRecencyLowerBound,\r\n    PluginVPRDriversThreatRecencyUpperBound,\r\n    PluginVPRDriversThreatSourcesLast28,\r\n    PluginVPRUpdatedDate,\r\n    PluginVPRPublicationDate,\r\n    PluginXRefs,\r\n    PortNumber,\r\n    PortProtocol,\r\n    PortService,\r\n    ScanCompletedAtTime,\r\n    ScanScheduleUUID,\r\n    ScanID,\r\n    SeverityDefaultID,\r\n    SeverityID,\r\n    SeverityModificationType,\r\n    EventVendor,\r\n    EventProduct,\r\n    EventType\r\n",
            "version": 1
          }
        }
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.1.0",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "TenableIO",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Tenable",
          "email": "support@tenable.com"
        },
        "support": {
          "name": "Tenable",
          "tier": "Partner",
          "link": "https://www.tenable.com/support/technical-support"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_TenableIOAPIConnector')]",
              "version": "1.1.0"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_TenableIOAssets_Parser')]",
              "version": "1.1.0"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_TenableIOVulnerabilities_Parser')]",
              "version": "1.1.0"
            }
          ]
        },
        "firstPublishDate": "2021-10-18",
        "providers": [
          "Tenable"
        ],
        "categories": {
          "domains": [
            "Security – Vulnerability Management"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
