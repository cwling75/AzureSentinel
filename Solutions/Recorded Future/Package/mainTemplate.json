{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Ruchita Dubey - v-rucdu@microsoft.com",
    "comments": "Solution template for Recorded Future"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Region to deploy solution resources"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic6-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "playbook1-PlaybookName": {
      "defaultValue": "RecordedFuture-ImportToSentinel",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook2-PlaybookName": {
      "defaultValue": "RecordedFuture-DOMAIN-C2_DNS_Name-IndicatorProcessor",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook2-PlaybookNameBatching": {
      "defaultValue": "RecordedFuture-DOMAIN-C2_DNS_Name-IndicatorProcessor",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook3-PlaybookName": {
      "defaultValue": "RecordedFuture-HASH-Obs_in_Underground-IndicatorProcessor",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook3-PlaybookNameBatching": {
      "defaultValue": "RecordedFuture-HASH-Obs_in_Underground-IndicatorProcessor",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook4-PlaybookName": {
      "defaultValue": "RecordedFuture-IOC_Enrichment-IP_Domain_URL_Hash",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook5-PlaybookName": {
      "defaultValue": "RecordedFuture-IP-Actively_Comm_C2_Server-IndicatorProcessor",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook5-PlaybookNameBatching": {
      "defaultValue": "RecordedFuture-IP-Actively_Comm_C2_Server-IndicatorProcessor",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook6-PlaybookName": {
      "defaultValue": "RecordedFuture-URL-Recent_Rep_by_Insikt_Group-IndicatorProcessor",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook6-PlaybookNameBatching": {
      "defaultValue": "RecordedFuture-URL-Recent_Rep_by_Insikt_Group-IndicatorProcessor",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Recorded Future - C&C DNS Name to DNS Events - Correlation&Threat Hunting",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "workbook2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook2-name": {
      "type": "string",
      "defaultValue": "Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat Hunting",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "RecordedFutureDomainMalwareC2inDNSEvents_AnalyticalRules": "RecordedFutureDomainMalwareC2inDNSEvents_AnalyticalRules",
    "_RecordedFutureDomainMalwareC2inDNSEvents_AnalyticalRules": "[variables('RecordedFutureDomainMalwareC2inDNSEvents_AnalyticalRules')]",
    "RecordedFutureDomainMalwareC2inSyslogEvents_AnalyticalRules": "RecordedFutureDomainMalwareC2inSyslogEvents_AnalyticalRules",
    "_RecordedFutureDomainMalwareC2inSyslogEvents_AnalyticalRules": "[variables('RecordedFutureDomainMalwareC2inSyslogEvents_AnalyticalRules')]",
    "RecordedFutureHashObservedInUndergroundinCommonSecurityLog_AnalyticalRules": "RecordedFutureHashObservedInUndergroundinCommonSecurityLog_AnalyticalRules",
    "_RecordedFutureHashObservedInUndergroundinCommonSecurityLog_AnalyticalRules": "[variables('RecordedFutureHashObservedInUndergroundinCommonSecurityLog_AnalyticalRules')]",
    "RecordedFutureIPMalwareC2inAzureActivityEvents_AnalyticalRules": "RecordedFutureIPMalwareC2inAzureActivityEvents_AnalyticalRules",
    "_RecordedFutureIPMalwareC2inAzureActivityEvents_AnalyticalRules": "[variables('RecordedFutureIPMalwareC2inAzureActivityEvents_AnalyticalRules')]",
    "RecordedFutureIPMalwareC2inDNSEvents_AnalyticalRules": "RecordedFutureIPMalwareC2inDNSEvents_AnalyticalRules",
    "_RecordedFutureIPMalwareC2inDNSEvents_AnalyticalRules": "[variables('RecordedFutureIPMalwareC2inDNSEvents_AnalyticalRules')]",
    "RecordedFutureUrlReportedbyInsiktGroupinSyslogEvents_AnalyticalRules": "RecordedFutureUrlReportedbyInsiktGroupinSyslogEvents_AnalyticalRules",
    "_RecordedFutureUrlReportedbyInsiktGroupinSyslogEvents_AnalyticalRules": "[variables('RecordedFutureUrlReportedbyInsiktGroupinSyslogEvents_AnalyticalRules')]",
    "playbook1-Playbooks": "playbook1-Playbooks",
    "_playbook1-Playbooks": "[variables('playbook1-Playbooks')]",
    "playbook1-GraphSecurityConnectionName": "[concat('microsoftgraphsecurity-', parameters('playbook1-PlaybookName'))]",
    "playbook-1-connection-2": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/microsoftgraphsecurity')]",
    "_playbook-1-connection-2": "[variables('playbook-1-connection-2')]",
    "playbook2-Playbooks": "playbook2-Playbooks",
    "_playbook2-Playbooks": "[variables('playbook2-Playbooks')]",
    "playbook2-RecordedFutureConnectionName": "[concat('recordedfuture-', parameters('playbook2-PlaybookName'))]",
    "playbook-2-connection-2": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/recordedfuture')]",
    "_playbook-2-connection-2": "[variables('playbook-2-connection-2')]",
    "playbook3-Playbooks": "playbook3-Playbooks",
    "_playbook3-Playbooks": "[variables('playbook3-Playbooks')]",
    "playbook3-RecordedFutureConnectionName": "[concat('recordedfuture-', parameters('playbook3-PlaybookName'))]",
    "playbook4-Playbooks": "playbook4-Playbooks",
    "_playbook4-Playbooks": "[variables('playbook4-Playbooks')]",
    "playbook4-RecordedFutureConnectionName": "[concat('recordedfuture-', parameters('playbook4-PlaybookName'))]",
    "playbook4-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook4-PlaybookName'))]",
    "playbook-4-connection-3": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/azuresentinel')]",
    "_playbook-4-connection-3": "[variables('playbook-4-connection-3')]",
    "playbook5-Playbooks": "playbook5-Playbooks",
    "_playbook5-Playbooks": "[variables('playbook5-Playbooks')]",
    "playbook5-RecordedFutureConnectionName": "[concat('recordedfuture-', parameters('playbook5-PlaybookName'))]",
    "playbook6-Playbooks": "playbook6-Playbooks",
    "_playbook6-Playbooks": "[variables('playbook6-Playbooks')]",
    "playbook6-RecordedFutureConnectionName": "[concat('recordedfuture-', parameters('playbook6-PlaybookName'))]",
    "Recorded Future -  C&C DNS Name to DNS Events - Correlation&Threat Hunting_workbook": "Recorded Future -  C&C DNS Name to DNS Events - Correlation&Threat Hunting_workbook",
    "_Recorded Future -  C&C DNS Name to DNS Events - Correlation&Threat Hunting_workbook": "[variables('Recorded Future -  C&C DNS Name to DNS Events - Correlation&Threat Hunting_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat Hunting_workbook": "Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat Hunting_workbook",
    "_Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat Hunting_workbook": "[variables('Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat Hunting_workbook')]",
    "sourceId": "recordedfuture1605638642586.recorded_future",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Identifies a match in DNSEvents from Recorded Future C2 DNS Name Domains Risklist.",
        "displayName": "Detection of Malware C2 Domains in DNS Events",
        "enabled": false,
        "query": "// Identifies a match in DnsEvent from the Recorded Future DOMAIN Malware C2 DNS Name \nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\n//Create a list of TLDs in our threat feed for later validation\nlet list_tlds = ThreatIntelligenceIndicator\n| where TimeGenerated > ago(ioc_lookBack)\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\n| where isnotempty(DomainName)\n| extend parts = split(DomainName, '.')\n| extend tld = parts[(array_length(parts)-1)]\n| summarize count() by tostring(tld)\n| summarize make_list(tld);\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(DomainName)\n| join (\n  DnsEvents\n  | where TimeGenerated > ago(dt_lookBack)\n  //Extract Domain patterns from syslog message\n  | where isnotempty(Name)\n  | extend parts = split(Name, '.')\n  //Split out the TLD\n  | extend tld = parts[(array_length(parts)-1)]\n  //Validate parsed Domain by checking if the TLD is in the list of TLDs in our threat feed\n  | where tld in~ (list_tlds)\n  | extend DNS_TimeGenerated = TimeGenerated\n  ) \non $left.DomainName==$right.Name\n| where DNS_TimeGenerated >= TimeGenerated and DNS_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, DomainName, Description, ConfidenceScore, AdditionalInformation, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, DNS_TimeGenerated, Computer, ClientIP, Name, QueryType\n| extend timestamp = DNS_TimeGenerated, HostCustomEntity = Computer, IPCustomEntity = ClientIP, DomainCustomEntity = DomainName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P1D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CommandAndControl"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "HostCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "DomainCustomEntity",
                "identifier": "DomainName"
              }
            ],
            "entityType": "DNS"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Identifies a match in Syslog from Recorded Future C2 DNS Name Domains Risklist.",
        "displayName": "Detection of Malware C2 Domains in Syslog Events",
        "enabled": false,
        "query": "// Identifies a match in Syslog from the Recorded Future DOMAIN Malware C2 DNS Name \nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\n//Create a list of TLDs in our threat feed for later validation\nlet list_tlds = ThreatIntelligenceIndicator\n| where TimeGenerated > ago(ioc_lookBack)\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\n| where isnotempty(DomainName)\n| extend parts = split(DomainName, '.')\n| extend tld = parts[(array_length(parts)-1)]\n| summarize count() by tostring(tld)\n| summarize make_list(tld);\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(DomainName)\n| join (\n  Syslog\n  | where TimeGenerated > ago(dt_lookBack)\n  //Extract domain patterns from syslog message\n  | extend domain = extract(\"(([a-z0-9]+(-[a-z0-9]+)*\\\\.)+[a-z]{2,})\",1, tolower(SyslogMessage))\n  | where isnotempty(domain)\n  | extend parts = split(domain, '.')\n  //Split out the TLD\n  | extend tld = parts[(array_length(parts)-1)]\n  //Validate parsed domain by checking if the TLD is in the list of TLDs in our threat feed\n  | where tld in~ (list_tlds)\n  | extend Syslog_TimeGenerated = TimeGenerated\n  ) \non $left.DomainName==$right.domain\n| where Syslog_TimeGenerated >= TimeGenerated and Syslog_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Syslog_TimeGenerated, SyslogMessage, Computer, ProcessName, domain, HostIP, Url\n| extend timestamp = Syslog_TimeGenerated, HostCustomEntity = Computer, IPCustomEntity = HostIP, URLCustomEntity = Url\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P1D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CommandAndControl"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "HostCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "URLCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          },
          {
            "fieldMappings": [
              {
                "columnName": "domain",
                "identifier": "DomainName"
              }
            ],
            "entityType": "DNS"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Identifies a match in CommonSecurityLog from Recorded Future Hash Observed in Underground Virus Testing Sites RiskList.",
        "displayName": "Detection of Specific Hashes in CommonSecurityLog",
        "enabled": false,
        "query": "// Identifies a match in CommonSecurityLog from the Recorded Future Hashes Observed in Underground Virus Testing Sites\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\nlet fileHashIndicators = ThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n// Picking up only Recorded Future IOC's that have been observed in undersground testing sites\n| where Description == \"Recorded Future - HASH - Observed in Underground Virus Testing Sites\"\n| where Active == true\n| where isnotempty(FileHashValue);\n// Handle matches against both lower case and uppercase versions of the hash:\n(fileHashIndicators | extend  FileHashValue = tolower(FileHashValue)\n| union (fileHashIndicators | extend FileHashValue = toupper(FileHashValue)))\n| join (\n  CommonSecurityLog | where TimeGenerated >= ago(dt_lookBack)\n  | where isnotempty(FileHash)\n  | extend CommonSecurityLog_TimeGenerated = TimeGenerated\n  )\non $left.FileHashValue == $right.FileHash\n| where CommonSecurityLog_TimeGenerated >= TimeGenerated and CommonSecurityLog_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore,\nCommonSecurityLog_TimeGenerated, SourceIP, SourcePort, DestinationIP, DestinationPort, SourceUserID, SourceUserName, DeviceName, DeviceAction, RequestURL, DestinationUserName, DestinationUserID, ApplicationProtocol, Activity, FileHash, AdditionalInformation\n| extend timestamp = CommonSecurityLog_TimeGenerated, IPCustomEntity = SourceIP, HostCustomEntity = DeviceName, AccountCustomEntity = SourceUserName, URLCustomEntity = Url\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P1D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "PreAttack"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "columnName": "HostCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "URLCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Identifies a match in Azure Activity Events from Recorded Future Actively Communicating C&C Server Risklist.",
        "displayName": "Detection of Malware C2 IPs in Azure Act. Events",
        "enabled": false,
        "query": "// Identifies a match in AzureActivity from the Recorded Future C2 Malware Detection IPs (Actively Communicating C&C Server RiskList)\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\nThreatIntelligenceIndicator\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == \"Recorded Future - IP - Actively Communicating C&C Server\"\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n| extend TI_ipEntity = NetworkIP\n| join (\n  AzureActivity | where TimeGenerated >= ago(dt_lookBack)\n  // renaming time column so it is clear the log this came from\n  | extend AzureActivity_TimeGenerated = TimeGenerated\n  )\non $left.TI_ipEntity == $right.CallerIpAddress\n| where AzureActivity_TimeGenerated >= TimeGenerated and AzureActivity_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, AzureActivity_TimeGenerated, TI_ipEntity, CallerIpAddress, Caller, OperationNameValue, ActivityStatusValue, CategoryValue, ResourceId, NetworkIP, Description, AdditionalInformation\n| extend timestamp = AzureActivity_TimeGenerated, IPCustomEntity = CallerIpAddress, AccountCustomEntity = Caller, URLCustomEntity = Url\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P1D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CommandAndControl"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "URLCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          },
          {
            "fieldMappings": [
              {
                "columnName": "TI_ipEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Identifies a match in DnsEvents from Recorded Future Actively Communicating C&C Server Risklist.",
        "displayName": "Detection of Malware C2 IPs in DNS Events",
        "enabled": false,
        "query": "// Identifies a match in DnsEvent from the Recorded Future C2 Malware Detection IPs (Actively Communicating C&C Server RiskList)\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\nThreatIntelligenceIndicator\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\n| where Description == \"Recorded Future - IP - Actively Communicating C&C Server\"\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n| extend TI_ipEntity = NetworkIP\n| join (\n  DnsEvents | where TimeGenerated >= ago(dt_lookBack)\n  | where SubType =~ \"LookupQuery\" and isnotempty(IPAddresses)\n  | extend SingleIP = split(IPAddresses, \",\")\n  | mvexpand SingleIP\n  | extend SingleIP = tostring(SingleIP)\n  // renaming time column so it is clear the log this came from\n  | extend DNS_TimeGenerated = TimeGenerated\n  )\non $left.TI_ipEntity == $right.SingleIP\n| where DNS_TimeGenerated >= TimeGenerated and DNS_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, DNS_TimeGenerated, TI_ipEntity, Computer, EventId, SubType, ClientIP, Name, IPAddresses, NetworkIP, Description, AdditionalInformation\n| extend timestamp = DNS_TimeGenerated, IPCustomEntity = ClientIP, HostCustomEntity = Computer, URLCustomEntity = Url\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P1D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CommandAndControl"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "HostCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "URLCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          },
          {
            "fieldMappings": [
              {
                "columnName": "TI_ipEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Identifies a match in Syslog from Recorded Future URLs Recently Reported as malicious by Insikt Group.",
        "displayName": "Detection of Malicious URLs in Syslog Events",
        "enabled": false,
        "query": "// Identifies a match in Syslog from the Recorded Future URLs Recently Reported by Insikt Group\nlet dt_lookBack = 1h;\nlet ioc_lookBack = 1d;\nThreatIntelligenceIndicator\n// Picking up only Recorded Future IOC's that have been recently reported as malicious by Insikt Group\n| where Description == 'Recorded Future - URL - Recently Reported by Insikt Group'\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(Url)\n| join (\n  Syslog\n  | where TimeGenerated >= ago(dt_lookBack)\n  // Extract URL from the Syslog message but only take messages that include URLs\n  | extend Url = extract(\"(http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\\\(\\\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+)\", 1,SyslogMessage)\n  | where isnotempty(Url)\n  | extend Syslog_TimeGenerated = TimeGenerated\n  ) \non Url\n| where Syslog_TimeGenerated >= TimeGenerated and Syslog_TimeGenerated < ExpirationDateTime\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Syslog_TimeGenerated, SyslogMessage, Computer, ProcessName, Url, AdditionalInformation, HostIP\n| extend timestamp = Syslog_TimeGenerated, HostCustomEntity = Computer, IPCustomEntity = HostIP, URLCustomEntity = Url\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P1D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "HostCustomEntity",
                "identifier": "FullName"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "URLCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook1-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook1-GraphSecurityConnectionName'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Select": {
              "inputs": {
                "from": "@triggerBody()['items']",
                "select": "@item()['content']"
              },
              "type": "Select"
            },
            "Submit_multiple_tiIndicators": {
              "inputs": {
                "body": {
                  "value": "@body('Select')"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['microsoftgraphsecurity']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/beta/security/tiIndicators/submitTiIndicators"
              },
              "runAfter": {
                "Select": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection"
            }
          },
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Batch_messages": {
              "inputs": {
                "configurations": {
                  "RFImportToSentinel": {
                    "releaseCriteria": {
                      "messageCount": 100,
                      "recurrence": {
                        "frequency": "Minute",
                        "interval": 10
                      }
                    }
                  }
                },
                "mode": "Inline"
              },
              "type": "Batch"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "microsoftgraphsecurity": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/microsoftgraphsecurity')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook1-GraphSecurityConnectionName'))]",
                "connectionName": "[variables('playbook1-GraphSecurityConnectionName')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('workspace-location')]",
      "name": "[variables('playbook1-GraphSecurityConnectionName')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-1-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook2-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook2-RecordedFutureConnectionName'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "actions": {
                "Parse_JSON": {
                  "inputs": {
                    "content": "@items('For_each')",
                    "schema": {
                      "properties": {
                        "EvidenceDetails": {
                          "properties": {
                            "EvidenceDetails": {
                              "items": {
                                "properties": {
                                  "Criticality": {
                                    "type": "integer"
                                  },
                                  "CriticalityLabel": {
                                    "type": "string"
                                  },
                                  "EvidenceString": {
                                    "type": "string"
                                  },
                                  "Rule": {
                                    "type": "string"
                                  },
                                  "Timestamp": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "Rule",
                                  "EvidenceString",
                                  "CriticalityLabel",
                                  "Timestamp",
                                  "Criticality"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "Name": {
                          "type": "string"
                        },
                        "Risk": {
                          "type": "integer"
                        },
                        "riskString": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "ParseJson"
                },
                "RecordedFuture-ImportToSentinel": {
                  "inputs": {
                    "batchName": "RFImportToSentinel",
                    "content": {
                      "action": "alert",
                      "additionalInformation": "@{body('Parse_JSON')?['EvidenceDetails']}",
                      "azureTenantId": "ce7c0437-29b2-4139-8c26-0babf2d3738c",
                      "confidence": "@int(body('Parse_JSON')?['Risk'])",
                      "description": "Recorded Future - DOMAIN - C2 DNS Name",
                      "domainName": "@{body('Parse_JSON')?['Name']}",
                      "expirationDateTime": "@{addHours(utcNow(),2)}",
                      "ingestedDateTime": "@{utcNow()}",
                      "targetProduct": "Azure Sentinel",
                      "threatType": "C2",
                      "tlpLevel": "amber"
                    },
                    "host": {
                      "triggerName": "Batch_messages",
                      "workflow": {
                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('playbook2-PlaybookNameBatching'))]"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "SendToBatch"
                }
              },
              "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download')",
              "runAfter": {
                "Recorded_Future_RiskLists_and_SCF_Download": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Recorded_Future_RiskLists_and_SCF_Download": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/fusion/files/",
                "queries": {
                  "path": "/public/MicrosoftAzure/domain_c2_dns.json"
                }
              },
              "type": "ApiConnection"
            }
          },
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 2
              },
              "type": "Recurrence"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "recordedfuture": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/recordedfuture')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook2-RecordedFutureConnectionName'))]",
                "connectionName": "[variables('playbook2-RecordedFutureConnectionName')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('playbook2-RecordedFutureConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-2-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook3-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook3-RecordedFutureConnectionName'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "actions": {
                "Parse_JSON": {
                  "inputs": {
                    "content": "@items('For_each')",
                    "schema": {
                      "properties": {
                        "EvidenceDetails": {
                          "properties": {
                            "EvidenceDetails": {
                              "items": {
                                "properties": {
                                  "Criticality": {
                                    "type": "integer"
                                  },
                                  "CriticalityLabel": {
                                    "type": "string"
                                  },
                                  "EvidenceString": {
                                    "type": "string"
                                  },
                                  "Rule": {
                                    "type": "string"
                                  },
                                  "Timestamp": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "Rule",
                                  "EvidenceString",
                                  "CriticalityLabel",
                                  "Timestamp",
                                  "Criticality"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "Name": {
                          "type": "string"
                        },
                        "Risk": {
                          "type": "integer"
                        },
                        "riskString": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "ParseJson"
                },
                "RecordedFuture-ImportToSentinel": {
                  "inputs": {
                    "batchName": "RFImportToSentinel",
                    "content": {
                      "action": "alert",
                      "additionalInformation": "@{body('Parse_JSON')?['EvidenceDetails']}",
                      "azureTenantId": "ce7c0437-29b2-4139-8c26-0babf2d3738c",
                      "confidence": "@int(body('Parse_JSON')?['Risk'])",
                      "description": "Recorded Future - HASH - Observed in Underground Virus Testing Sites",
                      "expirationDateTime": "@{addDays(utcNow(),1)}",
                      "fileHashType": "unknown",
                      "fileHashValue": "@{body('Parse_JSON')?['Name']}",
                      "ingestedDateTime": "@{utcNow()}",
                      "targetProduct": "Azure Sentinel",
                      "threatType": "Malware",
                      "tlpLevel": "amber"
                    },
                    "host": {
                      "triggerName": "Batch_messages",
                      "workflow": {
                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('playbook3-PlaybookNameBatching'))]"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "SendToBatch"
                }
              },
              "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download')",
              "runAfter": {
                "Recorded_Future_RiskLists_and_SCF_Download": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Recorded_Future_RiskLists_and_SCF_Download": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/fusion/files/",
                "queries": {
                  "path": "/public/MicrosoftAzure/hash_observed_testing.json"
                }
              },
              "type": "ApiConnection"
            }
          },
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Day",
                "interval": 1
              },
              "type": "Recurrence"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "recordedfuture": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/recordedfuture')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook3-RecordedFutureConnectionName'))]",
                "connectionName": "[variables('playbook3-RecordedFutureConnectionName')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('playbook3-RecordedFutureConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-2-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook4-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook4-AzureSentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('playbook4-RecordedFutureConnectionName'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "actions": {
                "Parse_JSON_2": {
                  "inputs": {
                    "content": "@items('For_each')",
                    "schema": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "properties": {
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "ParseJson"
                },
                "Switch": {
                  "cases": {
                    "Case": {
                      "actions": {
                        "Add_comment_to_incident_(V3)_-_Domain": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Recorded Future Domain Enrichment<br> Domain: @{body('Parse_JSON_-_DNS_Resolution')?['domainName']}<br> Risk Score: @{body('Domain_Enrichment')?['data']?['risk']?['score']}<br> Risk Rules: @{variables('Rules')}<br> Link to Intelligence Card: @{body('Domain_Enrichment')?['data']?['intelCard']}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "For_each_-_Evidence_Details_-_DnsResolution": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "Domain_Enrichment": {
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/domain/@{encodeURIComponent(body('Parse_JSON_-_DNS_Resolution')?['domainName'])}",
                            "queries": {
                              "fields": "intelCard,risk"
                            }
                          },
                          "runAfter": {
                            "Set_variable": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "For_each_-_Evidence_Details_-_DnsResolution": {
                          "actions": {
                            "Append_to_string_variable": {
                              "inputs": {
                                "name": "Rules",
                                "value": "@{items('For_each_-_Evidence_Details_-_DnsResolution')?['rule']} | "
                              },
                              "type": "AppendToStringVariable"
                            }
                          },
                          "foreach": "@body('Domain_Enrichment')?['data']?['risk']?['evidenceDetails']",
                          "runAfter": {
                            "Domain_Enrichment": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_JSON_-_DNS_Resolution": {
                          "inputs": {
                            "content": "@body('Parse_JSON_2')?['properties']",
                            "schema": {
                              "properties": {
                                "domainName": {
                                  "type": "string"
                                },
                                "friendlyName": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "ParseJson"
                        },
                        "Set_variable": {
                          "inputs": {
                            "name": "Rules",
                            "value": " "
                          },
                          "runAfter": {
                            "Parse_JSON_-_DNS_Resolution": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "case": "DnsResolution"
                    },
                    "Case_2": {
                      "actions": {
                        "Add_comment_to_incident_(V3)_-_Hash": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Recorded Future Hash Enrichment<br> Hash: @{body('Parse_JSON_-_File_Hash')?['hashValue']}<br> Risk Score: @{body('Hash_Enrichment')?['data']?['risk']?['score']}<br> Risk Rules: @{variables('Rules')}<br> Link to Intelligence Card: @{body('Hash_Enrichment')?['data']?['intelCard']}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "For_each_-_Evidence_Details_-_FileHash": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "For_each_-_Evidence_Details_-_FileHash": {
                          "actions": {
                            "Append_to_string_variable_2": {
                              "inputs": {
                                "name": "Rules",
                                "value": "@{items('For_each_-_Evidence_Details_-_FileHash')?['rule']} | "
                              },
                              "type": "AppendToStringVariable"
                            }
                          },
                          "foreach": "@body('Hash_Enrichment')?['data']?['risk']?['evidenceDetails']",
                          "runAfter": {
                            "Hash_Enrichment": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Hash_Enrichment": {
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/hash/@{encodeURIComponent(body('Parse_JSON_-_File_Hash')?['hashValue'])}",
                            "queries": {
                              "fields": "intelCard,risk"
                            }
                          },
                          "runAfter": {
                            "Set_variable_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "Parse_JSON_-_File_Hash": {
                          "inputs": {
                            "content": "@body('Parse_JSON_2')?['properties']",
                            "schema": {
                              "properties": {
                                "algorithm": {
                                  "type": "string"
                                },
                                "friendlyName": {
                                  "type": "string"
                                },
                                "hashValue": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "ParseJson"
                        },
                        "Set_variable_2": {
                          "inputs": {
                            "name": "Rules",
                            "value": " "
                          },
                          "runAfter": {
                            "Parse_JSON_-_File_Hash": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "case": "FileHash"
                    },
                    "Case_3": {
                      "actions": {
                        "Add_comment_to_incident_(V3)_-_URL": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Recorded Future URL Enrichment<br> URL: @{replace(body('Parse_JSON_-_Url')?['url'],'.','[.]')}<br> Risk Score: @{body('URL_Enrichment')?['data']?['risk']?['score']}<br> Risk Rules: @{variables('Rules')}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "For_each_-_Evidence_Details_-_Url": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "For_each_-_Evidence_Details_-_Url": {
                          "actions": {
                            "Append_to_string_variable_3": {
                              "inputs": {
                                "name": "Rules",
                                "value": "@{items('For_each_-_Evidence_Details_-_Url')?['rule']} | "
                              },
                              "type": "AppendToStringVariable"
                            }
                          },
                          "foreach": "@body('URL_Enrichment')?['data']?['risk']?['evidenceDetails']",
                          "runAfter": {
                            "URL_Enrichment": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_JSON_-_Url": {
                          "inputs": {
                            "content": "@body('Parse_JSON_2')?['properties']",
                            "schema": {
                              "properties": {
                                "friendlyName": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "ParseJson"
                        },
                        "Set_variable_3": {
                          "inputs": {
                            "name": "Rules",
                            "value": " "
                          },
                          "runAfter": {
                            "Parse_JSON_-_Url": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable"
                        },
                        "URL_Enrichment": {
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/url/@{encodeURIComponent(body('Parse_JSON_-_Url')?['url'])}",
                            "queries": {
                              "fields": "intelCard,risk"
                            }
                          },
                          "runAfter": {
                            "Set_variable_3": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        }
                      },
                      "case": "Url"
                    },
                    "Case_4": {
                      "actions": {
                        "Add_comment_to_incident_(V3)_-_IP": {
                          "inputs": {
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Recorded Future IP Enrichment<br> IP: @{body('Parse_JSON_-_Ip')?['address']}<br> Risk Score: @{body('IP_Enrichment')?['data']?['risk']?['score']}<br> Risk Rules: @{variables('Rules')}<br> Link to Intelligence Card: @{body('IP_Enrichment')?['data']?['intelCard']}</p>"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Incidents/Comment"
                          },
                          "runAfter": {
                            "For_each_-_Evidence_Details_-_Ip": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "For_each_-_Evidence_Details_-_Ip": {
                          "actions": {
                            "Append_to_string_variable_4": {
                              "inputs": {
                                "name": "Rules",
                                "value": "@{items('For_each_-_Evidence_Details_-_Ip')?['rule']} | "
                              },
                              "type": "AppendToStringVariable"
                            }
                          },
                          "foreach": "@body('IP_Enrichment')?['data']?['risk']?['evidenceDetails']",
                          "runAfter": {
                            "IP_Enrichment": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "IP_Enrichment": {
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/ip/@{encodeURIComponent(body('Parse_JSON_-_Ip')?['address'])}",
                            "queries": {
                              "fields": "intelCard,risk"
                            }
                          },
                          "runAfter": {
                            "Set_variable_4": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection"
                        },
                        "Parse_JSON_-_Ip": {
                          "inputs": {
                            "content": "@body('Parse_JSON_2')?['properties']",
                            "schema": {
                              "properties": {
                                "address": {
                                  "type": "string"
                                },
                                "friendlyName": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "ParseJson"
                        },
                        "Set_variable_4": {
                          "inputs": {
                            "name": "Rules",
                            "value": " "
                          },
                          "runAfter": {
                            "Parse_JSON_-_Ip": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable"
                        }
                      },
                      "case": "Ip"
                    }
                  },
                  "expression": "@body('Parse_JSON_2')?['kind']",
                  "runAfter": {
                    "Parse_JSON_2": [
                      "Succeeded"
                    ]
                  },
                  "type": "Switch"
                }
              },
              "foreach": "@triggerBody()?['object']?['properties']?['relatedEntities']",
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Initialize_variable": {
              "inputs": {
                "variables": [
                  {
                    "name": "Rules",
                    "type": "string"
                  }
                ]
              },
              "type": "InitializeVariable"
            }
          },
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              },
              "type": "ApiConnectionWebhook"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/azuresentinel')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook4-AzureSentinelConnectionName'))]",
                "connectionName": "[variables('playbook4-AzureSentinelConnectionName')]"
              },
              "recordedfuture": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/recordedfuture')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook4-RecordedFutureConnectionName'))]",
                "connectionName": "[variables('playbook4-RecordedFutureConnectionName')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('playbook4-RecordedFutureConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-2-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('playbook4-AzureSentinelConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-4-connection-3')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook5-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook5-RecordedFutureConnectionName'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "actions": {
                "Parse_JSON": {
                  "inputs": {
                    "content": "@items('For_each')",
                    "schema": {
                      "properties": {
                        "EvidenceDetails": {
                          "properties": {
                            "EvidenceDetails": {
                              "items": {
                                "properties": {
                                  "Criticality": {
                                    "type": "integer"
                                  },
                                  "CriticalityLabel": {
                                    "type": "string"
                                  },
                                  "EvidenceString": {
                                    "type": "string"
                                  },
                                  "Rule": {
                                    "type": "string"
                                  },
                                  "Timestamp": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "Rule",
                                  "EvidenceString",
                                  "CriticalityLabel",
                                  "Timestamp",
                                  "Criticality"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "Name": {
                          "type": "string"
                        },
                        "Risk": {
                          "type": "integer"
                        },
                        "riskString": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "ParseJson"
                },
                "RecordedFuture-ImportToSentinel": {
                  "inputs": {
                    "batchName": "RFImportToSentinel",
                    "content": {
                      "action": "alert",
                      "additionalInformation": "@{body('Parse_JSON')?['EvidenceDetails']}",
                      "azureTenantId": "ce7c0437-29b2-4139-8c26-0babf2d3738c",
                      "confidence": "@int(body('Parse_JSON')?['Risk'])",
                      "description": "Recorded Future - IP - Actively Communicating C&C Server",
                      "expirationDateTime": "@{addHours(utcNow(),1)}",
                      "ingestedDateTime": "@{utcNow()}",
                      "networkIPv4": "@{body('Parse_JSON')?['Name']}",
                      "targetProduct": "Azure Sentinel",
                      "threatType": "C2",
                      "tlpLevel": "amber"
                    },
                    "host": {
                      "triggerName": "Batch_messages",
                      "workflow": {
                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('playbook5-PlaybookNameBatching'))]"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "SendToBatch"
                }
              },
              "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download')",
              "runAfter": {
                "Recorded_Future_RiskLists_and_SCF_Download": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Recorded_Future_RiskLists_and_SCF_Download": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/fusion/files/",
                "queries": {
                  "path": "/public/MicrosoftAzure/ip_active_c2.json"
                }
              },
              "type": "ApiConnection"
            }
          },
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 1
              },
              "type": "Recurrence"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "recordedfuture": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/recordedfuture')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook5-RecordedFutureConnectionName'))]",
                "connectionName": "[variables('playbook5-RecordedFutureConnectionName')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('playbook5-RecordedFutureConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-2-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('playbook6-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook6-RecordedFutureConnectionName'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.@{variables('azureManagementUrl')}/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "actions": {
                "Parse_JSON": {
                  "inputs": {
                    "content": "@items('For_each')",
                    "schema": {
                      "properties": {
                        "EvidenceDetails": {
                          "properties": {
                            "EvidenceDetails": {
                              "items": {
                                "properties": {
                                  "Criticality": {
                                    "type": "integer"
                                  },
                                  "CriticalityLabel": {
                                    "type": "string"
                                  },
                                  "EvidenceString": {
                                    "type": "string"
                                  },
                                  "Rule": {
                                    "type": "string"
                                  },
                                  "Timestamp": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "Rule",
                                  "EvidenceString",
                                  "CriticalityLabel",
                                  "Timestamp",
                                  "Criticality"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "Name": {
                          "type": "string"
                        },
                        "Risk": {
                          "type": "integer"
                        },
                        "riskString": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "ParseJson"
                },
                "RecordedFuture-ImportToSentinel": {
                  "inputs": {
                    "batchName": "RFImportToSentinel",
                    "content": {
                      "action": "alert",
                      "additionalInformation": "@{body('Parse_JSON')?['EvidenceDetails']}",
                      "azureTenantId": "ce7c0437-29b2-4139-8c26-0babf2d3738c",
                      "confidence": "@int(body('Parse_JSON')?['Risk'])",
                      "description": "Recorded Future - URL - Recently Reported by Insikt Group",
                      "expirationDateTime": "@{addHours(utcNow(),2)}",
                      "ingestedDateTime": "@{utcNow()}",
                      "targetProduct": "Azure Sentinel",
                      "threatType": "MaliciousUrl",
                      "tlpLevel": "amber",
                      "url": "@{body('Parse_JSON')?['Name']}"
                    },
                    "host": {
                      "triggerName": "Batch_messages",
                      "workflow": {
                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('playbook6-PlaybookNameBatching'))]"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "SendToBatch"
                }
              },
              "foreach": "@body('Recorded_Future_RiskLists_and_SCF_Download')",
              "runAfter": {
                "Recorded_Future_RiskLists_and_SCF_Download": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Recorded_Future_RiskLists_and_SCF_Download": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['recordedfuture']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/fusion/files/",
                "queries": {
                  "path": "/public/MicrosoftAzure/url_insikt.json"
                }
              },
              "type": "ApiConnection"
            }
          },
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 2
              },
              "type": "Recurrence"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "recordedfuture": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('workspace-location'),'/managedApis/recordedfuture')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook6-RecordedFutureConnectionName'))]",
                "connectionName": "[variables('playbook6-RecordedFutureConnectionName')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('playbook6-RecordedFutureConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "api": {
          "id": "[variables('_playbook-2-connection-2')]"
        }
      }
    },
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2020-02-12",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Recorded Future -  C&C DNS Name to DNS Events - Correlation/Threat Hunting\\n\\n\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"5aaf92cc-3c1e-43f0-8a2f-18a79d7c1d5d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DNS_Events_Time_Range\",\"label\":\"DNS Events Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}},{\"id\":\"eea9b6a5-76f4-4d3b-b62d-4f5e1c4173b6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Threat_Intelligence_Time_Range\",\"label\":\"Threat Intelligence Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let list_tlds = ThreatIntelligenceIndicator\\r\\n|where TimeGenerated{Threat_Intelligence_Time_Range:query}\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n| where isnotempty(DomainName)\\r\\n| extend parts = split(DomainName, '.')\\r\\n| extend tld = parts[(array_length(parts)-1)]\\r\\n| summarize count() by tostring(tld)\\r\\n| summarize make_list(tld);\\r\\nThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n| where Active == true\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n// Picking up only IOC's that contain the entities we want\\r\\n| where isnotempty(DomainName)\\r\\n| join (\\r\\n     DnsEvents\\r\\n    | where TimeGenerated  {DNS_Events_Time_Range:query}\\r\\n    //Extract Domain patterns from syslog message\\r\\n    | where isnotempty(Name)\\r\\n    | extend parts = split(Name, '.')\\r\\n    //Split out the TLD\\r\\n    | extend tld = parts[(array_length(parts)-1)]\\r\\n    //Validate parsed Domain by checking if the TLD is in the list of TLDs in our threat feed\\r\\n    | where tld in~ (list_tlds)\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n) on $left.DomainName==$right.Name\\r\\n| summarize Correlation_Matches=count() by bin(DNS_TimeGenerated, 1d)\\r\\n| render barchart\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let list_tlds = ThreatIntelligenceIndicator\\r\\n|where TimeGenerated{Threat_Intelligence_Time_Range:query}\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n| where isnotempty(DomainName)\\r\\n| extend parts = split(DomainName, '.')\\r\\n| extend tld = parts[(array_length(parts)-1)]\\r\\n| summarize count() by tostring(tld)\\r\\n| summarize make_list(tld);\\r\\nThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n| where Active == true\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n// Picking up only IOC's that contain the entities we want\\r\\n| where isnotempty(DomainName)\\r\\n| join (\\r\\n     DnsEvents\\r\\n    | where TimeGenerated  {DNS_Events_Time_Range:query}\\r\\n    //Extract Domain patterns from syslog message\\r\\n    | where isnotempty(Name)\\r\\n    | extend parts = split(Name, '.')\\r\\n    //Split out the TLD\\r\\n    | extend tld = parts[(array_length(parts)-1)]\\r\\n    //Validate parsed Domain by checking if the TLD is in the list of TLDs in our threat feed\\r\\n    | where tld in~ (list_tlds)\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n) on $left.DomainName==$right.Name\\r\\n|projectRisk=ConfidenceScore, DomainName, ThreatType, AdditionalInformation\\r\\n| extend Evidence=parse_json(AdditionalInformation)['EvidenceDetails']\\r\\n| mv-expand Evidence\\r\\n| extend Rule=Evidence['Rule']\\r\\n| summarize count() by tostring(Rule)\\r\\n| sort by count_ desc\\r\\n\\r\\n\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"orange\"}}],\"labelSettings\":[{\"columnId\":\"Rule\"},{\"columnId\":\"count_\",\"label\":\"Count\"}]}},\"customWidth\":\"30\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let list_tlds = ThreatIntelligenceIndicator\\r\\n|where TimeGenerated{Threat_Intelligence_Time_Range:query}\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n| where isnotempty(DomainName)\\r\\n| extend parts = split(DomainName, '.')\\r\\n| extend tld = parts[(array_length(parts)-1)]\\r\\n| summarize count() by tostring(tld)\\r\\n| summarize make_list(tld);\\r\\nThreatIntelligenceIndicator\\r\\n| where TimeGenerated {Threat_Intelligence_Time_Range:query}\\r\\n| where Active == true\\r\\n// Picking up only Recorded Future IOC's that are pertinent to the use case (Malware C2 Detection)\\r\\n| where Description == 'Recorded Future - DOMAIN - C2 DNS Name'\\r\\n// Picking up only IOC's that contain the entities we want\\r\\n| where isnotempty(DomainName)\\r\\n| join (\\r\\n     DnsEvents\\r\\n    | where TimeGenerated  {DNS_Events_Time_Range:query}\\r\\n    //Extract Domain patterns from syslog message\\r\\n    | where isnotempty(Name)\\r\\n    | extend parts = split(Name, '.')\\r\\n    //Split out the TLD\\r\\n    | extend tld = parts[(array_length(parts)-1)]\\r\\n    //Validate parsed Domain by checking if the TLD is in the list of TLDs in our threat feed\\r\\n    | where tld in~ (list_tlds)\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n) on $left.DomainName==$right.Name\\r\\n|projectRisk=ConfidenceScore, DomainName, Threat_Intelligence_IOC_Date = TimeGenerated, SourceIP=ClientIP, DNS_Event_Time = DNS_TimeGenerated, ThreatType, Device=Computer, AdditionalInformation\\r\\n| sort by Risk desc\\r\\n\",\"size\":0,\"exportFieldName\":\"DomainName\",\"exportParameterName\":\"IOC\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Risk\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\">=\",\"thresholdValue\":\"90\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"65\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"25\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"blue\",\"text\":\"{0}{1}\"}]}}]}},\"customWidth\":\"70\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\n|where TimeGenerated{Threat_Intelligence_Time_Range:query}\\n| where Description contains 'Recorded Future - DOMAIN - C2 DNS Name'\\n| where DomainName == \\\"{IOC}\\\"\\n| where ExpirationDateTime > now()\\n| extend Evidence=parse_json(AdditionalInformation)['EvidenceDetails']\\n| take 1\\n| mv-expand Evidence\\n| project Rules = Evidence['Rule'], Evidence_String = Evidence['EvidenceString'], Criticality = Evidence['Criticality']\\n| sort by toint(Criticality) desc\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 5\"}],\"fromTemplateId\":\"sentinel-RecordedFuture-Domain-C2DNS-Workbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook2-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2020-02-12",
      "properties": {
        "displayName": "[concat(parameters('workbook2-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation/Threat Hunting\\n\\n\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"5aaf92cc-3c1e-43f0-8a2f-18a79d7c1d5d\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"DNS_Events_Time_Range\",\"label\":\"DNS Events Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}},{\"id\":\"eea9b6a5-76f4-4d3b-b62d-4f5e1c4173b6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Threat_Intelligence_Time_Range\",\"label\":\"Threat Intelligence Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n|where TimeGenerated{Threat_Intelligence_Time_Range:query}\\r\\n| where Description contains 'Recorded Future - IP - Actively Communicating C&C Server'\\r\\n| join (\\r\\n    DnsEvents | where TimeGenerated {DNS_Events_Time_Range:query}\\r\\n    | where SubType =~ \\\"LookupQuery\\\" and isnotempty(IPAddresses)\\r\\n    | extend SingleIP = split(IPAddresses, \\\",\\\")\\r\\n    | mvexpand SingleIP\\r\\n    | extend SingleIP = tostring(SingleIP)\\r\\n    // renaming time column so it is clear the log this came from\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n)\\r\\non $left.NetworkIP == $right.SingleIP\\r\\n| summarize Correlation_Matches=count() by bin(DNS_TimeGenerated, 1d)\\r\\n| render barchart\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n|where TimeGenerated{Threat_Intelligence_Time_Range:query}\\r\\n| where Description contains 'Recorded Future - IP - Actively Communicating C&C Server'\\r\\n| join (\\r\\n    DnsEvents | where TimeGenerated {DNS_Events_Time_Range:query}\\r\\n    | where SubType =~ \\\"LookupQuery\\\" and isnotempty(IPAddresses)\\r\\n    | extend SingleIP = split(IPAddresses, \\\",\\\")\\r\\n    | mvexpand SingleIP\\r\\n    | extend SingleIP = tostring(SingleIP)\\r\\n    // renaming time column so it is clear the log this came from\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n)\\r\\non $left.NetworkIP == $right.SingleIP\\r\\n|projectRisk=ConfidenceScore, NetworkIP, ThreatType, AdditionalInformation\\r\\n| extend Evidence=parse_json(AdditionalInformation)['EvidenceDetails']\\r\\n| mv-expand Evidence\\r\\n| extend Rule=Evidence['Rule']\\r\\n| summarize count() by tostring(Rule)\\r\\n| sort by count_ desc\\r\\n\\r\\n\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"orange\"}}],\"labelSettings\":[{\"columnId\":\"Rule\"},{\"columnId\":\"count_\",\"label\":\"Count\"}]}},\"customWidth\":\"30\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n|where TimeGenerated{Threat_Intelligence_Time_Range:query}\\r\\n| where Description contains 'Recorded Future - IP - Actively Communicating C&C Server'\\r\\n| join (\\r\\n    DnsEvents | where TimeGenerated {DNS_Events_Time_Range:query}\\r\\n    | where SubType =~ \\\"LookupQuery\\\" and isnotempty(IPAddresses)\\r\\n    | extend SingleIP = split(IPAddresses, \\\",\\\")\\r\\n    | mvexpand SingleIP\\r\\n    | extend SingleIP = tostring(SingleIP)\\r\\n    // renaming time column so it is clear the log this came from\\r\\n    | extend DNS_TimeGenerated = TimeGenerated\\r\\n)\\r\\non $left.NetworkIP == $right.SingleIP\\r\\n|projectRisk=ConfidenceScore, DestinationIP=NetworkIP, Threat_Intelligence_IOC_Date = TimeGenerated, SourceIP=ClientIP, DNS_Event_Time = DNS_TimeGenerated, ThreatType, Device=Computer, AdditionalInformation\\r\\n| sort by Risk desc\\r\\n\",\"size\":0,\"exportFieldName\":\"DestinationIP\",\"exportParameterName\":\"IOC\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Risk\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"colors\",\"thresholdsGrid\":[{\"operator\":\">=\",\"thresholdValue\":\"90\",\"representation\":\"redBright\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"65\",\"representation\":\"orange\",\"text\":\"{0}{1}\"},{\"operator\":\">=\",\"thresholdValue\":\"25\",\"representation\":\"yellow\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"blue\",\"text\":\"{0}{1}\"}]}}]}},\"customWidth\":\"70\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\n|where TimeGenerated{Threat_Intelligence_Time_Range:query}\\n| where Description contains 'Recorded Future - IP - Actively Communicating C&C Server'\\n| where NetworkIP == \\\"{IOC}\\\"\\n| where ExpirationDateTime > now()\\n| extend Evidence=parse_json(AdditionalInformation)['EvidenceDetails']\\n| take 1\\n| mv-expand Evidence\\n| project Rules = Evidence['Rule'], Evidence_String = Evidence['EvidenceString'], Criticality = Evidence['Criticality']\\n| sort by toint(Criticality) desc\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 5\"}],\"fromTemplateId\":\"sentinel-RecordedFuture-IP-ActiveC2-Workbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.0.0",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "Recorded Future",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Ruchita Dubey",
          "email": "v-rucdu@microsoft.com"
        },
        "support": {
          "name": "Recorded Future Support Team",
          "email": "support@recordedfuture.com",
          "tier": "Partner",
          "link": "http://support.recordedfuture.com/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_RecordedFutureDomainMalwareC2inDNSEvents_AnalyticalRules')]",
              "version": "1.0.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_RecordedFutureDomainMalwareC2inSyslogEvents_AnalyticalRules')]",
              "version": "1.0.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_RecordedFutureHashObservedInUndergroundinCommonSecurityLog_AnalyticalRules')]",
              "version": "1.0.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_RecordedFutureIPMalwareC2inAzureActivityEvents_AnalyticalRules')]",
              "version": "1.0.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_RecordedFutureIPMalwareC2inDNSEvents_AnalyticalRules')]",
              "version": "1.0.0"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_RecordedFutureUrlReportedbyInsiktGroupinSyslogEvents_AnalyticalRules')]",
              "version": "1.0.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_playbook1-Playbooks')]",
              "version": "1.0.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_playbook2-Playbooks')]",
              "version": "1.0.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_playbook3-Playbooks')]",
              "version": "1.0.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_playbook4-Playbooks')]",
              "version": "1.0.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_playbook5-Playbooks')]",
              "version": "1.0.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_playbook6-Playbooks')]",
              "version": "1.0.0"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_Recorded Future -  C&C DNS Name to DNS Events - Correlation&Threat Hunting_workbook')]",
              "version": "1.0.0"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_Recorded Future - Actively Communicating C&C IPs to DNS Events - Correlation&Threat Hunting_workbook')]",
              "version": "1.0.0"
            }
          ]
        },
        "firstPublishDate": "2021-11-01",
        "providers": [
          "Recorded Future"
        ],
        "categories": {
          "domains": [
            "Security - Threat Intelligence"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
