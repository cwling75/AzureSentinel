{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "This Logic App connector will Isolate the Process or Host based on the Illusive incidents raised",
    "author": "Illusive"
  },
  "parameters": {
    "WorkspaceName": {
      "type": "String",
      "metadata": {
        "description": "Name of Azure sentinel workspace"
      }
    },
    "IllusiveAPIUrl": {
      "type": "String",
      "metadata": {
        "description": "Authentication parameters to access Illusive API"
      }
    },
    "IllusiveAPIKey": {
      "type": "SecureString",
      "metadata": {
        "description": "Authentication parameters to access Illusive API"
      }
    },
    "Azure-SentinelClientID": {
      "type": "String",
      "metadata": {
        "description": "Authentication parameters to access Sentinel API"
      }
    },
    "Azure-SentinelClientSecret": {
      "type": "SecureString",
      "metadata": {
        "description": "Authentication parameters to access Sentinel API"
      }
    },
    "Azure-SentinelTenantID": {
      "type": "String",
      "metadata": {
        "description": "Authentication parameters to access Sentinel API"
      }
    },
    "EDRDeployed": {
      "type": "String",
      "allowedValues": [ "MDE", "Crowdstrike" ],
      "metadata": {
        "description": "The EDR which is deployed in the organization and can be used for incident mitigation"
      }
    },
    "CrowdstrikeAPIUrl": {
      "type": "String",
      "defaultValue": "https://api.crowdstrike.com",
      "metadata": {
        "description": "Authentication parameters to access CrowdStrike API"
      }
    },
    "CrowdstrikeClientID": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Authentication parameters to access CrowdStrike API"
      }
    },
    "CrowdstrikeClientSecret": {
      "type": "SecureString",
      "defaultValue": "",
      "metadata": {
        "description": "Authentication parameters to access CrowdStrike API"
      }
    },
    "AzureMDEClientID": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Authentication parameters to access MDE API"
      }
    },
    "AzureMDEClientSecret": {
      "type": "SecureString",
      "defaultValue": "",
      "metadata": {
        "description": "Authentication parameters to access MDE API"
      }
    },
    "AzureMDETenantID": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Authentication parameters to access MDE API"
      }
    }
  },
  "variables": {
    "azuresentinelConnectionName": "[concat('azuresentinel-', 'IllusiveSentinelIncidentResponse')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('azuresentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "IllusiveSentinelIncidentResponseAPIConnection",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "IllusiveSentinelIncidentResponse",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "Azure Client Id": {
              "defaultValue": "[parameters('Azure-SentinelClientID')]",
              "type": "SecureString"
            },
            "Azure Client Secret": {
              "defaultValue": "[parameters('Azure-SentinelClientSecret')]",
              "type": "SecureString"
            },
            "Azure Tenant Id": {
              "defaultValue": "[parameters('Azure-SentinelTenantID')]",
              "type": "SecureString"
            },
            "Crowdstrike Base URL": {
              "defaultValue": "[parameters('CrowdstrikeAPIUrl')]",
              "type": "SecureString"
            },
            "Crowdstrike Client Id": {
              "defaultValue": "[parameters('CrowdstrikeClientID')]",
              "type": "SecureString"
            },
            "Crowdstrike Client Secret": {
              "defaultValue": "[parameters('CrowdstrikeClientSecret')]",
              "type": "SecureString"
            },
            "Illusive API Key": {
              "defaultValue": "[parameters('IllusiveAPIKey')]",
              "type": "SecureString"
            },
            "Illusive Base URL": {
              "defaultValue": "[parameters('IllusiveAPIUrl')]",
              "type": "SecureString"
            },
            "EDRConfigured": {
              "defaultValue": "[parameters('EDRDeployed')]",
              "type": "SecureString"
            },
            "Workspace_Name": {
              "defaultValue": "[parameters('WorkspaceName')]",
              "type": "SecureString"
            },
            "ResourceGroup": {
              "defaultValue": "[resourceGroup().id]",
              "type": "SecureString"
            },
            "MDE Client Id": {
              "defaultValue": "[parameters('AzureMDEClientID')]",
              "type": "SecureString"
            },
            "MDE Client Secret": {
              "defaultValue": "[parameters('AzureMDEClientSecret')]",
              "type": "SecureString"
            },
            "MDE Tenant Id": {
              "defaultValue": "[parameters('AzureMDETenantID')]",
              "type": "SecureString"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              },
              "conditions": []
            }
          },
          "actions": {
            "Check_if_Illusive_incident_details_exists": {
              "actions": {
                "Check_if_Deception_Family_and_Incident_severity_are_empty": {
                  "actions": {
                    "Check_for_Deception_Family_as_\"Ransomware\"_and_Incident_severity_as_\"Critical\"": {
                      "actions": {
                        "Check_if_Host_is_Not_Isolated": {
                          "actions": {
                            "Check_If_Process_is_Not_Isolated": {
                              "actions": {
                                "Set_ProcessIsolation": {
                                  "runAfter": {},
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "IsolationCriteria",
                                    "value": "ProcessIsolation"
                                  }
                                }
                              },
                              "runAfter": {},
                              "else": {
                                "actions": {
                                  "Process_Isolated_Message": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Message",
                                      "value": "Process has already been isolated for  Illusive Incident Id @{variables('Illusive Incident Id')}"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@variables('IsProcessIsolated')",
                                      false
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            }
                          },
                          "runAfter": {},
                          "else": {
                            "actions": {
                              "Host_Isolate_Message": {
                                "runAfter": {},
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Message",
                                  "value": "Host has already been isolated for Illusive Incident Id  @{variables('Illusive Incident Id')}"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@variables('IsHostIsolated')",
                                  false
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {},
                      "else": {
                        "actions": {
                          "Incident_is_not_Ransomware_and_Critical": {
                            "runAfter": {},
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Message",
                              "value": "Illusive Incident ID- @{variables('Illusive Incident Id')} does not belong to Ransomware deception family and Severity is not Critical"
                            }
                          }
                        }
                      },
                      "expression": {
                        "or": [
                          {
                            "contains": [
                              "@body('Parse_Illusive_Incident_Details')?['deceptionFamilies']",
                              "RANSOMWARE"
                            ]
                          },
                          {
                            "equals": [
                              "@body('Parse_Illusive_Incident_Details')?['incidentSeverity']",
                              "CRITICAL"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "runAfter": {
                    "Parse_Illusive_Incident_Details": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Incident_does_not_have_Deception_family_and_severity": {
                        "runAfter": {},
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Message",
                          "value": "Illusive Incident @{variables('Illusive Incident Id')} does not have Deception family and severity"
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@body('Parse_Illusive_Incident_Details')?['deceptionFamilies']",
                            "@null"
                          ]
                        }
                      },
                      {
                        "not": {
                          "equals": [
                            "@body('Parse_Illusive_Incident_Details')?['incidentSeverity']",
                            "@null"
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "Check_if_Sentinel_Incident_already_exists": {
                  "actions": {
                    "Check_if_Labels_exists": {
                      "actions": {
                        "Check_HostIsolated_flag": {
                          "actions": {
                            "Set_HostIsolation_Flag_to_True": {
                              "runAfter": {},
                              "type": "SetVariable",
                              "inputs": {
                                "name": "IsHostIsolated",
                                "value": true
                              }
                            }
                          },
                          "runAfter": {
                            "Check_ProcessIsolated_flag": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_HostIsolation_Flag_to_False": {
                                "runAfter": {},
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "IsHostIsolated",
                                  "value": false
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "contains": [
                                  "@variables('Labels')",
                                  "Host Isolated"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_ProcessIsolated_flag": {
                          "actions": {
                            "Set_ProcessIsolation_Flag_to_True": {
                              "runAfter": {},
                              "type": "SetVariable",
                              "inputs": {
                                "name": "IsProcessIsolated",
                                "value": true
                              }
                            }
                          },
                          "runAfter": {},
                          "else": {
                            "actions": {
                              "Set_ProcessIsolation_Flag_to_False": {
                                "runAfter": {},
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "IsProcessIsolated",
                                  "value": false
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "contains": [
                                  "@variables('Labels')",
                                  "Process Isolated"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "For_each_Sentinel_Incidents": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Existing_Incidents_was_not_Isolated": {
                            "runAfter": {},
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Message",
                              "value": "Existing Incident was not Isolated"
                            }
                          }
                        }
                      },
                      "expression": {
                        "or": [
                          {
                            "contains": [
                              "@variables('Labels')",
                              "labelName"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "For_each_Sentinel_Incidents": {
                      "foreach": "@body('Parse_Sentinel_Incident_Details')?['value']",
                      "actions": {
                        "Set_Label_variable": {
                          "runAfter": {},
                          "type": "SetVariable",
                          "inputs": {
                            "name": "Labels",
                            "value": "@{items('For_each_Sentinel_Incidents')?['properties']?['labels']}"
                          }
                        }
                      },
                      "runAfter": {},
                      "type": "Foreach"
                    }
                  },
                  "runAfter": {
                    "Parse_Sentinel_Incident_Details": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "No_Sentinel_Incident_available": {
                        "runAfter": {},
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Message",
                          "value": "No Sentinel Incident available"
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@length(body('Parse_Sentinel_Incident_Details')?['value'])",
                          0
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Fetch_the_Illusive_Incident": {
                  "foreach": "@body('Parse_Custom_Details')?['IllusiveIncidentId']",
                  "actions": {
                    "Set_Illusive_Incident_Id": {
                      "runAfter": {},
                      "type": "SetVariable",
                      "inputs": {
                        "name": "Illusive Incident Id",
                        "value": "@{items('Fetch_the_Illusive_Incident')}"
                      }
                    }
                  },
                  "runAfter": {},
                  "type": "Foreach"
                },
                "Generate_the_token_for_Azure_Sentinel_Incident": {
                  "runAfter": {
                    "Fetch_the_Illusive_Incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "body": "grant_type=client_credentials&client_id=@{parameters('Azure Client Id')}&client_secret=@{parameters('Azure Client Secret')}&resource=https://management.azure.com",
                    "headers": {
                      "Content-Type": "application/x-www-form-urlencoded"
                    },
                    "method": "POST",
                    "uri": "https://login.microsoftonline.com/@{parameters('Azure Tenant Id')}/oauth2/token"
                  }
                },
                "Get_Illusive_Incident_Details": {
                  "runAfter": {
                    "Check_if_Sentinel_Incident_already_exists": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "headers": {
                      "Authorization": "Basic @{parameters('Illusive API Key')}",
                      "Content-Type": "application/json"
                    },
                    "method": "GET",
                    "uri": "@{parameters('Illusive Base URL')}/api/v2/incidents/incident?incident_id=@{variables('Illusive Incident Id')}"
                  }
                },
                "Get_incident_with_the_name": {
                  "runAfter": {
                    "Parse_AS_Token": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "headers": {
                      "Authorization": "Bearer @{body('Parse_AS_Token')?['access_token']}",
                      "content-type": "application/json"
                    },
                    "method": "GET",
                    "uri": "https://management.azure.com/subscriptions/@{triggerBody()?['WorkspaceSubscriptionId']}/resourceGroups/@{triggerBody()?['WorkspaceResourceGroup']}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('Workspace_Name')}/providers/Microsoft.SecurityInsights/incidents?api-version=2020-01-01&$filter=properties/title eq 'Illusive Incident: @{variables('Illusive Incident Id')}'"
                  }
                },
                "Parse_AS_Token": {
                  "runAfter": {
                    "Generate_the_token_for_Azure_Sentinel_Incident": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Generate_the_token_for_Azure_Sentinel_Incident')",
                    "schema": {
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "expires_in": {
                          "type": "string"
                        },
                        "expires_on": {
                          "type": "string"
                        },
                        "ext_expires_in": {
                          "type": "string"
                        },
                        "not_before": {
                          "type": "string"
                        },
                        "resource": {
                          "type": "string"
                        },
                        "token_type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Parse_Illusive_Incident_Details": {
                  "runAfter": {
                    "Get_Illusive_Incident_Details": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Get_Illusive_Incident_Details')",
                    "schema": {
                      "properties": {
                        "closed": {
                          "type": "boolean"
                        },
                        "deceptionFamilies": {},
                        "flagged": {
                          "type": "boolean"
                        },
                        "hasForensics": {
                          "type": "boolean"
                        },
                        "incidentId": {
                          "type": "integer"
                        },
                        "incidentSeverity": {},
                        "incidentTimeUTC": {},
                        "incidentTypes": {},
                        "lastSeenUser": {},
                        "policyName": {},
                        "riskInsights": {
                          "properties": {
                            "stepsToCrownJewel": {
                              "type": "integer"
                            },
                            "stepsToDomainAdmin": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "sourceHostname": {},
                        "sourceIp": {},
                        "unread": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Parse_Sentinel_Incident_Details": {
                  "runAfter": {
                    "Get_incident_with_the_name": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Get_incident_with_the_name')",
                    "schema": {
                      "properties": {
                        "value": {
                          "items": {
                            "properties": {
                              "etag": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "properties": {
                                "properties": {
                                  "additionalData": {
                                    "properties": {
                                      "alertProductNames": {
                                        "type": "array"
                                      },
                                      "alertsCount": {
                                        "type": "integer"
                                      },
                                      "bookmarksCount": {
                                        "type": "integer"
                                      },
                                      "commentsCount": {
                                        "type": "integer"
                                      },
                                      "tactics": {
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "createdTimeUtc": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "firstActivityTimeUtc": {
                                    "type": "string"
                                  },
                                  "incidentNumber": {
                                    "type": "integer"
                                  },
                                  "incidentUrl": {
                                    "type": "string"
                                  },
                                  "labels": {
                                    "items": {
                                      "properties": {
                                        "labelName": {
                                          "type": "string"
                                        },
                                        "labelType": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "labelName",
                                        "labelType"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "lastActivityTimeUtc": {
                                    "type": "string"
                                  },
                                  "lastModifiedTimeUtc": {
                                    "type": "string"
                                  },
                                  "owner": {
                                    "properties": {
                                      "assignedTo": {},
                                      "email": {},
                                      "objectId": {},
                                      "userPrincipalName": {}
                                    },
                                    "type": "object"
                                  },
                                  "relatedAnalyticRuleIds": {
                                    "type": "array"
                                  },
                                  "severity": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "etag",
                              "type",
                              "properties"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "runAfter": {
                "Parse_Custom_Details": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Alert_does_not_contain_Illusive_incident": {
                    "runAfter": {},
                    "type": "SetVariable",
                    "inputs": {
                      "name": "Message",
                      "value": "Alert does not contain Illusive incident"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "greater": [
                      "@length(body('Parse_Extended_Properties')?['Custom Details'])",
                      0
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Host_Isolation_Output": {
              "runAfter": {
                "Update_Sentinel_Incident_": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@variables('Message')"
            },
            "Initialize_Consolidated_Process_for_Crowdstrike": {
              "runAfter": {
                "Initialize_Processes_Unfiltered_Array_for_Crowdstrike": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Consolidated Process",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Crowdstrike_Resource_Variable": {
              "runAfter": {
                "Initialize_Isolation_Succeeded": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Crowdstrike Resource Variable",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Crowdstrike_Response": {
              "runAfter": {
                "Initialize_Process_id": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Crowdstrike Response",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Crowdstrike_resource": {
              "runAfter": {
                "Initialize_MDE_Host_Isolation": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Crowdstrike resource",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_DateTime": {
              "runAfter": {
                "Initialize_Crowdstrike_Resource_Variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Process DateTime Array",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_EventId": {
              "runAfter": {
                "Initialize_IsProcessIsolated": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "EventId",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_Illusive_Incident_Id": {
              "runAfter": {
                "Initialize_Message": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Illusive Incident Id",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Invalid_EDR_resources": {
              "runAfter": {
                "Initialize_Crowdstrike_resource": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Invalid EDR resources",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_IsHostIsolated": {
              "runAfter": {
                "Initialize_Illusive_Incident_Id": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IsHostIsolated",
                    "type": "boolean",
                    "value": false
                  }
                ]
              }
            },
            "Initialize_IsProcessIsolated": {
              "runAfter": {
                "Initialize_IsHostIsolated": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IsProcessIsolated",
                    "type": "boolean",
                    "value": false
                  }
                ]
              }
            },
            "Initialize_Isolation_Succeeded": {
              "runAfter": {
                "Initialize_MDE_Response": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Isolation Succeeded",
                    "type": "boolean",
                    "value": false
                  }
                ]
              }
            },
            "Initialize_Labels": {
              "runAfter": {
                "Initialize_EventId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Labels",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_MDE_Host_Isolation": {
              "runAfter": {
                "Initialize_Machine_Host": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "MDE Host Isolation",
                    "type": "boolean",
                    "value": false
                  }
                ]
              }
            },
            "Initialize_MDE_Response": {
              "runAfter": {
                "Initialize_Crowdstrike_Response": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "MDE Response",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Machine_Domain": {
              "runAfter": {
                "Initialize_Machine_FQDN": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Machine Domain",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Machine_FQDN": {
              "runAfter": {
                "Initialize_DateTime": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Machine FQDN",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_Machine_Host": {
              "runAfter": {
                "Initialize_Machine_Domain": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Machine Host",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Message": {
              "runAfter": {
                "Initialize_ProcessOrHost_Isolation": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Message",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_ProcessOrHost_Isolation": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IsolationCriteria",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Process_id": {
              "runAfter": {
                "Initialize_Consolidated_Process_for_Crowdstrike": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Process id",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Processes_Array_for_Crowdstrike": {
              "runAfter": {
                "Initialize_Labels": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Processes Array",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_Processes_Filtered_Array_for_Crowdstrike": {
              "runAfter": {
                "Initialize_Processes_Array_for_Crowdstrike": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Processes Filtered Array",
                    "type": "array"
                  }
                ]
              }
            },
            "Initialize_Processes_Unfiltered_Array_for_Crowdstrike": {
              "runAfter": {
                "Initialize_Processes_Filtered_Array_for_Crowdstrike": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Processes Unfiltered Array",
                    "type": "array"
                  }
                ]
              }
            },
            "Isolate_the_host_or_process": {
              "actions": {
                "Check_if_Event_has_a_Triggering_Process": {
                  "actions": {
                    "Check_If_EDR_Configured_is_Azure_MDE": {
                      "actions": {
                        "Authorize_MDE_for_Process_Isolation": {
                          "runAfter": {},
                          "type": "Http",
                          "inputs": {
                            "body": "grant_type=client_credentials&client_id=@{parameters('MDE Client Id')}&client_secret=@{parameters('MDE Client Secret')}&scope=https%3A%2F%2Fapi.securitycenter.microsoft.com%2F.default",
                            "headers": {
                              "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "method": "POST",
                            "uri": "https://login.microsoftonline.com/@{parameters('MDE Tenant Id')}/oauth2/v2.0/token"
                          }
                        },
                        "Check_if_SourceHostname_is_empty_for_MDE_process": {
                          "actions": {
                            "Check_if_Host_contains_FQDN_name_for_Process_Isolation_for_MDE": {
                              "actions": {
                                "Check_for_more_than_1_resource_for_MDE_Response_with_valid_FQDN": {
                                  "actions": {
                                    "Check_for_more_than_1_resource_for_MDE_Response_with_valid_FQDN_and_IP": {
                                      "actions": {
                                        "Fetch_MDE_Response_with_hostname_for_Process_for_invalid_resource": {
                                          "runAfter": {},
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "MDE Response",
                                            "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_for_multiple_resource')}"
                                          }
                                        },
                                        "Invalid_case_for_MDE_Response": {
                                          "runAfter": {
                                            "Fetch_MDE_Response_with_hostname_for_Process_for_invalid_resource": [
                                              "Succeeded"
                                            ]
                                          },
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Invalid EDR resources",
                                            "value": "Invalid"
                                          }
                                        }
                                      },
                                      "runAfter": {
                                        "Parse_The_Machine_Id_with_IP_for_process_for_multiple_resource": [
                                          "Succeeded"
                                        ]
                                      },
                                      "else": {
                                        "actions": {
                                          "Fetch_MDE_Response_with_hostname_for_Process_for_valid_resource_with_IP": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "MDE Response",
                                              "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_for_multiple_resource')}"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@length(body('Parse_The_Machine_Id_with_IP_for_process_for_multiple_resource')?['value'])",
                                              1
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_for_multiple_resource": {
                                      "runAfter": {},
                                      "type": "Http",
                                      "inputs": {
                                        "headers": {
                                          "Authorization": "Bearer @{body('Parse_MDE_Access_Token_for_Process')?['access_token']}",
                                          "Content-Type": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "https://api.securitycenter.microsoft.com/api/machines/findbyip(ip='@{body('Parse_Illusive_Incident_Details')?['sourceIp']}',timestamp=@{body('Parse_Illusive_Incident_Details')?['incidentTimeUTC']})"
                                      }
                                    },
                                    "Parse_The_Machine_Id_with_IP_for_process_for_multiple_resource": {
                                      "runAfter": {
                                        "MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_for_multiple_resource": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "ParseJson",
                                      "inputs": {
                                        "content": "@body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_for_multiple_resource')",
                                        "schema": {
                                          "properties": {
                                            "@@odata.context": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "items": {
                                                "properties": {
                                                  "aadDeviceId": {},
                                                  "computerDnsName": {
                                                    "type": "string"
                                                  },
                                                  "exposureLevel": {
                                                    "type": "string"
                                                  },
                                                  "firstSeen": {
                                                    "type": "string"
                                                  },
                                                  "healthStatus": {
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "type": "string"
                                                  },
                                                  "isAadJoined": {
                                                    "type": "boolean"
                                                  },
                                                  "lastExternalIpAddress": {
                                                    "type": "string"
                                                  },
                                                  "lastIpAddress": {
                                                    "type": "string"
                                                  },
                                                  "lastSeen": {
                                                    "type": "string"
                                                  },
                                                  "machineTags": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "osBuild": {
                                                    "type": "integer"
                                                  },
                                                  "osPlatform": {
                                                    "type": "string"
                                                  },
                                                  "osProcessor": {
                                                    "type": "string"
                                                  },
                                                  "rbacGroupId": {
                                                    "type": "integer"
                                                  },
                                                  "rbacGroupName": {},
                                                  "riskScore": {
                                                    "type": "string"
                                                  },
                                                  "version": {}
                                                },
                                                "required": [
                                                  "id",
                                                  "computerDnsName",
                                                  "firstSeen",
                                                  "lastSeen",
                                                  "osPlatform",
                                                  "osProcessor",
                                                  "lastIpAddress",
                                                  "lastExternalIpAddress",
                                                  "osBuild",
                                                  "healthStatus",
                                                  "rbacGroupId",
                                                  "riskScore",
                                                  "exposureLevel",
                                                  "isAadJoined",
                                                  "machineTags"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_MDE_Response_with_valid_FQDN": [
                                      "Succeeded"
                                    ]
                                  },
                                  "else": {
                                    "actions": {
                                      "Fetch_MDE_Response_with_hostname_for_Process": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "MDE Response",
                                          "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_hostname_for_process')}"
                                        }
                                      }
                                    }
                                  },
                                  "expression": {
                                    "or": [
                                      {
                                        "greater": [
                                          "@length(body('Parse_MDE_Response_with_valid_FQDN')?['value'])",
                                          1
                                        ]
                                      },
                                      {
                                        "equals": [
                                          "@length(body('Parse_MDE_Response_with_valid_FQDN')?['value'])",
                                          0
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "MDE_call_to_fetch_The_Machine_Id_with_hostname_for_process": {
                                  "runAfter": {},
                                  "type": "Http",
                                  "inputs": {
                                    "headers": {
                                      "Authorization": "Bearer @{body('Parse_MDE_Access_Token_for_Process')?['access_token']}",
                                      "Content-Type": "application/json"
                                    },
                                    "method": "GET",
                                    "uri": "https://api.securitycenter.microsoft.com/api/machines/?$filter=computerDnsName eq '@{body('Parse_Illusive_Incident_Details')?['sourceHostname']}'"
                                  }
                                },
                                "Parse_MDE_Response_with_valid_FQDN": {
                                  "runAfter": {
                                    "MDE_call_to_fetch_The_Machine_Id_with_hostname_for_process": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('MDE_call_to_fetch_The_Machine_Id_with_hostname_for_process')",
                                    "schema": {
                                      "properties": {
                                        "@@odata.context": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "items": {
                                            "properties": {
                                              "aadDeviceId": {},
                                              "computerDnsName": {
                                                "type": "string"
                                              },
                                              "exposureLevel": {
                                                "type": "string"
                                              },
                                              "firstSeen": {
                                                "type": "string"
                                              },
                                              "healthStatus": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "string"
                                              },
                                              "isAadJoined": {
                                                "type": "boolean"
                                              },
                                              "lastExternalIpAddress": {
                                                "type": "string"
                                              },
                                              "lastIpAddress": {
                                                "type": "string"
                                              },
                                              "lastSeen": {
                                                "type": "string"
                                              },
                                              "machineTags": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "osBuild": {
                                                "type": "integer"
                                              },
                                              "osPlatform": {
                                                "type": "string"
                                              },
                                              "osProcessor": {
                                                "type": "string"
                                              },
                                              "rbacGroupId": {
                                                "type": "integer"
                                              },
                                              "rbacGroupName": {},
                                              "riskScore": {
                                                "type": "string"
                                              },
                                              "version": {}
                                            },
                                            "required": [
                                              "id",
                                              "computerDnsName",
                                              "firstSeen",
                                              "lastSeen",
                                              "osPlatform",
                                              "osProcessor",
                                              "lastIpAddress",
                                              "lastExternalIpAddress",
                                              "osBuild",
                                              "healthStatus",
                                              "rbacGroupId",
                                              "riskScore",
                                              "exposureLevel",
                                              "isAadJoined",
                                              "machineTags"
                                            ],
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                }
                              },
                              "runAfter": {},
                              "else": {
                                "actions": {
                                  "Check_for_more_than_1_resource_for_MDE_Response_with_invalid_FQDN": {
                                    "actions": {
                                      "Fetch_MDE_Response_with_IP_for_Process_with_multiple": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "MDE Response",
                                          "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_process')}"
                                        }
                                      },
                                      "Invalid_case_for_MDE_response_with_no_host": {
                                        "runAfter": {
                                          "Fetch_MDE_Response_with_IP_for_Process_with_multiple": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Invalid EDR resources",
                                          "value": "Invalid"
                                        }
                                      }
                                    },
                                    "runAfter": {
                                      "Parse_MDE_Response_with_invalid_FQDN": [
                                        "Succeeded"
                                      ]
                                    },
                                    "else": {
                                      "actions": {
                                        "Fetch_MDE_Response_with_IP_for_Process": {
                                          "runAfter": {},
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "MDE Response",
                                            "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_process')}"
                                          }
                                        }
                                      }
                                    },
                                    "expression": {
                                      "and": [
                                        {
                                          "greater": [
                                            "@length(body('Parse_MDE_Response_with_invalid_FQDN')?['value'])",
                                            1
                                          ]
                                        }
                                      ]
                                    },
                                    "type": "If"
                                  },
                                  "MDE_call_to_fetch_The_Machine_Id_with_IP_for_process": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                      "headers": {
                                        "Authorization": "Bearer @{body('Parse_MDE_Access_Token_for_Process')?['access_token']}",
                                        "Content-Type": "application/json"
                                      },
                                      "method": "GET",
                                      "uri": "https://api.securitycenter.microsoft.com/api/machines/findbyip(ip='@{body('Parse_Illusive_Incident_Details')?['sourceIp']}',timestamp=@{body('Parse_Illusive_Incident_Details')?['incidentTimeUTC']})"
                                    }
                                  },
                                  "Parse_MDE_Response_with_invalid_FQDN": {
                                    "runAfter": {
                                      "MDE_call_to_fetch_The_Machine_Id_with_IP_for_process": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                      "content": "@body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_process')",
                                      "schema": {
                                        "properties": {
                                          "@@odata.context": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "items": {
                                              "properties": {
                                                "aadDeviceId": {},
                                                "computerDnsName": {
                                                  "type": "string"
                                                },
                                                "exposureLevel": {
                                                  "type": "string"
                                                },
                                                "firstSeen": {
                                                  "type": "string"
                                                },
                                                "healthStatus": {
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "type": "string"
                                                },
                                                "isAadJoined": {
                                                  "type": "boolean"
                                                },
                                                "lastExternalIpAddress": {
                                                  "type": "string"
                                                },
                                                "lastIpAddress": {
                                                  "type": "string"
                                                },
                                                "lastSeen": {
                                                  "type": "string"
                                                },
                                                "machineTags": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "osBuild": {
                                                  "type": "integer"
                                                },
                                                "osPlatform": {
                                                  "type": "string"
                                                },
                                                "osProcessor": {
                                                  "type": "string"
                                                },
                                                "rbacGroupId": {
                                                  "type": "integer"
                                                },
                                                "rbacGroupName": {},
                                                "riskScore": {
                                                  "type": "string"
                                                },
                                                "version": {}
                                              },
                                              "required": [
                                                "id",
                                                "computerDnsName",
                                                "firstSeen",
                                                "lastSeen",
                                                "osPlatform",
                                                "osProcessor",
                                                "lastIpAddress",
                                                "lastExternalIpAddress",
                                                "osBuild",
                                                "healthStatus",
                                                "rbacGroupId",
                                                "riskScore",
                                                "exposureLevel",
                                                "isAadJoined",
                                                "machineTags"
                                              ],
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "contains": [
                                      "@body('Parse_Illusive_Incident_Details')?['sourceHostname']",
                                      "."
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            }
                          },
                          "runAfter": {
                            "Parse_MDE_Access_Token_for_Process": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Check_if_SourceIP_and_IncidentTime_are_empty_for_Process_with_MDE": {
                                "actions": {
                                  "Check_for_more_than_1_resources_for_MDE_process_with_no_host": {
                                    "actions": {
                                      "Fetch_MDE_Response_with_IP_and_more_than_1_resources_with__SourceHostName": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "MDE Response",
                                          "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_with_no_SourceHostName')}"
                                        }
                                      },
                                      "Invalid_case_for_MDE_with_no_Host_and_with_ip": {
                                        "runAfter": {
                                          "Fetch_MDE_Response_with_IP_and_more_than_1_resources_with__SourceHostName": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Invalid EDR resources",
                                          "value": "Invalid"
                                        }
                                      }
                                    },
                                    "runAfter": {
                                      "Parse_Machine_Id_with_IP_for_process_with_no_SourceHostName": [
                                        "Succeeded"
                                      ]
                                    },
                                    "else": {
                                      "actions": {
                                        "Fetch_MDE_Response_with_IP_for_Process_with_no_SourceHOstName": {
                                          "runAfter": {},
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "MDE Response",
                                            "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_with_no_SourceHostName')}"
                                          }
                                        }
                                      }
                                    },
                                    "expression": {
                                      "and": [
                                        {
                                          "greater": [
                                            "@length(body('Parse_Machine_Id_with_IP_for_process_with_no_SourceHostName')?['value'])",
                                            1
                                          ]
                                        }
                                      ]
                                    },
                                    "type": "If"
                                  },
                                  "MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_with_no_SourceHostName": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                      "headers": {
                                        "Authorization": "Bearer @{body('Parse_MDE_Access_Token_for_Process')?['access_token']}",
                                        "Content-Type": "application/json"
                                      },
                                      "method": "GET",
                                      "uri": "https://api.securitycenter.microsoft.com/api/machines/findbyip(ip='@{body('Parse_Illusive_Incident_Details')?['sourceIp']}',timestamp=@{body('Parse_Illusive_Incident_Details')?['incidentTimeUTC']})"
                                    }
                                  },
                                  "Parse_Machine_Id_with_IP_for_process_with_no_SourceHostName": {
                                    "runAfter": {
                                      "MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_with_no_SourceHostName": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                      "content": "@body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_process_with_no_SourceHostName')",
                                      "schema": {
                                        "properties": {
                                          "@@odata.context": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "items": {
                                              "properties": {
                                                "aadDeviceId": {},
                                                "computerDnsName": {
                                                  "type": "string"
                                                },
                                                "exposureLevel": {
                                                  "type": "string"
                                                },
                                                "firstSeen": {
                                                  "type": "string"
                                                },
                                                "healthStatus": {
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "type": "string"
                                                },
                                                "isAadJoined": {
                                                  "type": "boolean"
                                                },
                                                "lastExternalIpAddress": {
                                                  "type": "string"
                                                },
                                                "lastIpAddress": {
                                                  "type": "string"
                                                },
                                                "lastSeen": {
                                                  "type": "string"
                                                },
                                                "machineTags": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "osBuild": {
                                                  "type": "integer"
                                                },
                                                "osPlatform": {
                                                  "type": "string"
                                                },
                                                "osProcessor": {
                                                  "type": "string"
                                                },
                                                "rbacGroupId": {
                                                  "type": "integer"
                                                },
                                                "rbacGroupName": {},
                                                "riskScore": {
                                                  "type": "string"
                                                },
                                                "version": {}
                                              },
                                              "required": [
                                                "id",
                                                "computerDnsName",
                                                "firstSeen",
                                                "lastSeen",
                                                "osPlatform",
                                                "osProcessor",
                                                "lastIpAddress",
                                                "lastExternalIpAddress",
                                                "osBuild",
                                                "healthStatus",
                                                "rbacGroupId",
                                                "riskScore",
                                                "exposureLevel",
                                                "isAadJoined",
                                                "machineTags"
                                              ],
                                              "type": "object"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  }
                                },
                                "runAfter": {},
                                "else": {
                                  "actions": {
                                    "Failed_to_Isolate_Process_for_MDE": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Message",
                                        "value": "Failed to Isolate Process for Illusive Incident id @{variables('Illusive Incident Id')} using MDE (no SourceIP and Incident Time)"
                                      }
                                    },
                                    "Terminate_Process_Isolation_for_MDE_flow": {
                                      "runAfter": {
                                        "Failed_to_Isolate_Process_for_MDE": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "Terminate",
                                      "inputs": {
                                        "runStatus": "Succeeded"
                                      }
                                    }
                                  }
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "not": {
                                        "equals": [
                                          "@body('Parse_Illusive_Incident_Details')?['sourceIp']",
                                          "@null"
                                        ]
                                      }
                                    },
                                    {
                                      "not": {
                                        "equals": [
                                          "@body('Parse_Illusive_Incident_Details')?['incidentTimeUTC']",
                                          "@null"
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": "If"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@body('Parse_Illusive_Incident_Details')?['sourceHostname']",
                                    "@null"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Check_if_resource_available_for_MDE": {
                          "actions": {
                            "For_each_of_the_Processes": {
                              "foreach": "@body('Parse_Triggering_Process_Information')?['processes']",
                              "actions": {
                                "For_each": {
                                  "foreach": "@body('Parse__Machine_Id_with_Process_details')?['value']",
                                  "actions": {
                                    "Get_Files_in_MDE_using_SHA256_of_the_process": {
                                      "runAfter": {},
                                      "type": "Http",
                                      "inputs": {
                                        "headers": {
                                          "Authorization": "Bearer @{body('Parse_MDE_Access_Token_for_Process')?['access_token']}",
                                          "Content-Type": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "https://api.securitycenter.microsoft.com/api/files/@{items('For_each_of_the_Processes')?['sha256']}"
                                      }
                                    },
                                    "If_Process_isolation_failed_continue_isolating_the_host": {
                                      "actions": {
                                        "Isolate_the_host_with_MDE": {
                                          "runAfter": {},
                                          "type": "Http",
                                          "inputs": {
                                            "body": {
                                              "Comment": "Isolate machine due to alert @{variables('Illusive Incident Id')}",
                                              "IsolationType": "Full"
                                            },
                                            "headers": {
                                              "Authorization": "Bearer @{body('Parse_MDE_Access_Token_for_Process')?['access_token']}",
                                              "Content-Type": "application/json"
                                            },
                                            "method": "POST",
                                            "uri": "https://api.securitycenter.microsoft.com/api/machines/@{items('For_each')?['id']}/isolate"
                                          }
                                        },
                                        "Set_MDE_Host_Isolation": {
                                          "runAfter": {
                                            "Isolate_the_host_with_MDE": [
                                              "Succeeded"
                                            ]
                                          },
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "MDE Host Isolation",
                                            "value": true
                                          }
                                        }
                                      },
                                      "runAfter": {
                                        "Isolate_process_with_MDE": [
                                          "Succeeded",
                                          "Failed",
                                          "Skipped"
                                        ]
                                      },
                                      "else": {
                                        "actions": {
                                          "Process_has_been_isolated_successfully_with_MDE": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Message",
                                              "value": "Process has been isolated successfully with MDE"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "equals": [
                                              "@outputs('Isolate_process_with_MDE')['statusCode']",
                                              403
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Isolate_process_with_MDE": {
                                      "runAfter": {
                                        "Parse_Files_response_in_MDE_using_SHA256_of_the_process": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "Http",
                                      "inputs": {
                                        "body": {
                                          "Comment": "Stop and quarantine file on machine due to alert @{variables('Illusive Incident Id')}",
                                          "Sha1": "@body('Parse_Files_response_in_MDE_using_SHA256_of_the_process')?['sha1']"
                                        },
                                        "headers": {
                                          "Authorization": "Bearer @{body('Parse_MDE_Access_Token_for_Process')?['access_token']}",
                                          "Content-Type": "application/json"
                                        },
                                        "method": "POST",
                                        "uri": "https://api.securitycenter.microsoft.com/api/machines/@{items('For_each')?['id']}/StopAndQuarantineFile"
                                      }
                                    },
                                    "Parse_Files_response_in_MDE_using_SHA256_of_the_process": {
                                      "runAfter": {
                                        "Get_Files_in_MDE_using_SHA256_of_the_process": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "ParseJson",
                                      "inputs": {
                                        "content": "@body('Get_Files_in_MDE_using_SHA256_of_the_process')",
                                        "schema": {
                                          "properties": {
                                            "@@odata.context": {
                                              "type": "string"
                                            },
                                            "determinationType": {},
                                            "determinationValue": {},
                                            "fileProductName": {},
                                            "filePublisher": {},
                                            "fileType": {},
                                            "globalFirstObserved": {
                                              "type": "string"
                                            },
                                            "globalLastObserved": {
                                              "type": "string"
                                            },
                                            "globalPrevalence": {
                                              "type": "integer"
                                            },
                                            "isPeFile": {
                                              "type": "boolean"
                                            },
                                            "isValidCertificate": {
                                              "type": "boolean"
                                            },
                                            "issuer": {},
                                            "md5": {
                                              "type": "string"
                                            },
                                            "sha1": {
                                              "type": "string"
                                            },
                                            "sha256": {
                                              "type": "string"
                                            },
                                            "signer": {
                                              "type": "string"
                                            },
                                            "signerHash": {
                                              "type": "string"
                                            },
                                            "size": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    }
                                  },
                                  "runAfter": {},
                                  "type": "Foreach"
                                }
                              },
                              "runAfter": {},
                              "type": "Foreach"
                            },
                            "Set_Process_Isolation_Succeeded_for_MDE": {
                              "runAfter": {
                                "For_each_of_the_Processes": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Isolation Succeeded",
                                "value": true
                              }
                            }
                          },
                          "runAfter": {
                            "Parse__Machine_Id_with_Process_details": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Check_for_Invalid_Resources_for_MDE_Process": {
                                "actions": {
                                  "Invalid_resource_for_MDE": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Message",
                                      "value": "Invalid Resources hence the Process Isolation is Ignored"
                                    }
                                  }
                                },
                                "runAfter": {},
                                "else": {
                                  "actions": {
                                    "No_Resource_to_available__for_Isolation_using_MDE": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Message",
                                        "value": "No Resource to available  for Isolation using Azure MDE"
                                      }
                                    }
                                  }
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "equals": [
                                        "@variables('Invalid EDR resources')",
                                        "Invalid"
                                      ]
                                    }
                                  ]
                                },
                                "type": "If"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(body('Parse__Machine_Id_with_Process_details')?['value'])",
                                  0
                                ]
                              },
                              {
                                "not": {
                                  "equals": [
                                    "@variables('Invalid EDR resources')",
                                    "Invalid"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Parse_MDE_Access_Token_for_Process": {
                          "runAfter": {
                            "Authorize_MDE_for_Process_Isolation": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Authorize_MDE_for_Process_Isolation')",
                            "schema": {
                              "properties": {
                                "access_token": {
                                  "type": "string"
                                },
                                "expires_in": {
                                  "type": "integer"
                                },
                                "ext_expires_in": {
                                  "type": "integer"
                                },
                                "token_type": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Parse__Machine_Id_with_Process_details": {
                          "runAfter": {
                            "Check_if_SourceHostname_is_empty_for_MDE_process": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@variables('MDE Response')",
                            "schema": {
                              "properties": {
                                "@@odata.context": {
                                  "type": "string"
                                },
                                "value": {
                                  "items": {
                                    "properties": {
                                      "aadDeviceId": {},
                                      "computerDnsName": {
                                        "type": "string"
                                      },
                                      "exposureLevel": {
                                        "type": "string"
                                      },
                                      "firstSeen": {
                                        "type": "string"
                                      },
                                      "healthStatus": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "isAadJoined": {
                                        "type": "boolean"
                                      },
                                      "lastExternalIpAddress": {
                                        "type": "string"
                                      },
                                      "lastIpAddress": {
                                        "type": "string"
                                      },
                                      "lastSeen": {
                                        "type": "string"
                                      },
                                      "machineTags": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "osBuild": {
                                        "type": "integer"
                                      },
                                      "osPlatform": {
                                        "type": "string"
                                      },
                                      "osProcessor": {
                                        "type": "string"
                                      },
                                      "rbacGroupId": {
                                        "type": "integer"
                                      },
                                      "rbacGroupName": {},
                                      "riskScore": {
                                        "type": "string"
                                      },
                                      "version": {}
                                    },
                                    "required": [
                                      "id",
                                      "computerDnsName",
                                      "firstSeen",
                                      "lastSeen",
                                      "osPlatform",
                                      "osProcessor",
                                      "lastIpAddress",
                                      "lastExternalIpAddress",
                                      "osBuild",
                                      "healthStatus",
                                      "rbacGroupId",
                                      "riskScore",
                                      "exposureLevel",
                                      "isAadJoined",
                                      "machineTags"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        }
                      },
                      "runAfter": {},
                      "else": {
                        "actions": {
                          "Check_If_EDR_Configured_is_Crowdstrike_for_process": {
                            "actions": {
                              "Authorize_Crowdstrike_for_process": {
                                "runAfter": {},
                                "type": "Http",
                                "inputs": {
                                  "body": "client_id=@{parameters('Crowdstrike Client Id')}&client_secret=@{parameters('Crowdstrike Client Secret')}",
                                  "headers": {
                                    "content-type": "application/x-www-form-urlencoded"
                                  },
                                  "method": "POST",
                                  "uri": "@{parameters('Crowdstrike Base URL')}/oauth2/token"
                                }
                              },
                              "Check_If_host_returns_valid_resource": {
                                "actions": {
                                  "Consolidate_the_Crowdstrike_processes": {
                                    "runAfter": {
                                      "Process_the_output_of_Crowdstrike_processes": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Consolidated Process",
                                      "value": "@{replace(string(variables('Processes Unfiltered Array')),'\\n','|')}"
                                    }
                                  },
                                  "Crowdstrike_call_to_fetch_all_Processes": {
                                    "runAfter": {
                                      "Parse_Crowdstrike_call_to_fetch_the_batch_Session_id": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                      "body": {
                                        "base_command": "ps",
                                        "batch_id": "@body('Parse_Crowdstrike_call_to_fetch_the_batch_Session_id')?['batch_id']",
                                        "command_string": "ps",
                                        "optional_hosts": "@body('Parse_Crowdstrike_Machine_with_hostname_for_Process')?['resources']",
                                        "persist_all": true
                                      },
                                      "headers": {
                                        "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token_for_Process')?['access_token']}",
                                        "Content-Type": "application/json"
                                      },
                                      "method": "POST",
                                      "uri": "@{parameters('Crowdstrike Base URL')}/real-time-response/combined/batch-command/v1"
                                    }
                                  },
                                  "Crowdstrike_call_to_fetch_the_batch_Session_id": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                      "body": {
                                        "host_ids": "@body('Parse_Crowdstrike_Machine_with_hostname_for_Process')?['resources']",
                                        "queue_offline": true
                                      },
                                      "headers": {
                                        "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token_for_Process')?['access_token']}",
                                        "Content-Type": "application/json"
                                      },
                                      "method": "POST",
                                      "uri": "@{parameters('Crowdstrike Base URL')}/real-time-response/combined/batch-init-session/v1"
                                    }
                                  },
                                  "Fetch_Crowdstrike_Process": {
                                    "runAfter": {
                                      "Set_Crowdstrike_Process_variable": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@replace(replace(string(body('Parse_Crowdstrike_call_to_fetch_all_Processes')?['combined']?['resources']),variables('Crowdstrike Resource Variable'),''),'}}','}')"
                                  },
                                  "For_each_Illusive_Process": {
                                    "foreach": "@body('Parse_Triggering_Process_Information')?['processes']",
                                    "actions": {
                                      "Check_for_process_availability": {
                                        "actions": {
                                          "Filter_array": {
                                            "runAfter": {
                                              "Filtered_array_of_process": [
                                                "Succeeded"
                                              ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                              "from": "@variables('Processes Filtered Array')",
                                              "where": "@not(equals(item(), string('')))"
                                            }
                                          },
                                          "Filtered_array_of_process": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Processes Filtered Array",
                                              "value": "@split(first(body('Filter_the_triggered_process_of_the_Incident')),' ')"
                                            }
                                          },
                                          "Get_Process_Id": {
                                            "runAfter": {
                                              "Filter_array": [
                                                "Succeeded"
                                              ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Process id",
                                              "value": "@{last(take(body('Filter_array'),2))}"
                                            }
                                          },
                                          "If_Process_is_Isolated": {
                                            "actions": {
                                              "Set_Process_Isolation_Succeeded_for_Crowdstrike": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "Isolation Succeeded",
                                                  "value": true
                                                }
                                              }
                                            },
                                            "runAfter": {
                                              "Parse_Crowdstrike_Isolation_Successful_json": [
                                                "Succeeded"
                                              ]
                                            },
                                            "else": {
                                              "actions": {
                                                "No_Process_to_be_isolated_for_Crowdstrike": {
                                                  "runAfter": {},
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "Message",
                                                    "value": "No Process to be isolated for Crowdstrike"
                                                  }
                                                }
                                              }
                                            },
                                            "expression": {
                                              "or": [
                                                {
                                                  "lessOrEquals": [
                                                    "@length(body('Parse_Crowdstrike_Isolation_Successful_json')?['errors'])",
                                                    0
                                                  ]
                                                }
                                              ]
                                            },
                                            "type": "If"
                                          },
                                          "Isolating_the_Process_of_Crowdstrike": {
                                            "runAfter": {
                                              "Get_Process_Id": [
                                                "Succeeded"
                                              ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                              "body": {
                                                "base_command": "kill",
                                                "batch_id": "@{body('Parse_Crowdstrike_call_to_fetch_the_batch_Session_id')?['batch_id']}",
                                                "command_string": "kill @{variables('Process id')}",
                                                "optional_hosts": "@body('Parse_Crowdstrike_Machine_with_hostname_for_Process')?['resources']",
                                                "persist_all": true
                                              },
                                              "headers": {
                                                "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token_for_Process')?['access_token']}",
                                                "Content-Type": "application/json"
                                              },
                                              "method": "POST",
                                              "uri": "@{parameters('Crowdstrike Base URL')}/real-time-response/combined/batch-active-responder-command/v1"
                                            }
                                          },
                                          "Parse_Crowdstrike_Isolation_Successful_json": {
                                            "runAfter": {
                                              "Isolating_the_Process_of_Crowdstrike": [
                                                "Succeeded"
                                              ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                              "content": "@body('Isolating_the_Process_of_Crowdstrike')",
                                              "schema": {
                                                "properties": {
                                                  "combined": {
                                                    "properties": {
                                                      "resources": {
                                                        "properties": {
                                                          "@{last(variables('Crowdstrike resource'))}": {
                                                            "properties": {
                                                              "aid": {
                                                                "type": "string"
                                                              },
                                                              "base_command": {
                                                                "type": "string"
                                                              },
                                                              "complete": {
                                                                "type": "boolean"
                                                              },
                                                              "errors": {
                                                                "type": "array"
                                                              },
                                                              "offline_queued": {
                                                                "type": "boolean"
                                                              },
                                                              "query_time": {
                                                                "type": "number"
                                                              },
                                                              "session_id": {
                                                                "type": "string"
                                                              },
                                                              "stderr": {
                                                                "type": "string"
                                                              },
                                                              "stdout": {
                                                                "type": "string"
                                                              },
                                                              "task_id": {
                                                                "type": "string"
                                                              }
                                                            },
                                                            "type": "object"
                                                          }
                                                        },
                                                        "type": "object"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "errors": {
                                                    "type": "array"
                                                  },
                                                  "meta": {
                                                    "properties": {
                                                      "powered_by": {
                                                        "type": "string"
                                                      },
                                                      "query_time": {
                                                        "type": "number"
                                                      },
                                                      "trace_id": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          }
                                        },
                                        "runAfter": {
                                          "Filter_the_triggered_process_of_the_Incident": [
                                            "Succeeded"
                                          ]
                                        },
                                        "else": {
                                          "actions": {
                                            "No_Process_found_for_isolation": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Message",
                                                "value": "No Process found for isolation"
                                              }
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "greater": [
                                                "@length(body('Filter_the_triggered_process_of_the_Incident'))",
                                                0
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      },
                                      "Filter_process_datetime": {
                                        "runAfter": {
                                          "Split_process_datetime": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "Query",
                                        "inputs": {
                                          "from": "@variables('Process DateTime Array')",
                                          "where": "@contains(item(), 'T')"
                                        }
                                      },
                                      "Filter_the_triggered_process_of_the_Incident": {
                                        "runAfter": {
                                          "Filter_process_datetime": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "Query",
                                        "inputs": {
                                          "from": "@variables('Processes Array')",
                                          "where": "@contains(item(), replace(formatDateTime(string(last(body('Filter_process_datetime'))), 'M/d/yyyy hh:mm:ss'), ' 0', ' '))"
                                        }
                                      },
                                      "Split_process_datetime": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Process DateTime Array",
                                          "value": "@split(items('For_each_Illusive_Process')?['startTime'],'+')"
                                        }
                                      }
                                    },
                                    "runAfter": {
                                      "Get_the_Crowdstrike_processes_in_an_array": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Foreach"
                                  },
                                  "Get_the_Crowdstrike_processes_in_an_array": {
                                    "runAfter": {
                                      "Consolidate_the_Crowdstrike_processes": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Processes Array",
                                      "value": "@split(variables('Consolidated Process'),'|')"
                                    }
                                  },
                                  "Parse_Crowdstrike_Process": {
                                    "runAfter": {
                                      "Fetch_Crowdstrike_Process": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                      "content": "@outputs('Fetch_Crowdstrike_Process')",
                                      "schema": {
                                        "properties": {
                                          "aid": {
                                            "type": "string"
                                          },
                                          "base_command": {
                                            "type": "string"
                                          },
                                          "complete": {
                                            "type": "boolean"
                                          },
                                          "errors": {
                                            "type": "array"
                                          },
                                          "offline_queued": {
                                            "type": "boolean"
                                          },
                                          "query_time": {
                                            "type": "number"
                                          },
                                          "session_id": {
                                            "type": "string"
                                          },
                                          "stderr": {
                                            "type": "string"
                                          },
                                          "stdout": {
                                            "type": "string"
                                          },
                                          "task_id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "Parse_Crowdstrike_call_to_fetch_all_Processes": {
                                    "runAfter": {
                                      "Crowdstrike_call_to_fetch_all_Processes": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                      "content": "@body('Crowdstrike_call_to_fetch_all_Processes')",
                                      "schema": {
                                        "properties": {
                                          "combined": {
                                            "properties": {
                                              "resources": {
                                                "properties": {
                                                  "@{last(variables('Crowdstrike resource'))}": {
                                                    "properties": {
                                                      "aid": {
                                                        "type": "string"
                                                      },
                                                      "base_command": {
                                                        "type": "string"
                                                      },
                                                      "complete": {
                                                        "type": "boolean"
                                                      },
                                                      "errors": {
                                                        "type": "array"
                                                      },
                                                      "offline_queued": {
                                                        "type": "boolean"
                                                      },
                                                      "query_time": {
                                                        "type": "number"
                                                      },
                                                      "session_id": {
                                                        "type": "string"
                                                      },
                                                      "stderr": {
                                                        "type": "string"
                                                      },
                                                      "stdout": {
                                                        "type": "string"
                                                      },
                                                      "task_id": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "errors": {
                                            "type": "array"
                                          },
                                          "meta": {
                                            "properties": {
                                              "powered_by": {
                                                "type": "string"
                                              },
                                              "query_time": {
                                                "type": "number"
                                              },
                                              "trace_id": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "Parse_Crowdstrike_call_to_fetch_the_batch_Session_id": {
                                    "runAfter": {
                                      "Crowdstrike_call_to_fetch_the_batch_Session_id": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                      "content": "@body('Crowdstrike_call_to_fetch_the_batch_Session_id')",
                                      "schema": {
                                        "properties": {
                                          "batch_id": {
                                            "type": "string"
                                          },
                                          "errors": {
                                            "type": "array"
                                          },
                                          "meta": {
                                            "properties": {
                                              "powered_by": {
                                                "type": "string"
                                              },
                                              "query_time": {
                                                "type": "number"
                                              },
                                              "trace_id": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "resources": {
                                            "properties": {
                                              "@{last(variables('Crowdstrike resource'))}": {
                                                "properties": {
                                                  "aid": {
                                                    "type": "string"
                                                  },
                                                  "base_command": {
                                                    "type": "string"
                                                  },
                                                  "complete": {
                                                    "type": "boolean"
                                                  },
                                                  "errors": {
                                                    "type": "array"
                                                  },
                                                  "offline_queued": {
                                                    "type": "boolean"
                                                  },
                                                  "query_time": {
                                                    "type": "integer"
                                                  },
                                                  "session_id": {
                                                    "type": "string"
                                                  },
                                                  "stderr": {
                                                    "type": "string"
                                                  },
                                                  "stdout": {
                                                    "type": "string"
                                                  },
                                                  "task_id": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "Process_the_output_of_Crowdstrike_processes": {
                                    "runAfter": {
                                      "Parse_Crowdstrike_Process": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Processes Unfiltered Array",
                                      "value": "@split(replace(string(body('Parse_Crowdstrike_Process')?['stdout']),'\\n','|'),'|')"
                                    }
                                  },
                                  "Set_Crowdstrike_Process_variable": {
                                    "runAfter": {
                                      "Parse_Crowdstrike_call_to_fetch_all_Processes": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Crowdstrike Resource Variable",
                                      "value": "{\"@{last(variables('Crowdstrike resource'))}\":"
                                    }
                                  }
                                },
                                "runAfter": {
                                  "Set_Crowdstrike_resource": [
                                    "Succeeded"
                                  ]
                                },
                                "else": {
                                  "actions": {
                                    "Check_for_Invalid_resources": {
                                      "actions": {
                                        "Invalid_Resources_hence_the_Process_Isolation_is_Ignored": {
                                          "runAfter": {},
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Message",
                                            "value": "Invalid Resources hence the Process Isolation is Ignored"
                                          }
                                        }
                                      },
                                      "runAfter": {},
                                      "else": {
                                        "actions": {
                                          "No_Resources_available_for_Process_Isolation_of_Crowdstrike": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Message",
                                              "value": "No Resources available for Isolation using Crowdstrike"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "equals": [
                                              "@variables('Invalid EDR resources')",
                                              "Invalid"
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  }
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "greater": [
                                        "@length(body('Parse_Crowdstrike_Machine_with_hostname_for_Process')?['resources'])",
                                        0
                                      ]
                                    },
                                    {
                                      "not": {
                                        "equals": [
                                          "@variables('Invalid EDR resources')",
                                          "Invalid"
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": "If"
                              },
                              "Check_if_SourceHostname_is_empty_for_Crowdstrike_process": {
                                "actions": {
                                  "Check_if_Host_contains_FQDN_name_for_Process_Isolation": {
                                    "actions": {
                                      "Check_for_resource_is_more_than_1": {
                                        "actions": {
                                          "Check_Local_IP_response_has_more_than_1_resources": {
                                            "actions": {
                                              "Invalid_resources": {
                                                "runAfter": {
                                                  "Set_Crowdstrike_response_from_local_ip_from_more_than_1_resources": [
                                                    "Succeeded"
                                                  ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "Invalid EDR resources",
                                                  "value": "Invalid"
                                                }
                                              },
                                              "Set_Crowdstrike_response_from_local_ip_from_more_than_1_resources": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "Crowdstrike Response",
                                                  "value": "@{body('Get_machine_id_using_localip')}"
                                                }
                                              }
                                            },
                                            "runAfter": {
                                              "Parse_local_IP_response": [
                                                "Succeeded"
                                              ]
                                            },
                                            "else": {
                                              "actions": {
                                                "Set_Crowdstike_response_from_local_ip": {
                                                  "runAfter": {},
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "Crowdstrike Response",
                                                    "value": "@{body('Get_machine_id_using_localip')}"
                                                  }
                                                }
                                              }
                                            },
                                            "expression": {
                                              "and": [
                                                {
                                                  "greater": [
                                                    "@length(body('Parse_local_IP_response')?['resources'])",
                                                    1
                                                  ]
                                                }
                                              ]
                                            },
                                            "type": "If"
                                          },
                                          "Get_machine_id_using_localip": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                              "headers": {
                                                "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token_for_Process')?['access_token']}",
                                                "Content-Type": "application/json"
                                              },
                                              "method": "GET",
                                              "uri": "@{parameters('Crowdstrike Base URL')}/devices/queries/devices/v1?filter=local_ip:'@{body('Parse_Illusive_Incident_Details')?['sourceIp']}'"
                                            }
                                          },
                                          "Parse_local_IP_response": {
                                            "runAfter": {
                                              "Get_machine_id_using_localip": [
                                                "Succeeded"
                                              ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                              "content": "@body('Get_machine_id_using_localip')",
                                              "schema": {
                                                "properties": {
                                                  "errors": {
                                                    "type": "array"
                                                  },
                                                  "meta": {
                                                    "properties": {
                                                      "pagination": {
                                                        "properties": {
                                                          "limit": {
                                                            "type": "integer"
                                                          },
                                                          "offset": {
                                                            "type": "integer"
                                                          },
                                                          "total": {
                                                            "type": "integer"
                                                          }
                                                        },
                                                        "type": "object"
                                                      },
                                                      "powered_by": {
                                                        "type": "string"
                                                      },
                                                      "query_time": {
                                                        "type": "number"
                                                      },
                                                      "trace_id": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "resources": {
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "type": "array"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          }
                                        },
                                        "runAfter": {
                                          "Parse_fqdn_response": [
                                            "Succeeded"
                                          ]
                                        },
                                        "else": {
                                          "actions": {
                                            "Fetch_Crowdstrike_Response_with_hostname_for_Process": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Crowdstrike Response",
                                                "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_hostname_for_Process')}"
                                              }
                                            }
                                          }
                                        },
                                        "expression": {
                                          "or": [
                                            {
                                              "greater": [
                                                "@length(body('Parse_fqdn_response')?['resources'])",
                                                1
                                              ]
                                            },
                                            {
                                              "equals": [
                                                "@length(body('Parse_fqdn_response')?['resources'])",
                                                0
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      },
                                      "Crowdstrike_call_to_fetch_the_Machine_Id_with_hostname_for_Process": {
                                        "runAfter": {
                                          "Set_Machine_Domain_for_Process": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "Http",
                                        "inputs": {
                                          "headers": {
                                            "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token_for_Process')?['access_token']}",
                                            "Content-Type": "application/json"
                                          },
                                          "method": "GET",
                                          "uri": "@{parameters('Crowdstrike Base URL')}/devices/queries/devices/v1?filter=machine_domain:'@{variables('Machine Domain')}'&host:'@{variables('Machine Host')}'"
                                        }
                                      },
                                      "Parse_fqdn_response": {
                                        "runAfter": {
                                          "Crowdstrike_call_to_fetch_the_Machine_Id_with_hostname_for_Process": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "ParseJson",
                                        "inputs": {
                                          "content": "@body('Crowdstrike_call_to_fetch_the_Machine_Id_with_hostname_for_Process')",
                                          "schema": {
                                            "properties": {
                                              "errors": {
                                                "type": "array"
                                              },
                                              "meta": {
                                                "properties": {
                                                  "pagination": {
                                                    "properties": {
                                                      "limit": {
                                                        "type": "integer"
                                                      },
                                                      "offset": {
                                                        "type": "integer"
                                                      },
                                                      "total": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "powered_by": {
                                                    "type": "string"
                                                  },
                                                  "query_time": {
                                                    "type": "number"
                                                  },
                                                  "trace_id": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "resources": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "Set_Machine_Domain_for_Process": {
                                        "runAfter": {
                                          "Set_Machine_Host_for_Process": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Machine Domain",
                                          "value": "@{replace(body('Parse_Illusive_Incident_Details')?['sourceHostname'],concat(variables('Machine Host'),'.'),'')}"
                                        }
                                      },
                                      "Set_Machine_Host_for_Process": {
                                        "runAfter": {
                                          "Set_hostname_for_Process": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Machine Host",
                                          "value": "@{first(variables('Machine FQDN'))}"
                                        }
                                      },
                                      "Set_hostname_for_Process": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Machine FQDN",
                                          "value": "@split(body('Parse_Illusive_Incident_Details')?['sourceHostname'],'.')"
                                        }
                                      }
                                    },
                                    "runAfter": {},
                                    "else": {
                                      "actions": {
                                        "Check_for_more_than_1_resource_for_IP_search": {
                                          "actions": {
                                            "Invalid_Crowdstrike_for_invaild_fqdn": {
                                              "runAfter": {
                                                "fetch_Crowdstrike_Response_with_IP_for_Process": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Invalid EDR resources",
                                                "value": "Invalid"
                                              }
                                            },
                                            "fetch_Crowdstrike_Response_with_IP_for_Process": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Crowdstrike Response",
                                                "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process')}"
                                              }
                                            }
                                          },
                                          "runAfter": {
                                            "Parse_Crowdstrike_response_for_local_IP_search": [
                                              "Succeeded"
                                            ]
                                          },
                                          "else": {
                                            "actions": {
                                              "Fetch_Crowdstrike_Response_with_1_resource": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "Crowdstrike Response",
                                                  "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process')}"
                                                }
                                              }
                                            }
                                          },
                                          "expression": {
                                            "and": [
                                              {
                                                "greater": [
                                                  "@length(body('Parse_Crowdstrike_response_for_local_IP_search')?['resources'])",
                                                  1
                                                ]
                                              }
                                            ]
                                          },
                                          "type": "If"
                                        },
                                        "Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process": {
                                          "runAfter": {},
                                          "type": "Http",
                                          "inputs": {
                                            "headers": {
                                              "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token_for_Process')?['access_token']}",
                                              "Content-Type": "application/json"
                                            },
                                            "method": "GET",
                                            "uri": "@{parameters('Crowdstrike Base URL')}/devices/queries/devices/v1?filter=local_ip:'@{body('Parse_Illusive_Incident_Details')?['sourceIp']}'"
                                          }
                                        },
                                        "Parse_Crowdstrike_response_for_local_IP_search": {
                                          "runAfter": {
                                            "Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process": [
                                              "Succeeded"
                                            ]
                                          },
                                          "type": "ParseJson",
                                          "inputs": {
                                            "content": "@body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process')",
                                            "schema": {
                                              "properties": {
                                                "errors": {
                                                  "type": "array"
                                                },
                                                "meta": {
                                                  "properties": {
                                                    "pagination": {
                                                      "properties": {
                                                        "limit": {
                                                          "type": "integer"
                                                        },
                                                        "offset": {
                                                          "type": "integer"
                                                        },
                                                        "total": {
                                                          "type": "integer"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "powered_by": {
                                                      "type": "string"
                                                    },
                                                    "query_time": {
                                                      "type": "number"
                                                    },
                                                    "trace_id": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "resources": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "expression": {
                                      "and": [
                                        {
                                          "contains": [
                                            "@body('Parse_Illusive_Incident_Details')?['sourceHostname']",
                                            "."
                                          ]
                                        }
                                      ]
                                    },
                                    "type": "If"
                                  }
                                },
                                "runAfter": {
                                  "Parse_Crowdstrike_Access_Token_for_Process": [
                                    "Succeeded"
                                  ]
                                },
                                "else": {
                                  "actions": {
                                    "Check_if_SourceIP_address_is_empty_for_Crowdstrike_Process": {
                                      "actions": {
                                        "Check_for_more_than_1_resources_with_source_ip": {
                                          "actions": {
                                            "Invalid_crowdstrike_response_with_source_ip": {
                                              "runAfter": {
                                                "fetch_Crowdstrike_response_with_source_ip_for_more_than_1_resource": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Invalid EDR resources",
                                                "value": "Invalid"
                                              }
                                            },
                                            "fetch_Crowdstrike_response_with_source_ip_for_more_than_1_resource": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Crowdstrike Response",
                                                "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process_with_no_sourceip')}"
                                              }
                                            }
                                          },
                                          "runAfter": {
                                            "Parse_Crowdstrike_response_for_Process_with_source_ip": [
                                              "Succeeded"
                                            ]
                                          },
                                          "else": {
                                            "actions": {
                                              "fetch_Crowdstrike_Response_with_IP_for_Process_with_no_sourceip": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "Crowdstrike Response",
                                                  "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process_with_no_sourceip')}"
                                                }
                                              }
                                            }
                                          },
                                          "expression": {
                                            "and": [
                                              {
                                                "greater": [
                                                  "@length(body('Parse_Crowdstrike_response_for_Process_with_source_ip')?['resources'])",
                                                  1
                                                ]
                                              }
                                            ]
                                          },
                                          "type": "If"
                                        },
                                        "Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process_with_no_sourceip": {
                                          "runAfter": {},
                                          "type": "Http",
                                          "inputs": {
                                            "headers": {
                                              "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token_for_Process')?['access_token']}",
                                              "Content-Type": "application/json"
                                            },
                                            "method": "GET",
                                            "uri": "@{parameters('Crowdstrike Base URL')}/devices/queries/devices/v1?filter=local_ip:'@{body('Parse_Illusive_Incident_Details')?['sourceIp']}'"
                                          }
                                        },
                                        "Parse_Crowdstrike_response_for_Process_with_source_ip": {
                                          "runAfter": {
                                            "Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process_with_no_sourceip": [
                                              "Succeeded"
                                            ]
                                          },
                                          "type": "ParseJson",
                                          "inputs": {
                                            "content": "@body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_for_Process_with_no_sourceip')",
                                            "schema": {
                                              "properties": {
                                                "errors": {
                                                  "type": "array"
                                                },
                                                "meta": {
                                                  "properties": {
                                                    "pagination": {
                                                      "properties": {
                                                        "limit": {
                                                          "type": "integer"
                                                        },
                                                        "offset": {
                                                          "type": "integer"
                                                        },
                                                        "total": {
                                                          "type": "integer"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "powered_by": {
                                                      "type": "string"
                                                    },
                                                    "query_time": {
                                                      "type": "number"
                                                    },
                                                    "trace_id": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "resources": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        }
                                      },
                                      "runAfter": {},
                                      "else": {
                                        "actions": {
                                          "Failed_to_isolate_Process_with_Crowdstrike": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Message",
                                              "value": "Failed to Isolate Process for Illusive Incident id @{variables('Illusive Incident Id')} using Crowdstrike (no SourceIP)"
                                            }
                                          },
                                          "Terminate_Crowdstrike_Process_flow": {
                                            "runAfter": {
                                              "Failed_to_isolate_Process_with_Crowdstrike": [
                                                "Succeeded"
                                              ]
                                            },
                                            "type": "Terminate",
                                            "inputs": {
                                              "runStatus": "Succeeded"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "not": {
                                              "equals": [
                                                "@body('Parse_Illusive_Incident_Details')?['sourceIp']",
                                                "@null"
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  }
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "not": {
                                        "equals": [
                                          "@body('Parse_Illusive_Incident_Details')?['sourceHostname']",
                                          "@null"
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "type": "If"
                              },
                              "Parse_Crowdstrike_Access_Token_for_Process": {
                                "runAfter": {
                                  "Authorize_Crowdstrike_for_process": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "ParseJson",
                                "inputs": {
                                  "content": "@body('Authorize_Crowdstrike_for_process')",
                                  "schema": {
                                    "properties": {
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_in": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "Parse_Crowdstrike_Machine_with_hostname_for_Process": {
                                "runAfter": {
                                  "Check_if_SourceHostname_is_empty_for_Crowdstrike_process": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "ParseJson",
                                "inputs": {
                                  "content": "@variables('Crowdstrike Response')",
                                  "schema": {
                                    "properties": {
                                      "errors": {
                                        "type": "array"
                                      },
                                      "meta": {
                                        "properties": {
                                          "pagination": {
                                            "properties": {
                                              "limit": {
                                                "type": "integer"
                                              },
                                              "offset": {
                                                "type": "integer"
                                              },
                                              "total": {
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "powered_by": {
                                            "type": "string"
                                          },
                                          "query_time": {
                                            "type": "number"
                                          },
                                          "trace_id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "resources": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "Set_Crowdstrike_resource": {
                                "runAfter": {
                                  "Parse_Crowdstrike_Machine_with_hostname_for_Process": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Crowdstrike resource",
                                  "value": "@body('Parse_Crowdstrike_Machine_with_hostname_for_Process')?['resources']"
                                }
                              }
                            },
                            "runAfter": {},
                            "else": {
                              "actions": {
                                "Process_isolation_has_no_Selected_EDR": {
                                  "runAfter": {},
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "Message",
                                    "value": "Process isolation has no Selected EDR"
                                  }
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "equals": [
                                    "@parameters('EDRConfigured')",
                                    "Crowdstrike"
                                  ]
                                }
                              ]
                            },
                            "type": "If"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@parameters('EDRConfigured')",
                              "MDE"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "runAfter": {
                    "Parse_Triggering_Process_Information": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Check_If_EDR_Configured_is_Crowdstrike": {
                        "actions": {
                          "Authorize_Crowdstrike": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                              "body": "client_id=@{parameters('Crowdstrike Client Id')}&client_secret=@{parameters('Crowdstrike Client Secret')}",
                              "headers": {
                                "content-type": "application/x-www-form-urlencoded"
                              },
                              "method": "POST",
                              "uri": "@{parameters('Crowdstrike Base URL')}/oauth2/token"
                            }
                          },
                          "Check_if_SourceHostname_is_empty_for_Crowdstrike_host": {
                            "actions": {
                              "Check_if_Host_contains_FQDN_name": {
                                "actions": {
                                  "Check_for_resource_is_more_than_1_for_Host": {
                                    "actions": {
                                      "Check_Local_IP_response_has_more_than_1_resources_for_Host": {
                                        "actions": {
                                          "Invalid_resources_for_Host": {
                                            "runAfter": {
                                              "Set_Crowdstrike_response_from_local_ip_from_more_than_1_resources_for_Host": [
                                                "Succeeded"
                                              ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Invalid EDR resources",
                                              "value": "Invalid"
                                            }
                                          },
                                          "Set_Crowdstrike_response_from_local_ip_from_more_than_1_resources_for_Host": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Crowdstrike Response",
                                              "value": "@{body('Get_machine_id_using_localip_for_Host')}"
                                            }
                                          }
                                        },
                                        "runAfter": {
                                          "Parse_local_IP_response_for_Host": [
                                            "Succeeded"
                                          ]
                                        },
                                        "else": {
                                          "actions": {
                                            "Set_Crowdstike_response_from_local_ip_for_Host": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Crowdstrike Response",
                                                "value": "@{body('Get_machine_id_using_localip_for_Host')}"
                                              }
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "greater": [
                                                "@length(body('Parse_local_IP_response_for_Host')?['resources'])",
                                                1
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      },
                                      "Get_machine_id_using_localip_for_Host": {
                                        "runAfter": {},
                                        "type": "Http",
                                        "inputs": {
                                          "headers": {
                                            "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token')?['access_token']}",
                                            "Content-Type": "application/json"
                                          },
                                          "method": "GET",
                                          "uri": "@{parameters('Crowdstrike Base URL')}/devices/queries/devices/v1?filter=local_ip:'@{body('Parse_Illusive_Incident_Details')?['sourceIp']}'"
                                        }
                                      },
                                      "Parse_local_IP_response_for_Host": {
                                        "runAfter": {
                                          "Get_machine_id_using_localip_for_Host": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "ParseJson",
                                        "inputs": {
                                          "content": "@body('Get_machine_id_using_localip_for_Host')",
                                          "schema": {
                                            "properties": {
                                              "errors": {
                                                "type": "array"
                                              },
                                              "meta": {
                                                "properties": {
                                                  "pagination": {
                                                    "properties": {
                                                      "limit": {
                                                        "type": "integer"
                                                      },
                                                      "offset": {
                                                        "type": "integer"
                                                      },
                                                      "total": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "powered_by": {
                                                    "type": "string"
                                                  },
                                                  "query_time": {
                                                    "type": "number"
                                                  },
                                                  "trace_id": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "resources": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        }
                                      }
                                    },
                                    "runAfter": {
                                      "Parse_fqdn_response_for_host": [
                                        "Succeeded"
                                      ]
                                    },
                                    "else": {
                                      "actions": {
                                        "Fetch_Crowdstrike_Response_with_hostname": {
                                          "runAfter": {},
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Crowdstrike Response",
                                            "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_hostname')}"
                                          }
                                        }
                                      }
                                    },
                                    "expression": {
                                      "or": [
                                        {
                                          "greater": [
                                            "@length(body('Parse_fqdn_response_for_host')?['resources'])",
                                            1
                                          ]
                                        },
                                        {
                                          "equals": [
                                            "@length(body('Parse_fqdn_response_for_host')?['resources'])",
                                            0
                                          ]
                                        }
                                      ]
                                    },
                                    "type": "If"
                                  },
                                  "Crowdstrike_call_to_fetch_the_Machine_Id_with_hostname": {
                                    "runAfter": {
                                      "Set_Machine_domain": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                      "headers": {
                                        "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token')?['access_token']}",
                                        "Content-Type": "application/json"
                                      },
                                      "method": "GET",
                                      "uri": "@{parameters('Crowdstrike Base URL')}/devices/queries/devices/v1?filter=machine_domain:'@{variables('Machine Domain')}'&host:'@{variables('Machine Host')}'"
                                    }
                                  },
                                  "Parse_fqdn_response_for_host": {
                                    "runAfter": {
                                      "Crowdstrike_call_to_fetch_the_Machine_Id_with_hostname": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                      "content": "@body('Crowdstrike_call_to_fetch_the_Machine_Id_with_hostname')",
                                      "schema": {
                                        "properties": {
                                          "errors": {
                                            "type": "array"
                                          },
                                          "meta": {
                                            "properties": {
                                              "pagination": {
                                                "properties": {
                                                  "limit": {
                                                    "type": "integer"
                                                  },
                                                  "offset": {
                                                    "type": "integer"
                                                  },
                                                  "total": {
                                                    "type": "integer"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "powered_by": {
                                                "type": "string"
                                              },
                                              "query_time": {
                                                "type": "number"
                                              },
                                              "trace_id": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "resources": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "Set_Machine_FQDN_for_Host": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Machine FQDN",
                                      "value": "@split(body('Parse_Illusive_Incident_Details')?['sourceHostname'],'.')"
                                    }
                                  },
                                  "Set_Machine_Host": {
                                    "runAfter": {
                                      "Set_Machine_FQDN_for_Host": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Machine Host",
                                      "value": "@{first(variables('Machine FQDN'))}"
                                    }
                                  },
                                  "Set_Machine_domain": {
                                    "runAfter": {
                                      "Set_Machine_Host": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Machine Domain",
                                      "value": "@{replace(body('Parse_Illusive_Incident_Details')?['sourceHostname'],concat(variables('Machine Host'),'.'),'')}"
                                    }
                                  }
                                },
                                "runAfter": {},
                                "else": {
                                  "actions": {
                                    "Check_for_more_than_1_resource_in_Crowdstrike_Response_with_IP_for_Host": {
                                      "actions": {
                                        "Fetch_Crowdstrike_Response_for_more_than_1_resource_": {
                                          "runAfter": {},
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Crowdstrike Response",
                                            "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP')}"
                                          }
                                        },
                                        "Invalid_Crowdstrike_Response_for_host": {
                                          "runAfter": {
                                            "Fetch_Crowdstrike_Response_for_more_than_1_resource_": [
                                              "Succeeded"
                                            ]
                                          },
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Invalid EDR resources",
                                            "value": "Invalid"
                                          }
                                        }
                                      },
                                      "runAfter": {
                                        "Parse_Crowdstrike_Response_with_IP_for_Host": [
                                          "Succeeded"
                                        ]
                                      },
                                      "else": {
                                        "actions": {
                                          "fetch_Crowdstrike_Response_with_IP": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Crowdstrike Response",
                                              "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP')}"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@length(body('Parse_Crowdstrike_Response_with_IP_for_Host')?['resources'])",
                                              1
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Crowdstrike_call_to_fetch_the_Machine_Id_with_IP": {
                                      "runAfter": {},
                                      "type": "Http",
                                      "inputs": {
                                        "headers": {
                                          "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token')?['access_token']}",
                                          "Content-Type": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "@{parameters('Crowdstrike Base URL')}/devices/queries/devices/v1?filter=local_ip:'@{body('Parse_Illusive_Incident_Details')?['sourceIp']}'"
                                      }
                                    },
                                    "Parse_Crowdstrike_Response_with_IP_for_Host": {
                                      "runAfter": {
                                        "Crowdstrike_call_to_fetch_the_Machine_Id_with_IP": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "ParseJson",
                                      "inputs": {
                                        "content": "@body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP')",
                                        "schema": {
                                          "properties": {
                                            "errors": {
                                              "type": "array"
                                            },
                                            "meta": {
                                              "properties": {
                                                "pagination": {
                                                  "properties": {
                                                    "limit": {
                                                      "type": "integer"
                                                    },
                                                    "offset": {
                                                      "type": "integer"
                                                    },
                                                    "total": {
                                                      "type": "integer"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "powered_by": {
                                                  "type": "string"
                                                },
                                                "query_time": {
                                                  "type": "number"
                                                },
                                                "trace_id": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "resources": {
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    }
                                  }
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "contains": [
                                        "@body('Parse_Illusive_Incident_Details')?['sourceHostname']",
                                        "."
                                      ]
                                    }
                                  ]
                                },
                                "type": "If"
                              }
                            },
                            "runAfter": {
                              "Parse_Crowdstrike_Access_Token": [
                                "Succeeded"
                              ]
                            },
                            "else": {
                              "actions": {
                                "Check_if_SourceIP_address__is_empty_for_Host_with_Crowdstrike": {
                                  "actions": {
                                    "Check_more_than_1_resources_for_Crowdstrike_Response_for_Host": {
                                      "actions": {
                                        "Crowdstrike_Invalid_response": {
                                          "runAfter": {
                                            "fetch_Crowdstrike_Response_for_more_than_1_resource_with_Host": [
                                              "Succeeded"
                                            ]
                                          },
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Invalid EDR resources",
                                            "value": "Invalid"
                                          }
                                        },
                                        "fetch_Crowdstrike_Response_for_more_than_1_resource_with_Host": {
                                          "runAfter": {},
                                          "type": "SetVariable",
                                          "inputs": {
                                            "name": "Crowdstrike Response",
                                            "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_with_no_sourceip')}"
                                          }
                                        }
                                      },
                                      "runAfter": {
                                        "Parse_Crowstrike_Response_with_ip_": [
                                          "Succeeded"
                                        ]
                                      },
                                      "else": {
                                        "actions": {
                                          "fetch_Crowdstrike_Response_with_IP_with_no_sourceip": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Crowdstrike Response",
                                              "value": "@{body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_with_no_sourceip')}"
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@length(body('Parse_Crowstrike_Response_with_ip_')?['resources'])",
                                              1
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    },
                                    "Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_with_no_sourceip": {
                                      "runAfter": {},
                                      "type": "Http",
                                      "inputs": {
                                        "headers": {
                                          "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token')?['access_token']}",
                                          "Content-Type": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "@{parameters('Crowdstrike Base URL')}/devices/queries/devices/v1?filter=local_ip:'@{body('Parse_Illusive_Incident_Details')?['sourceIp']}'"
                                      }
                                    },
                                    "Parse_Crowstrike_Response_with_ip_": {
                                      "runAfter": {
                                        "Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_with_no_sourceip": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "ParseJson",
                                      "inputs": {
                                        "content": "@body('Crowdstrike_call_to_fetch_the_Machine_Id_with_IP_with_no_sourceip')",
                                        "schema": {
                                          "properties": {
                                            "errors": {
                                              "type": "array"
                                            },
                                            "meta": {
                                              "properties": {
                                                "pagination": {
                                                  "properties": {
                                                    "limit": {
                                                      "type": "integer"
                                                    },
                                                    "offset": {
                                                      "type": "integer"
                                                    },
                                                    "total": {
                                                      "type": "integer"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "powered_by": {
                                                  "type": "string"
                                                },
                                                "query_time": {
                                                  "type": "number"
                                                },
                                                "trace_id": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "resources": {
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    }
                                  },
                                  "runAfter": {},
                                  "else": {
                                    "actions": {
                                      "Failed_to_Isolate_Host_for_Crowdstrike": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Message",
                                          "value": "Failed to Isolate Host for Illusive Incident id @{variables('Illusive Incident Id')} using Crowdstrike (no SourceIP)"
                                        }
                                      },
                                      "Terminate_Crowdstrike_Host_isolation_flow": {
                                        "runAfter": {
                                          "Failed_to_Isolate_Host_for_Crowdstrike": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "Terminate",
                                        "inputs": {
                                          "runStatus": "Succeeded"
                                        }
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "not": {
                                          "equals": [
                                            "@body('Parse_Illusive_Incident_Details')?['sourceIp']",
                                            "@null"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "type": "If"
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "not": {
                                    "equals": [
                                      "@body('Parse_Illusive_Incident_Details')?['sourceHostname']",
                                      "@null"
                                    ]
                                  }
                                }
                              ]
                            },
                            "type": "If"
                          },
                          "If_host_returns_valid_resource": {
                            "actions": {
                              "Isolate_the_host_using_Crowdstrike": {
                                "runAfter": {},
                                "type": "Http",
                                "inputs": {
                                  "body": {
                                    "ids": "@body('Parse_Crowdstrike_Machine_with_hostname')?['resources']"
                                  },
                                  "headers": {
                                    "Authorization": "Bearer @{body('Parse_Crowdstrike_Access_Token')?['access_token']}",
                                    "Content-Type": "application/json"
                                  },
                                  "method": "POST",
                                  "uri": "@{parameters('Crowdstrike Base URL')}/devices/entities/devices-actions/v2?action_name=contain"
                                }
                              },
                              "Set_Host_Isolation_Succeeded_for_Crowdstrike": {
                                "runAfter": {
                                  "Isolate_the_host_using_Crowdstrike": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Isolation Succeeded",
                                  "value": true
                                }
                              }
                            },
                            "runAfter": {
                              "Parse_Crowdstrike_Machine_with_hostname": [
                                "Succeeded"
                              ]
                            },
                            "else": {
                              "actions": {
                                "Check_for_Invalid_resources_for_Host": {
                                  "actions": {
                                    "Invalid_Resources_hence_the_Host_Isolation_is_Ignored_for_Host": {
                                      "runAfter": {},
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Message",
                                        "value": "Invalid Resources hence the Host Isolation is Ignored"
                                      }
                                    }
                                  },
                                  "runAfter": {},
                                  "else": {
                                    "actions": {
                                      "No_Resource_available_for_Host_isolation_of_Crowdstrike": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "Message",
                                          "value": "No Resource available for Isolation using Crowdstrike"
                                        }
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "equals": [
                                          "@variables('Invalid EDR resources')",
                                          "Invalid"
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "greater": [
                                    "@length(body('Parse_Crowdstrike_Machine_with_hostname')?['resources'])",
                                    0
                                  ]
                                },
                                {
                                  "not": {
                                    "equals": [
                                      "@variables('Invalid EDR resources')",
                                      "Invalid"
                                    ]
                                  }
                                }
                              ]
                            },
                            "type": "If"
                          },
                          "Parse_Crowdstrike_Access_Token": {
                            "runAfter": {
                              "Authorize_Crowdstrike": [
                                "Succeeded"
                              ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                              "content": "@body('Authorize_Crowdstrike')",
                              "schema": {
                                "properties": {
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_in": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "Parse_Crowdstrike_Machine_with_hostname": {
                            "runAfter": {
                              "Check_if_SourceHostname_is_empty_for_Crowdstrike_host": [
                                "Succeeded"
                              ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                              "content": "@variables('Crowdstrike Response')",
                              "schema": {
                                "properties": {
                                  "errors": {
                                    "type": "array"
                                  },
                                  "meta": {
                                    "properties": {
                                      "pagination": {
                                        "properties": {
                                          "limit": {
                                            "type": "integer"
                                          },
                                          "offset": {
                                            "type": "integer"
                                          },
                                          "total": {
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "powered_by": {
                                        "type": "string"
                                      },
                                      "query_time": {
                                        "type": "number"
                                      },
                                      "trace_id": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "resources": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          }
                        },
                        "runAfter": {},
                        "else": {
                          "actions": {
                            "Check_If_EDR_Configured_is_MDE": {
                              "actions": {
                                "Authorize_MDE": {
                                  "runAfter": {},
                                  "type": "Http",
                                  "inputs": {
                                    "body": "grant_type=client_credentials&client_id=@{parameters('Azure Client Id')}&client_secret=@{parameters('Azure Client Secret')}&scope=https%3A%2F%2Fapi.securitycenter.microsoft.com%2F.default",
                                    "headers": {
                                      "Content-Type": "application/x-www-form-urlencoded"
                                    },
                                    "method": "POST",
                                    "uri": "https://login.microsoftonline.com/@{parameters('Azure Tenant Id')}/oauth2/v2.0/token"
                                  }
                                },
                                "Check_if_SourceHostname_is_empty_for_MDE_host": {
                                  "actions": {
                                    "Check_if_Host_contains_FQDN_name_for_MDE": {
                                      "actions": {
                                        "Check_for_more_than_1_resources_for_MDE_with_host": {
                                          "actions": {
                                            "Check_for_more_than_1_resource_with_host_isolation_with_IP": {
                                              "actions": {
                                                "Invalid_case_for_MDE_host_isolation_": {
                                                  "runAfter": {
                                                    "fetch_The_Machine_Id_with_host_for_more_than_1_resource": [
                                                      "Succeeded"
                                                    ]
                                                  },
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "Invalid EDR resources",
                                                    "value": "Invalid"
                                                  }
                                                },
                                                "fetch_The_Machine_Id_with_host_for_more_than_1_resource": {
                                                  "runAfter": {},
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "MDE Response",
                                                    "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_more_resources_in_Host')}"
                                                  }
                                                }
                                              },
                                              "runAfter": {
                                                "Parse_MDE_response_for_resources_with_IP": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "else": {
                                                "actions": {
                                                  "Fetch_MDE_response_for_IP_": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                      "name": "MDE Response",
                                                      "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_more_resources_in_Host')}"
                                                    }
                                                  }
                                                }
                                              },
                                              "expression": {
                                                "and": [
                                                  {
                                                    "greater": [
                                                      "@length(body('Parse_MDE_response_for_resources_with_IP')?['value'])",
                                                      1
                                                    ]
                                                  }
                                                ]
                                              },
                                              "type": "If"
                                            },
                                            "MDE_call_to_fetch_The_Machine_Id_with_IP_for_more_resources_in_Host": {
                                              "runAfter": {},
                                              "type": "Http",
                                              "inputs": {
                                                "headers": {
                                                  "Authorization": "Bearer @{body('Parse_MDE_Access_Token')?['access_token']}",
                                                  "content-type": "application/json"
                                                },
                                                "method": "GET",
                                                "uri": "https://api.securitycenter.microsoft.com/api/machines/findbyip(ip='@{body('Parse_Illusive_Incident_Details')?['sourceIp']}',timestamp=@{body('Parse_Illusive_Incident_Details')?['incidentTimeUTC']})"
                                              }
                                            },
                                            "Parse_MDE_response_for_resources_with_IP": {
                                              "runAfter": {
                                                "MDE_call_to_fetch_The_Machine_Id_with_IP_for_more_resources_in_Host": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "type": "ParseJson",
                                              "inputs": {
                                                "content": "@body('MDE_call_to_fetch_The_Machine_Id_with_IP_for_more_resources_in_Host')",
                                                "schema": {
                                                  "properties": {
                                                    "@@odata.context": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "items": {
                                                        "properties": {
                                                          "computerDnsName": {
                                                            "type": "string"
                                                          },
                                                          "exposureLevel": {
                                                            "type": "string"
                                                          },
                                                          "firstSeen": {
                                                            "type": "string"
                                                          },
                                                          "healthStatus": {
                                                            "type": "string"
                                                          },
                                                          "id": {
                                                            "type": "string"
                                                          },
                                                          "isAadJoined": {
                                                            "type": "boolean"
                                                          },
                                                          "lastExternalIpAddress": {
                                                            "type": "string"
                                                          },
                                                          "lastIpAddress": {
                                                            "type": "string"
                                                          },
                                                          "lastSeen": {
                                                            "type": "string"
                                                          },
                                                          "machineTags": {
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "osBuild": {
                                                            "type": "integer"
                                                          },
                                                          "osPlatform": {
                                                            "type": "string"
                                                          },
                                                          "osProcessor": {
                                                            "type": "string"
                                                          },
                                                          "rbacGroupId": {
                                                            "type": "integer"
                                                          },
                                                          "riskScore": {
                                                            "type": "string"
                                                          },
                                                          "version": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "computerDnsName",
                                                          "firstSeen",
                                                          "lastSeen",
                                                          "osPlatform",
                                                          "version",
                                                          "osProcessor",
                                                          "lastIpAddress",
                                                          "lastExternalIpAddress",
                                                          "osBuild",
                                                          "healthStatus",
                                                          "rbacGroupId",
                                                          "riskScore",
                                                          "exposureLevel",
                                                          "isAadJoined",
                                                          "machineTags"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            }
                                          },
                                          "runAfter": {
                                            "Parse_MDE_call_to_fetch_The_Machine_Id_with_host": [
                                              "Succeeded"
                                            ]
                                          },
                                          "else": {
                                            "actions": {
                                              "fetch_The_Machine_Id_with_host": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "MDE Response",
                                                  "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_host')}"
                                                }
                                              }
                                            }
                                          },
                                          "expression": {
                                            "or": [
                                              {
                                                "greater": [
                                                  "@length(body('Parse_MDE_call_to_fetch_The_Machine_Id_with_host')?['value'])",
                                                  1
                                                ]
                                              },
                                              {
                                                "equals": [
                                                  "@length(body('Parse_MDE_call_to_fetch_The_Machine_Id_with_host')?['value'])",
                                                  0
                                                ]
                                              }
                                            ]
                                          },
                                          "type": "If"
                                        },
                                        "MDE_call_to_fetch_The_Machine_Id_with_host": {
                                          "runAfter": {},
                                          "type": "Http",
                                          "inputs": {
                                            "headers": {
                                              "Authorization": "Bearer @{body('Parse_MDE_Access_Token')?['access_token']}",
                                              "content-type": "application/json"
                                            },
                                            "method": "GET",
                                            "uri": "https://api.securitycenter.microsoft.com/api/machines/?$filter=computerDnsName eq '@{body('Parse_Illusive_Incident_Details')?['sourceHostname']}'"
                                          }
                                        },
                                        "Parse_MDE_call_to_fetch_The_Machine_Id_with_host": {
                                          "runAfter": {
                                            "MDE_call_to_fetch_The_Machine_Id_with_host": [
                                              "Succeeded"
                                            ]
                                          },
                                          "type": "ParseJson",
                                          "inputs": {
                                            "content": "@body('MDE_call_to_fetch_The_Machine_Id_with_host')",
                                            "schema": {
                                              "properties": {
                                                "@@odata.context": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "items": {
                                                    "properties": {
                                                      "computerDnsName": {
                                                        "type": "string"
                                                      },
                                                      "exposureLevel": {
                                                        "type": "string"
                                                      },
                                                      "firstSeen": {
                                                        "type": "string"
                                                      },
                                                      "healthStatus": {
                                                        "type": "string"
                                                      },
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "isAadJoined": {
                                                        "type": "boolean"
                                                      },
                                                      "lastExternalIpAddress": {
                                                        "type": "string"
                                                      },
                                                      "lastIpAddress": {
                                                        "type": "string"
                                                      },
                                                      "lastSeen": {
                                                        "type": "string"
                                                      },
                                                      "machineTags": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      },
                                                      "osBuild": {
                                                        "type": "integer"
                                                      },
                                                      "osPlatform": {
                                                        "type": "string"
                                                      },
                                                      "osProcessor": {
                                                        "type": "string"
                                                      },
                                                      "rbacGroupId": {
                                                        "type": "integer"
                                                      },
                                                      "riskScore": {
                                                        "type": "string"
                                                      },
                                                      "version": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id",
                                                      "computerDnsName",
                                                      "firstSeen",
                                                      "lastSeen",
                                                      "osPlatform",
                                                      "version",
                                                      "osProcessor",
                                                      "lastIpAddress",
                                                      "lastExternalIpAddress",
                                                      "osBuild",
                                                      "healthStatus",
                                                      "rbacGroupId",
                                                      "riskScore",
                                                      "exposureLevel",
                                                      "isAadJoined",
                                                      "machineTags"
                                                    ],
                                                    "type": "object"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        }
                                      },
                                      "runAfter": {},
                                      "else": {
                                        "actions": {
                                          "Check_for_more_than_1_resources_for_MDE_with_ip": {
                                            "actions": {
                                              "Invalid_case_for_MDE_with_host_for_IP": {
                                                "runAfter": {
                                                  "fetch_The_Machine_Id_with_ip_for_host_with_more_than_1_resource": [
                                                    "Succeeded"
                                                  ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "Invalid EDR resources",
                                                  "value": "Invalid"
                                                }
                                              },
                                              "fetch_The_Machine_Id_with_ip_for_host_with_more_than_1_resource": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "MDE Response",
                                                  "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP')}"
                                                }
                                              }
                                            },
                                            "runAfter": {
                                              "Parse_MDE_call_to_fetch_The_Machine_Id_with_IP": [
                                                "Succeeded"
                                              ]
                                            },
                                            "else": {
                                              "actions": {
                                                "fetch_The_Machine_Id_with_ip": {
                                                  "runAfter": {},
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "MDE Response",
                                                    "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP')}"
                                                  }
                                                }
                                              }
                                            },
                                            "expression": {
                                              "and": [
                                                {
                                                  "greater": [
                                                    "@length(body('Parse_MDE_call_to_fetch_The_Machine_Id_with_IP')?['value'])",
                                                    1
                                                  ]
                                                }
                                              ]
                                            },
                                            "type": "If"
                                          },
                                          "MDE_call_to_fetch_The_Machine_Id_with_IP": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                              "headers": {
                                                "Authorization": "Bearer @{body('Parse_MDE_Access_Token')?['access_token']}",
                                                "content-type": "application/json"
                                              },
                                              "method": "GET",
                                              "uri": "https://api.securitycenter.microsoft.com/api/machines/findbyip(ip='@{body('Parse_Illusive_Incident_Details')?['sourceIp']}',timestamp=@{body('Parse_Illusive_Incident_Details')?['incidentTimeUTC']})"
                                            }
                                          },
                                          "Parse_MDE_call_to_fetch_The_Machine_Id_with_IP": {
                                            "runAfter": {
                                              "MDE_call_to_fetch_The_Machine_Id_with_IP": [
                                                "Succeeded"
                                              ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                              "content": "@body('MDE_call_to_fetch_The_Machine_Id_with_IP')",
                                              "schema": {
                                                "properties": {
                                                  "@@odata.context": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "items": {
                                                      "properties": {
                                                        "computerDnsName": {
                                                          "type": "string"
                                                        },
                                                        "exposureLevel": {
                                                          "type": "string"
                                                        },
                                                        "firstSeen": {
                                                          "type": "string"
                                                        },
                                                        "healthStatus": {
                                                          "type": "string"
                                                        },
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "isAadJoined": {
                                                          "type": "boolean"
                                                        },
                                                        "lastExternalIpAddress": {
                                                          "type": "string"
                                                        },
                                                        "lastIpAddress": {
                                                          "type": "string"
                                                        },
                                                        "lastSeen": {
                                                          "type": "string"
                                                        },
                                                        "machineTags": {
                                                          "items": {
                                                            "type": "string"
                                                          },
                                                          "type": "array"
                                                        },
                                                        "osBuild": {
                                                          "type": "integer"
                                                        },
                                                        "osPlatform": {
                                                          "type": "string"
                                                        },
                                                        "osProcessor": {
                                                          "type": "string"
                                                        },
                                                        "rbacGroupId": {
                                                          "type": "integer"
                                                        },
                                                        "riskScore": {
                                                          "type": "string"
                                                        },
                                                        "version": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "computerDnsName",
                                                        "firstSeen",
                                                        "lastSeen",
                                                        "osPlatform",
                                                        "version",
                                                        "osProcessor",
                                                        "lastIpAddress",
                                                        "lastExternalIpAddress",
                                                        "osBuild",
                                                        "healthStatus",
                                                        "rbacGroupId",
                                                        "riskScore",
                                                        "exposureLevel",
                                                        "isAadJoined",
                                                        "machineTags"
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "expression": {
                                        "and": [
                                          {
                                            "contains": [
                                              "@body('Parse_Illusive_Incident_Details')?['sourceHostname']",
                                              "."
                                            ]
                                          }
                                        ]
                                      },
                                      "type": "If"
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_MDE_Access_Token": [
                                      "Succeeded"
                                    ]
                                  },
                                  "else": {
                                    "actions": {
                                      "Check_for_empty_values_for_SourceIP_and_IncidentTime_for_Host_with_MDE": {
                                        "actions": {
                                          "Check_for_more_than_1_resource_for_MDE_with_no_Host": {
                                            "actions": {
                                              "Invalid_Case_for_MDE_with_no_Host": {
                                                "runAfter": {
                                                  "fetch_The_Machine_Id_with_ip_with_sourceIP_with_more_than_1_resource": [
                                                    "Succeeded"
                                                  ]
                                                },
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "Invalid EDR resources",
                                                  "value": "Invalid"
                                                }
                                              },
                                              "fetch_The_Machine_Id_with_ip_with_sourceIP_with_more_than_1_resource": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                  "name": "MDE Response",
                                                  "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_with_sourceIP')}"
                                                }
                                              }
                                            },
                                            "runAfter": {
                                              "Parse_MDE_call_to_fetch_The_Machine_Id_with_IP_with_sourceIP": [
                                                "Succeeded"
                                              ]
                                            },
                                            "else": {
                                              "actions": {
                                                "fetch_The_Machine_Id_with_ip_with_sourceIP": {
                                                  "runAfter": {},
                                                  "type": "SetVariable",
                                                  "inputs": {
                                                    "name": "MDE Response",
                                                    "value": "@{body('MDE_call_to_fetch_The_Machine_Id_with_IP_with_sourceIP')}"
                                                  }
                                                }
                                              }
                                            },
                                            "expression": {
                                              "and": [
                                                {
                                                  "greater": [
                                                    "@length(body('Parse_MDE_call_to_fetch_The_Machine_Id_with_IP_with_sourceIP')?['value'])",
                                                    1
                                                  ]
                                                }
                                              ]
                                            },
                                            "type": "If"
                                          },
                                          "MDE_call_to_fetch_The_Machine_Id_with_IP_with_sourceIP": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                              "headers": {
                                                "Authorization": "Bearer @{body('Parse_MDE_Access_Token')?['access_token']}",
                                                "content-type": "application/json"
                                              },
                                              "method": "GET",
                                              "uri": "https://api.securitycenter.microsoft.com/api/machines/findbyip(ip='@{body('Parse_Illusive_Incident_Details')?['sourceIp']}',timestamp=@{body('Parse_Illusive_Incident_Details')?['incidentTimeUTC']})"
                                            }
                                          },
                                          "Parse_MDE_call_to_fetch_The_Machine_Id_with_IP_with_sourceIP": {
                                            "runAfter": {
                                              "MDE_call_to_fetch_The_Machine_Id_with_IP_with_sourceIP": [
                                                "Succeeded"
                                              ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                              "content": "@body('MDE_call_to_fetch_The_Machine_Id_with_IP_with_sourceIP')",
                                              "schema": {
                                                "properties": {
                                                  "@@odata.context": {
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "items": {
                                                      "properties": {
                                                        "computerDnsName": {
                                                          "type": "string"
                                                        },
                                                        "exposureLevel": {
                                                          "type": "string"
                                                        },
                                                        "firstSeen": {
                                                          "type": "string"
                                                        },
                                                        "healthStatus": {
                                                          "type": "string"
                                                        },
                                                        "id": {
                                                          "type": "string"
                                                        },
                                                        "isAadJoined": {
                                                          "type": "boolean"
                                                        },
                                                        "lastExternalIpAddress": {
                                                          "type": "string"
                                                        },
                                                        "lastIpAddress": {
                                                          "type": "string"
                                                        },
                                                        "lastSeen": {
                                                          "type": "string"
                                                        },
                                                        "machineTags": {
                                                          "items": {
                                                            "type": "string"
                                                          },
                                                          "type": "array"
                                                        },
                                                        "osBuild": {
                                                          "type": "integer"
                                                        },
                                                        "osPlatform": {
                                                          "type": "string"
                                                        },
                                                        "osProcessor": {
                                                          "type": "string"
                                                        },
                                                        "rbacGroupId": {
                                                          "type": "integer"
                                                        },
                                                        "riskScore": {
                                                          "type": "string"
                                                        },
                                                        "version": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "computerDnsName",
                                                        "firstSeen",
                                                        "lastSeen",
                                                        "osPlatform",
                                                        "version",
                                                        "osProcessor",
                                                        "lastIpAddress",
                                                        "lastExternalIpAddress",
                                                        "osBuild",
                                                        "healthStatus",
                                                        "rbacGroupId",
                                                        "riskScore",
                                                        "exposureLevel",
                                                        "isAadJoined",
                                                        "machineTags"
                                                      ],
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          }
                                        },
                                        "runAfter": {},
                                        "else": {
                                          "actions": {
                                            "Failed_to_isolate_Host_for_MDE": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Message",
                                                "value": "Failed to Isolate Host for Illusive Incident id @{variables('Illusive Incident Id')} using MDE (no SourceIP and Incident Time)"
                                              }
                                            },
                                            "Terminate_the_Host_Isolation_flow_for_MDE": {
                                              "runAfter": {
                                                "Failed_to_isolate_Host_for_MDE": [
                                                  "Succeeded"
                                                ]
                                              },
                                              "type": "Terminate",
                                              "inputs": {
                                                "runStatus": "Succeeded"
                                              }
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "not": {
                                                "equals": [
                                                  "@body('Parse_Illusive_Incident_Details')?['sourceIp']",
                                                  "@null"
                                                ]
                                              }
                                            },
                                            {
                                              "not": {
                                                "equals": [
                                                  "@body('Parse_Illusive_Incident_Details')?['incidentTimeUTC']",
                                                  "@null"
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "not": {
                                          "equals": [
                                            "@body('Parse_Illusive_Incident_Details')?['sourceHostname']",
                                            "@null"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "Check_if_host_is_available": {
                                  "actions": {
                                    "For_each_resources_for_MDE": {
                                      "foreach": "@body('Parse_Machine_Id_of_Host')?['value']",
                                      "actions": {
                                        "Isolate_Host_using_MDE": {
                                          "runAfter": {},
                                          "type": "Http",
                                          "inputs": {
                                            "body": {
                                              "Comment": "Isolate machine due to alert @{variables('Illusive Incident Id')}",
                                              "IsolationType": "Full"
                                            },
                                            "headers": {
                                              "Authorization": "Bearer @{body('Parse_MDE_Access_Token')?['access_token']}",
                                              "content-type": "application/json"
                                            },
                                            "method": "POST",
                                            "uri": "https://api.securitycenter.microsoft.com/api/machines/@{items('For_each_resources_for_MDE')?['id']}/isolate"
                                          }
                                        }
                                      },
                                      "runAfter": {},
                                      "type": "Foreach"
                                    },
                                    "Set_Host_Isolation_Succeeded_for_MDE": {
                                      "runAfter": {
                                        "For_each_resources_for_MDE": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "Isolation Succeeded",
                                        "value": true
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Parse_Machine_Id_of_Host": [
                                      "Succeeded"
                                    ]
                                  },
                                  "else": {
                                    "actions": {
                                      "Check_if_response_is_invalid": {
                                        "actions": {
                                          "Invalid_Case_for_MDE": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                              "name": "Message",
                                              "value": "Invalid Resources hence the Host Isolation is Ignored for Host"
                                            }
                                          }
                                        },
                                        "runAfter": {},
                                        "else": {
                                          "actions": {
                                            "No_Resource_to_available__for_Isolation_using_Azure_MDE": {
                                              "runAfter": {},
                                              "type": "SetVariable",
                                              "inputs": {
                                                "name": "Message",
                                                "value": "No Resource to available  for Isolation using Azure MDE"
                                              }
                                            }
                                          }
                                        },
                                        "expression": {
                                          "and": [
                                            {
                                              "equals": [
                                                "@variables('Invalid EDR resources')",
                                                "Invalid"
                                              ]
                                            }
                                          ]
                                        },
                                        "type": "If"
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greater": [
                                          "@length(body('Parse_Machine_Id_of_Host')?['value'])",
                                          0
                                        ]
                                      },
                                      {
                                        "not": {
                                          "equals": [
                                            "@variables('Invalid EDR resources')",
                                            "Invalid"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "Parse_MDE_Access_Token": {
                                  "runAfter": {
                                    "Authorize_MDE": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('Authorize_MDE')",
                                    "schema": {
                                      "properties": {
                                        "access_token": {
                                          "type": "string"
                                        },
                                        "expires_in": {
                                          "type": "integer"
                                        },
                                        "ext_expires_in": {
                                          "type": "integer"
                                        },
                                        "token_type": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "Parse_Machine_Id_of_Host": {
                                  "runAfter": {
                                    "Check_if_SourceHostname_is_empty_for_MDE_host": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@variables('MDE Response')",
                                    "schema": {
                                      "properties": {
                                        "@@odata.context": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "items": {
                                            "properties": {
                                              "computerDnsName": {
                                                "type": "string"
                                              },
                                              "exposureLevel": {
                                                "type": "string"
                                              },
                                              "firstSeen": {
                                                "type": "string"
                                              },
                                              "healthStatus": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "string"
                                              },
                                              "isAadJoined": {
                                                "type": "boolean"
                                              },
                                              "lastExternalIpAddress": {
                                                "type": "string"
                                              },
                                              "lastIpAddress": {
                                                "type": "string"
                                              },
                                              "lastSeen": {
                                                "type": "string"
                                              },
                                              "machineTags": {
                                                "items": {
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              },
                                              "osBuild": {
                                                "type": "integer"
                                              },
                                              "osPlatform": {
                                                "type": "string"
                                              },
                                              "osProcessor": {
                                                "type": "string"
                                              },
                                              "rbacGroupId": {
                                                "type": "integer"
                                              },
                                              "riskScore": {
                                                "type": "string"
                                              },
                                              "version": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "id",
                                              "computerDnsName",
                                              "firstSeen",
                                              "lastSeen",
                                              "osPlatform",
                                              "version",
                                              "osProcessor",
                                              "lastIpAddress",
                                              "lastExternalIpAddress",
                                              "osBuild",
                                              "healthStatus",
                                              "rbacGroupId",
                                              "riskScore",
                                              "exposureLevel",
                                              "isAadJoined",
                                              "machineTags"
                                            ],
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                }
                              },
                              "runAfter": {},
                              "else": {
                                "actions": {
                                  "No_EDR_has_been_selected": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "Message",
                                      "value": "No EDR has been selected"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@parameters('EDRConfigured')",
                                      "MDE"
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            }
                          }
                        },
                        "expression": {
                          "and": [
                            {
                              "equals": [
                                "@parameters('EDRConfigured')",
                                "Crowdstrike"
                              ]
                            }
                          ]
                        },
                        "type": "If"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@length(body('Parse_Triggering_Process_Information')?['processes'])",
                          0
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "For_each_Events": {
                  "foreach": "@body('Parse_Events')",
                  "actions": {
                    "Append_to_array_variable": {
                      "runAfter": {},
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "EventId",
                        "value": "@items('For_each_Events')['eventId']"
                      }
                    }
                  },
                  "runAfter": {
                    "Parse_Events": [
                      "Succeeded",
                      "Failed",
                      "Skipped",
                      "TimedOut"
                    ]
                  },
                  "type": "Foreach"
                },
                "Get_Events_of_the_Incident": {
                  "runAfter": {},
                  "type": "Http",
                  "inputs": {
                    "headers": {
                      "Authorization": "Basic @{parameters('Illusive API Key')}",
                      "Content-Type": "application/json"
                    },
                    "method": "GET",
                    "uri": "@{parameters('Illusive Base URL')}/api/v1/incidents/events?incident_id=@{variables('Illusive Incident Id')}"
                  }
                },
                "Get_Triggering_Process_of_the_Events": {
                  "runAfter": {
                    "For_each_Events": [
                      "Succeeded",
                      "Failed",
                      "Skipped",
                      "TimedOut"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "headers": {
                      "Authorization": "Basic @{parameters('Illusive API Key')}",
                      "Content-Type": "application/json"
                    },
                    "method": "GET",
                    "uri": "@{parameters('Illusive Base URL')}/api/v1/forensics/triggering_process_info?event_id=@{max(variables('EventId'))}"
                  }
                },
                "Parse_Events": {
                  "runAfter": {
                    "Get_Events_of_the_Incident": [
                      "Succeeded",
                      "Failed",
                      "Skipped",
                      "TimedOut"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Get_Events_of_the_Incident')",
                    "schema": {
                      "items": {
                        "properties": {
                          "eventId": {
                            "type": "integer"
                          },
                          "eventTimeUTC": {
                            "type": "string"
                          },
                          "hasForensics": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "hasForensics",
                          "eventId",
                          "eventTimeUTC"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "Parse_Triggering_Process_Information": {
                  "runAfter": {
                    "Get_Triggering_Process_of_the_Events": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Get_Triggering_Process_of_the_Events')",
                    "schema": {
                      "properties": {
                        "processes": {
                          "items": {
                            "properties": {
                              "commandLine": {
                                "type": "string"
                              },
                              "connectionsNum": {
                                "type": "integer"
                              },
                              "md5": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "parent": {
                                "type": "string"
                              },
                              "path": {
                                "type": "string"
                              },
                              "sha256": {
                                "type": "string"
                              },
                              "startTime": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "path",
                              "md5",
                              "sha256",
                              "commandLine",
                              "startTime",
                              "parent",
                              "connectionsNum"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "runAfter": {
                "Check_if_Illusive_incident_details_exists": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('IsolationCriteria')",
                      "ProcessIsolation"
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Parse_Custom_Details": {
              "runAfter": {
                "Parse_Extended_Properties": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Parse_Extended_Properties')?['Custom Details']",
                "schema": {
                  "properties": {
                    "IllusiveIncidentId": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "isHostIsolated": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "isProcessIsolated": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Parse_Extended_Properties": {
              "runAfter": {
                "Initialize_Invalid_EDR_resources": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@triggerBody()?['ExtendedProperties']",
                "schema": {
                  "properties": {
                    "Analytic Rule Ids": {
                      "type": "string"
                    },
                    "Analytic Rule Name": {
                      "type": "string"
                    },
                    "Custom Details": {
                      "type": "string"
                    },
                    "Data Sources": {
                      "type": "string"
                    },
                    "Event Grouping": {
                      "type": "string"
                    },
                    "OriginalQuery": {
                      "type": "string"
                    },
                    "ProcessedBySentinel": {
                      "type": "string"
                    },
                    "Query": {
                      "type": "string"
                    },
                    "Query End Time UTC": {
                      "type": "string"
                    },
                    "Query Period": {
                      "type": "string"
                    },
                    "Query Start Time UTC": {
                      "type": "string"
                    },
                    "Search Query Results Overall Count": {
                      "type": "string"
                    },
                    "Trigger Operator": {
                      "type": "string"
                    },
                    "Trigger Threshold": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Update_Sentinel_Incident_": {
              "actions": {
                "Check_If_isolation_is_of_Process": {
                  "actions": {
                    "Check_for_MDE_Host_Isolation": {
                      "actions": {
                        "For_each_Sentinel_Incident_for_MDE_Host_Isolation": {
                          "foreach": "@body('Parse_Sentinel_Incident_Details')?['value']",
                          "actions": {
                            "Update_Sentinel_Incident_for_MDE_Host_Isolation": {
                              "runAfter": {},
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "incidentArmId": "@items('For_each_Sentinel_Incident_for_MDE_Host_Isolation')?['id']",
                                  "severity": "Medium",
                                  "status": "Active",
                                  "tagsToAdd": {
                                    "TagsToAdd": [
                                      {
                                        "Tag": "Host Isolated"
                                      }
                                    ]
                                  }
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "path": "/Incidents"
                              }
                            }
                          },
                          "runAfter": {},
                          "type": "Foreach"
                        },
                        "Host_Isolated_Successfully_due_to_Process_Restriction": {
                          "runAfter": {
                            "For_each_Sentinel_Incident_for_MDE_Host_Isolation": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "Message",
                            "value": "Host Isolated Successfully for Illusive Incident @{variables('Illusive Incident Id')} due to Process Restriction"
                          }
                        }
                      },
                      "runAfter": {},
                      "else": {
                        "actions": {
                          "For_each_Sentinel_Incident_for_Process_Isolation": {
                            "foreach": "@body('Parse_Sentinel_Incident_Details')?['value']",
                            "actions": {
                              "Update_Sentinel_Incident_for_Process_Isolation": {
                                "runAfter": {},
                                "type": "ApiConnection",
                                "inputs": {
                                  "body": {
                                    "incidentArmId": "@items('For_each_Sentinel_Incident_for_Process_Isolation')?['id']",
                                    "severity": "Medium",
                                    "status": "Active",
                                    "tagsToAdd": {
                                      "TagsToAdd": [
                                        {
                                          "Tag": "Process Isolated"
                                        }
                                      ]
                                    }
                                  },
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "put",
                                  "path": "/Incidents"
                                }
                              }
                            },
                            "runAfter": {},
                            "type": "Foreach"
                          },
                          "Process_Isolated_Successfully": {
                            "runAfter": {
                              "For_each_Sentinel_Incident_for_Process_Isolation": [
                                "Succeeded"
                              ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "Message",
                              "value": "Process has been Isolated Successfully for Illusive Incident @{variables('Illusive Incident Id')}"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@variables('MDE Host Isolation')",
                              true
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "runAfter": {},
                  "else": {
                    "actions": {
                      "For_each_Sentinel_Incident_for_Host_Isolation": {
                        "foreach": "@body('Parse_Sentinel_Incident_Details')?['value']",
                        "actions": {
                          "Update_Sentinel_Incident_for_Host_Isolation": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                              "body": {
                                "incidentArmId": "@items('For_each_Sentinel_Incident_for_Host_Isolation')?['id']",
                                "severity": "Medium",
                                "status": "Active",
                                "tagsToAdd": {
                                  "TagsToAdd": [
                                    {
                                      "Tag": "Host Isolated"
                                    }
                                  ]
                                }
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "put",
                              "path": "/Incidents"
                            }
                          }
                        },
                        "runAfter": {},
                        "type": "Foreach"
                      },
                      "Host_Isolated_Successfully": {
                        "runAfter": {
                          "For_each_Sentinel_Incident_for_Host_Isolation": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "Message",
                          "value": "Host has been Isolated Successfully for Illusive Incident @{variables('Illusive Incident Id')}"
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@length(body('Parse_Triggering_Process_Information')?['processes'])",
                          0
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "Isolate_the_host_or_process": [
                  "Succeeded"
                ]
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('Isolation Succeeded')",
                      true
                    ]
                  }
                ]
              },
              "type": "If"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuresentinelConnectionName'))]",
                "connectionName": "[variables('azuresentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
              }
            }
          }
        }
      }
    }
  ]
}
