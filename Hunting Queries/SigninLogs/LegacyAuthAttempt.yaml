id: b7918a0a-c6fe-4b6d-9111-b0b0c477f1a8
name: Login attempts using Legacy Auth
description: |
  'This query over Azure AD sign-in activity highlights use of legacy authentication protocol in the
  environment. Because conditional access policies are not evaluated when legacy authentication is used,
  legacy authentication can be used to circumvent all Azure Conditional Access policies.'
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - SigninLogs
tactics:
  - InitialAccess
  - Persistence
relevantTechniques:
  - T1078
  - T1098
query: |

  let starttime = todatetime('{{StartTimeISO}}');
  let endtime = todatetime('{{EndTimeISO}}');
  let lookback = totimespan((endtime-starttime)*7);
  let legacy_auth_protocols = dynamic(["Authenticated SMTP", "Autodiscover", "Exchange ActiveSync", "Exchange Online PowerShell", "Exchange Web Services", "IMAP4", "MAPI over HTTP", "Outlook Anywhere", "Outlook Service", "POP3", "Reporting Web Services", "Other clients"]);
  let legacyAuthentications =
  SigninLogs
  | where TimeGenerated >= ago(lookback)
  // success logons only
  | where ResultType == 0
  | extend ClientAppUsed = iff(isempty(ClientAppUsed)==true,"Unknown" ,ClientAppUsed)
  | extend isLegacyAuth = iff(ClientAppUsed in (legacy_auth_protocols), "Yes", "No")
  | where isLegacyAuth=="Yes";
  legacyAuthentications
  | where TimeGenerated >= starttime
  // Don't alert for accounts already seen using legacy auth in prior 7 days
  | join kind=leftanti (
     legacyAuthentications
     | where TimeGenerated between(ago(lookback)..starttime)
  ) on UserPrincipalName, ClientAppUsed, AppDisplayName, IPAddress
  | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser
  | extend LocationString= strcat(tostring(LocationDetails["countryOrRegion"]), "/",
  tostring(LocationDetails["state"]), "/", tostring(LocationDetails["city"]))
  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), AttemptCount = count()
  by UserPrincipalName, ClientAppUsed, AppDisplayName, IPAddress, isLegacyAuth, tostring(OS), tostring(Browser), LocationString
  | sort by AttemptCount desc nulls last
  | extend timestamp = StartTime, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress

entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPCustomEntity