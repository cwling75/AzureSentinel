{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspaceName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "ASimNetworkSessionMicrosoftWindowsEventFirewall",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "Microsoft Windows Event Firewall Network Sessions",
            "category": "Security",
            "FunctionAlias": "ASimNetworkSessionMicrosoftWindowsEventFirewall",
            "query": "// Data tables for mapping raw values into string\nlet LayerCodeTable = datatable (LayerCode:string,LayerName:string)[\n  '%%14596', 'IP Packet',\n  '%%14597', 'Transport',\n  '%%14598', 'Forward',\n  '%%14599', 'Stream',\n  '%%14600', 'Datagram Data',\n  '%%14601', 'ICMP Error',\n  '%%14602', 'MAC 802.3',\n  '%%14603', 'MAC Native',\n  '%%14604', 'vSwitch',\n  '%%14608', 'Resource Assignment',\n  '%%14609', 'Listen',\n  '%%14610', 'Receive/Accept',\n  '%%14611', 'Connect',\n  '%%14612', 'Flow Established',\n  '%%14614', 'Resource Release',\n  '%%14615', 'Endpoint Closure',\n  '%%14616', 'Connect Redirect',\n  '%%14617', 'Bind Redirect',\n  '%%14624', 'Stream Packet'];\nlet ProtocolTable = datatable (Protocol:int, NetworkProtocol: string)[\n  1, 'ICMP',\n  3, 'GGP',\n  6, 'TCP',\n  8, 'EGP',\n  12, 'PUP',\n  17, 'UDP',\n  20, 'HMP',\n  27, 'RDP',\n  46, 'RSVP',\n  47, 'PPTP data over GRE',\n  50, 'ESP',\n  51, 'AH',\n  66, 'RVD',\n  88, 'IGMP',\n  89, 'OSPF'];\nlet Directions = datatable (DirectionCode:string,NetworkDirection:string, isOutBound:bool)[\n  '%%14592', 'Inbound', false,\n  '%%14593', 'Outbound', true,\n  '%%14594', 'Forward',false,\n  '%%14595', 'Bidirectional', false,\n  '%%14609', 'Listen', false];\n///////////////////////////////////////////////////////\n// this query extract data fields from EventData column from SecurityEvent table\n///////////////////////////////////////////////////////\nlet WindowsFirewall_SecurityEvent=(){ // Event IDs between (5151 .. 5159)\n// will be extracting Event specific fields from 'EventData' field\nlet SecurityEvent_5152 = \n  SecurityEvent | where not(disabled)\n  | where EventID==5152\n  | parse EventData with * '<Data Name=\"ProcessId\">'ProcessId:string'</Data>'\n      '\\x0d\\x0a  <Data Name=\"Application\">'Application'</Data>'\n      '\\x0d\\x0a  <Data Name=\"Direction\">'DirectionCode'</Data>'\n      '\\x0d\\x0a  <Data Name=\"SourceAddress\">'SourceAddress'</Data>'\n      '\\x0d\\x0a  <Data Name=\"SourcePort\">'SourcePort'</Data>'\n      '\\x0d\\x0a  <Data Name=\"DestAddress\">'DestAddress'</Data>'\n      '\\x0d\\x0a  <Data Name=\"DestPort\">'DestPort:int'</Data>'\n      '\\x0d\\x0a  <Data Name=\"Protocol\">'Protocol:int'</Data>'\n      '\\x0d\\x0a  <Data Name=\"FilterRTID\">'NetworkRuleNumber'</Data>'\n      '\\x0d\\x0a  <Data Name=\"LayerName\">'LayerCode'</Data>'\n      '\\x0d\\x0a  <Data Name=\"LayerRTID\">'LayerRTID'</Data>'*;\nlet SecurityEvent_5154_5155_5158_5159 =\nSecurityEvent | where not(disabled)\n| where EventID in (5154, 5155, 5158, 5159)\n| parse EventData with * '<Data Name=\"ProcessId\">'ProcessId:string'</Data>' \n  '\\x0d\\x0a  <Data Name=\"Application\">'Application'</Data>'\n  '\\x0d\\x0a  <Data Name=\"SourceAddress\">'SourceAddress'</Data>'\n  '\\x0d\\x0a  <Data Name=\"SourcePort\">'SourcePort'</Data>'\n  '\\x0d\\x0a  <Data Name=\"Protocol:int\">'Protocol'</Data>'\n  '\\x0d\\x0a  <Data Name=\"FilterRTID\">'NetworkRuleNumber'</Data>'\n  '\\x0d\\x0a  <Data Name=\"LayerName\">'LayerCode'</Data>'\n  '\\x0d\\x0a  <Data Name=\"LayerRTID\">'LayerRTID'</Data>'*\n| extend DirectionCode = \"%%14609\";\nlet SecurityEvent_5156_5157 =\n    SecurityEvent | where not(disabled)\n    | where EventID in (5156, 5157)\n    | parse EventData with * '<Data Name=\"ProcessID\">'ProcessID:string'</Data>'\n      '\\x0d\\x0a  <Data Name=\"Application\">'Application'</Data>'\n      '\\x0d\\x0a  <Data Name=\"Direction\">'DirectionCode'</Data>'\n      '\\x0d\\x0a  <Data Name=\"SourceAddress\">'SourceAddress'</Data>'\n      '\\x0d\\x0a  <Data Name=\"SourcePort\">'SourcePort'</Data>'\n      '\\x0d\\x0a  <Data Name=\"DestAddress\">'DestAddress'</Data>'\n      '\\x0d\\x0a  <Data Name=\"DestPort\">'DestPort:int'</Data>'\n      '\\x0d\\x0a  <Data Name=\"Protocol\">'Protocol:int'</Data>'\n      '\\x0d\\x0a  <Data Name=\"FilterRTID\">'NetworkRuleNumber'</Data>'\n      '\\x0d\\x0a  <Data Name=\"LayerName\">'LayerCode'</Data>'\n      '\\x0d\\x0a  <Data Name=\"LayerRTID\">'LayerRTID'</Data>'\n      '\\x0d\\x0a  <Data Name=\"RemoteUserID\">'RemoteUserID'</Data>'\n      '\\x0d\\x0a  <Data Name=\"RemoteMachineID\">'RemoteMachineID'</Data>'*\n    | project-away EventData;\nunion SecurityEvent_5152, SecurityEvent_5156_5157, SecurityEvent_5154_5155_5158_5159\n    | lookup Directions on DirectionCode\n    | project-rename DvcHostname = Computer\n    | extend\n      SrcAppName = iff(isOutBound, Application, \"\"),\n      DstAppName = iff(not(isOutBound), Application, \"\"),\n      SrcIpAddr = iff(isOutBound, DestAddress, SourceAddress),\n      DstIpAddr = iff(not(isOutBound), SourceAddress, DestAddress),\n      SrcHostId = iff(isOutBound, RemoteMachineID, \"\"),\n      DstHostId = iff(not(isOutBound), RemoteMachineID, \"\"),\n      SrcPortNumber = iff(isOutBound, toint(DestPort), toint(SourcePort)),\n      DstPortNumber = iff(not(isOutBound), toint(SourcePort), toint(DestPort)),\n      SrcProcessId =  iff(isOutBound, tostring(ProcessId), \"\"),\n      DstProcessId =  iff(not(isOutBound), tostring(ProcessId), \"\"),\n      DstUserId = iff(isOutBound, RemoteUserID, \"\"),\n      SrcUserId = iff(not(isOutBound), RemoteUserID, \"\"),\n      DstHostname = iff(isOutBound, \"\", DvcHostname),\n      SrcHostname = iff(isOutBound, DvcHostname, \"\")\n};\n//////////////////////////////////////////////////////\n// this query extract the data from WindowsEvent table\n//////////////////////////////////////////////////////\nlet WindowsFirewall_WindowsEvent=(){   \n          WindowsEvent | where not(disabled)\n          | where EventID between (5150 .. 5159)\n          | project-rename DvcHostname = Computer\n          | extend \n              EventSeverity=tostring(EventData.Severity),\n              LayerCode = tostring(EventData.LayerName),\n              NetworkRuleNumber = tostring(EventData.FilterRTID),\n              Protocol = toint(EventData.Protocol),\n              DirectionCode = iff(EventID in (5154, 5155, 5158, 5159), \"%%14609\",tostring(EventData.Direction))\n          | lookup Directions on DirectionCode \n          | extend  SrcAppName = iff(isOutBound, tostring(EventData.Application), \"\"),\n                    DstAppName = iff(not(isOutBound), tostring(EventData.Application), \"\"),\n                    SrcIpAddr = iff(isOutBound, tostring(EventData.DestAddress), tostring(EventData.SourceAddress)),\n                    DstIpAddr = iff(not(isOutBound), tostring(EventData.SourceAddress), tostring(EventData.DestAddress)),\n                    SrcHostId = iff(isOutBound, tostring(EventData.RemoteMachineID), \"\"),\n                    DstHostId = iff(not(isOutBound), tostring(EventData.RemoteMachineID), \"\"),\n                    SrcPortNumber = iff(isOutBound, toint(EventData.DestPort), toint(EventData.SourcePort)),\n                    DstPortNumber = iff(not(isOutBound), toint(EventData.SourcePort), toint(EventData.DestPort)),\n                    SrcProcessId =  iff(isOutBound, tostring(EventData.ProcessId), \"\"),\n                    DstProcessId =  iff(not(isOutBound), tostring(EventData.ProcessId), \"\"),\n                    DstUserId = iff(isOutBound, tostring(EventData.RemoteUserID), \"\"),\n                    SrcUserId = iff(not(isOutBound), tostring(EventData.RemoteUserID), \"\"),\n                    DstHostname = iff(isOutBound, \"\", DvcHostname),\n                    SrcHostname = iff(isOutBound, DvcHostname, \"\")\n          | project-away EventData\n      };\n// Main query -> outputs both schemas as one normalized table\nunion WindowsFirewall_SecurityEvent, WindowsFirewall_WindowsEvent\n     | extend \n            DvcAction = iff(EventID in (5154, 5156, 5158), \"Allow\", \"Deny\"),\n            DvcOs = 'Windows',\n            DstAppType = \"Process\",\n            DstUserType = \"SID\",\n            SrcAppType = \"Process\",\n            SrcUserType = \"SID\",\n            EventType = \"NetworkSession\",\n            EventSchema = \"NetworkSession\",\n            EventSchemaVersion=\"0.2.0\",\n            EventCount=toint(1),\n            EventVendor = \"Microsoft\",\n            EventProduct = \"WindowsFirewall\",\n            EventResult = iff(EventID in (5154, 5156, 5158), \"Success\", \"Failure\"),\n            EventStartTime = TimeGenerated,\n            EventEndTime = TimeGenerated,\n            EventOriginalUid = EventOriginId,\n            EventSeverity = iff(EventID  in (5154, 5156, 5158), \"Informational\", \"Low\"),\n    // aliases\n            Hostname = DstHostname,\n            IpAddr = SrcIpAddr,\n            Src = SrcIpAddr,\n            Dst = DstIpAddr\n    | project-rename DvcHostname = Computer\n    | lookup LayerCodeTable on LayerCode\n    | lookup ProtocolTable on Protocol\n    | project-away LayerCode, DirectionCode, Protocol",
            "version": 1,
            "functionParameters": "disabled:bool=False"
          }
        }
      ]
    }
  ]
}