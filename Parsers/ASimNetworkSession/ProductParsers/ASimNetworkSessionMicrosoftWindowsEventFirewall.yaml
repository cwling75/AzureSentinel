Parser:
  Title: Microsoft Windows Event Firewall Network Sessions
  Version: '0.1'
  LastUpdated: Sep 1, 2021
Product:
  Name: WindowsEventFirewall
Normalization:
  Schema: NetworkSession
  Version: '0.2.0'
References:
- Title: ASIM Network Session Schema
  Link: https://aka.ms/ASimNetworkSessionDoc
- Title: ASIM
  Link: https:/aka.ms/MsASIM
Description: |
        This Query Parser maps Microsoft Windows Firewall Events (WindowsEvent and SecurityEvent tables) to the Advanced SIEM Information Model Network Session schema.
        Event IDs which are parsed as part of this parser: 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5167, 5158, 5159
ParserName: ASimNetworkSessionMicrosoftWindowsEventFirewall
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  // Data tables for mapping raw values into string
  let LayerCodeTable = datatable (LayerCode:string,LayerName:string)[
    '%%14596', 'IP Packet',
    '%%14597', 'Transport',
    '%%14598', 'Forward',
    '%%14599', 'Stream',
    '%%14600', 'Datagram Data',
    '%%14601', 'ICMP Error',
    '%%14602', 'MAC 802.3',
    '%%14603', 'MAC Native',
    '%%14604', 'vSwitch',
    '%%14608', 'Resource Assignment',
    '%%14609', 'Listen',
    '%%14610', 'Receive/Accept',
    '%%14611', 'Connect',
    '%%14612', 'Flow Established',
    '%%14614', 'Resource Release',
    '%%14615', 'Endpoint Closure',
    '%%14616', 'Connect Redirect',
    '%%14617', 'Bind Redirect',
    '%%14624', 'Stream Packet'];
  let ProtocolTable = datatable (Protocol:int, NetworkProtocol: string)[
    1, 'ICMP',
    3, 'GGP',
    6, 'TCP',
    8, 'EGP',
    12, 'PUP',
    17, 'UDP',
    20, 'HMP',
    27, 'RDP',
    46, 'RSVP',
    47, 'PPTP data over GRE',
    50, 'ESP',
    51, 'AH',
    66, 'RVD',
    88, 'IGMP',
    89, 'OSPF'];
  let Directions = datatable (DirectionCode:string,NetworkDirection:string, isOutBound:bool)[
    '%%14592', 'Inbound', false,
    '%%14593', 'Outbound', true,
    '%%14594', 'Forward',false,
    '%%14595', 'Bidirectional', false,
    '%%14609', 'Listen', false];
  ///////////////////////////////////////////////////////
  // this query extract data fields from EventData column from SecurityEvent table
  ///////////////////////////////////////////////////////
  let WindowsFirewall_SecurityEvent=(){ // Event IDs between (5151 .. 5159)
  // will be extracting Event specific fields from 'EventData' field
  let SecurityEvent_5152 = 
    SecurityEvent | where not(disabled)
    | where EventID==5152
    | parse EventData with * '<Data Name="ProcessId">'ProcessId:string'</Data>'
        '\x0d\x0a  <Data Name="Application">'Application'</Data>'
        '\x0d\x0a  <Data Name="Direction">'DirectionCode'</Data>'
        '\x0d\x0a  <Data Name="SourceAddress">'SourceAddress'</Data>'
        '\x0d\x0a  <Data Name="SourcePort">'SourcePort'</Data>'
        '\x0d\x0a  <Data Name="DestAddress">'DestAddress'</Data>'
        '\x0d\x0a  <Data Name="DestPort">'DestPort:int'</Data>'
        '\x0d\x0a  <Data Name="Protocol">'Protocol:int'</Data>'
        '\x0d\x0a  <Data Name="FilterRTID">'NetworkRuleNumber'</Data>'
        '\x0d\x0a  <Data Name="LayerName">'LayerCode'</Data>'
        '\x0d\x0a  <Data Name="LayerRTID">'LayerRTID'</Data>'*;
  let SecurityEvent_5154_5155_5158_5159 =
  SecurityEvent | where not(disabled)
  | where EventID in (5154, 5155, 5158, 5159)
  | parse EventData with * '<Data Name="ProcessId">'ProcessId:string'</Data>' 
    '\x0d\x0a  <Data Name="Application">'Application'</Data>'
    '\x0d\x0a  <Data Name="SourceAddress">'SourceAddress'</Data>'
    '\x0d\x0a  <Data Name="SourcePort">'SourcePort'</Data>'
    '\x0d\x0a  <Data Name="Protocol:int">'Protocol'</Data>'
    '\x0d\x0a  <Data Name="FilterRTID">'NetworkRuleNumber'</Data>'
    '\x0d\x0a  <Data Name="LayerName">'LayerCode'</Data>'
    '\x0d\x0a  <Data Name="LayerRTID">'LayerRTID'</Data>'*
  | extend DirectionCode = "%%14609";
  let SecurityEvent_5156_5157 =
      SecurityEvent | where not(disabled)
      | where EventID in (5156, 5157)
      | parse EventData with * '<Data Name="ProcessID">'ProcessID:string'</Data>'
        '\x0d\x0a  <Data Name="Application">'Application'</Data>'
        '\x0d\x0a  <Data Name="Direction">'DirectionCode'</Data>'
        '\x0d\x0a  <Data Name="SourceAddress">'SourceAddress'</Data>'
        '\x0d\x0a  <Data Name="SourcePort">'SourcePort'</Data>'
        '\x0d\x0a  <Data Name="DestAddress">'DestAddress'</Data>'
        '\x0d\x0a  <Data Name="DestPort">'DestPort:int'</Data>'
        '\x0d\x0a  <Data Name="Protocol">'Protocol:int'</Data>'
        '\x0d\x0a  <Data Name="FilterRTID">'NetworkRuleNumber'</Data>'
        '\x0d\x0a  <Data Name="LayerName">'LayerCode'</Data>'
        '\x0d\x0a  <Data Name="LayerRTID">'LayerRTID'</Data>'
        '\x0d\x0a  <Data Name="RemoteUserID">'RemoteUserID'</Data>'
        '\x0d\x0a  <Data Name="RemoteMachineID">'RemoteMachineID'</Data>'*
      | project-away EventData;
  union SecurityEvent_5152, SecurityEvent_5156_5157, SecurityEvent_5154_5155_5158_5159
      | lookup Directions on DirectionCode
      | project-rename DvcHostname = Computer
      | extend
        SrcAppName = iff(isOutBound, Application, ""),
        DstAppName = iff(not(isOutBound), Application, ""),
        SrcIpAddr = iff(isOutBound, DestAddress, SourceAddress),
        DstIpAddr = iff(not(isOutBound), SourceAddress, DestAddress),
        SrcHostId = iff(isOutBound, RemoteMachineID, ""),
        DstHostId = iff(not(isOutBound), RemoteMachineID, ""),
        SrcPortNumber = iff(isOutBound, toint(DestPort), toint(SourcePort)),
        DstPortNumber = iff(not(isOutBound), toint(SourcePort), toint(DestPort)),
        SrcProcessId =  iff(isOutBound, tostring(ProcessId), ""),
        DstProcessId =  iff(not(isOutBound), tostring(ProcessId), ""),
        DstUserId = iff(isOutBound, RemoteUserID, ""),
        SrcUserId = iff(not(isOutBound), RemoteUserID, ""),
        DstHostname = iff(isOutBound, "", DvcHostname),
        SrcHostname = iff(isOutBound, DvcHostname, "")
  };
  //////////////////////////////////////////////////////
  // this query extract the data from WindowsEvent table
  //////////////////////////////////////////////////////
  let WindowsFirewall_WindowsEvent=(){   
            WindowsEvent | where not(disabled)
            | where EventID between (5150 .. 5159)
            | project-rename DvcHostname = Computer
            | extend 
                EventSeverity=tostring(EventData.Severity),
                LayerCode = tostring(EventData.LayerName),
                NetworkRuleNumber = tostring(EventData.FilterRTID),
                Protocol = toint(EventData.Protocol),
                DirectionCode = iff(EventID in (5154, 5155, 5158, 5159), "%%14609",tostring(EventData.Direction))
            | lookup Directions on DirectionCode 
            | extend  SrcAppName = iff(isOutBound, tostring(EventData.Application), ""),
                      DstAppName = iff(not(isOutBound), tostring(EventData.Application), ""),
                      SrcIpAddr = iff(isOutBound, tostring(EventData.DestAddress), tostring(EventData.SourceAddress)),
                      DstIpAddr = iff(not(isOutBound), tostring(EventData.SourceAddress), tostring(EventData.DestAddress)),
                      SrcHostId = iff(isOutBound, tostring(EventData.RemoteMachineID), ""),
                      DstHostId = iff(not(isOutBound), tostring(EventData.RemoteMachineID), ""),
                      SrcPortNumber = iff(isOutBound, toint(EventData.DestPort), toint(EventData.SourcePort)),
                      DstPortNumber = iff(not(isOutBound), toint(EventData.SourcePort), toint(EventData.DestPort)),
                      SrcProcessId =  iff(isOutBound, tostring(EventData.ProcessId), ""),
                      DstProcessId =  iff(not(isOutBound), tostring(EventData.ProcessId), ""),
                      DstUserId = iff(isOutBound, tostring(EventData.RemoteUserID), ""),
                      SrcUserId = iff(not(isOutBound), tostring(EventData.RemoteUserID), ""),
                      DstHostname = iff(isOutBound, "", DvcHostname),
                      SrcHostname = iff(isOutBound, DvcHostname, "")
            | project-away EventData
        };
  // Main query -> outputs both schemas as one normalized table
  union WindowsFirewall_SecurityEvent, WindowsFirewall_WindowsEvent
       | extend 
              DvcAction = iff(EventID in (5154, 5156, 5158), "Allow", "Deny"),
              DvcOs = 'Windows',
              DstAppType = "Process",
              DstUserType = "SID",
              SrcAppType = "Process",
              SrcUserType = "SID",
              EventType = "NetworkSession",
              EventSchema = "NetworkSession",
              EventSchemaVersion="0.2.0",
              EventCount=toint(1),
              EventVendor = "Microsoft",
              EventProduct = "WindowsFirewall",
              EventResult = iff(EventID in (5154, 5156, 5158), "Success", "Failure"),
              EventStartTime = TimeGenerated,
              EventEndTime = TimeGenerated,
              EventOriginalUid = EventOriginId,
              EventSeverity = iff(EventID  in (5154, 5156, 5158), "Informational", "Low"),
      // aliases
              Hostname = DstHostname,
              IpAddr = SrcIpAddr,
              Src = SrcIpAddr,
              Dst = DstIpAddr
      | project-rename DvcHostname = Computer
      | lookup LayerCodeTable on LayerCode
      | lookup ProtocolTable on Protocol
      | project-away LayerCode, DirectionCode, Protocol